[00:00:00] Build started
[00:00:00] git clone -q --branch=master https://github.com/scikit-learn/scikit-learn.git C:\projects\scikit-learn
[00:00:27] git checkout -qf 95c4172db64304ed5aae75fcb5241dbd1726fb4e
[00:00:28] Running Install scripts
[00:00:28] powershell ./build_tools/appveyor/install.ps1
[00:00:29] Installing Python 2.7.8 for 32 bit architecture to C:\Python27
[00:00:29] 
[00:00:29] C:\Python27 already exists, skipping.
[00:00:29] 
[00:00:29] False
[00:00:29] 
[00:00:29] pip already installed.
[00:00:29] 
[00:00:29] SET PATH=%PYTHON%;%PYTHON%\Scripts;%PATH%
[00:00:29] python -m pip install -U pip
[00:00:31] Collecting pip
[00:00:31]   Downloading pip-8.1.2-py2.py3-none-any.whl (1.2MB)
[00:00:31] Installing collected packages: pip
[00:00:31]   Found existing installation: pip 7.1.2
[00:00:31]     Uninstalling pip-7.1.2:
[00:00:32]       Successfully uninstalled pip-7.1.2
[00:00:33] Successfully installed pip-8.1.2
[00:00:33] python --version
[00:00:33] Python 2.7.11
[00:00:33] python -c "import struct; print(struct.calcsize('P') * 8)"
[00:00:34] 32
[00:00:34] pip --version
[00:00:34] pip 8.1.2 from c:\python27\lib\site-packages (python 2.7)
[00:00:34] 
[00:00:34] %CMD_IN_ENV% pip install --timeout=60 --trusted-host 28daf2247a33ed269873-7b1aad3fab3cc330e1fd9d109892382a.r6.cf2.rackcdn.com -r build_tools/appveyor/requirements.txt
[00:00:34] Using default MSVC build environment for 32 bit architecture
[00:00:34] Executing: pip install --timeout=60 --trusted-host 28daf2247a33ed269873-7b1aad3fab3cc330e1fd9d109892382a.r6.cf2.rackcdn.com -r build_tools/appveyor/requirements.txt
[00:00:35] Collecting numpy==1.9.3 (from -r build_tools/appveyor/requirements.txt (line 10))
[00:00:37]   Downloading http://28daf2247a33ed269873-7b1aad3fab3cc330e1fd9d109892382a.r6.cf2.rackcdn.com/numpy-1.9.3%2Bmkl-cp27-none-win32.whl (16.5MB)
[00:00:38] Collecting scipy==0.16.0 (from -r build_tools/appveyor/requirements.txt (line 11))
[00:00:38]   Downloading http://28daf2247a33ed269873-7b1aad3fab3cc330e1fd9d109892382a.r6.cf2.rackcdn.com/scipy-0.16.0-cp27-none-win32.whl (53.9MB)
[00:00:47] Collecting cython (from -r build_tools/appveyor/requirements.txt (line 12))
[00:00:48]   Downloading Cython-0.24-cp27-none-win32.whl (1.8MB)
[00:00:48] Collecting nose (from -r build_tools/appveyor/requirements.txt (line 13))
[00:00:49]   Downloading nose-1.3.7-py2-none-any.whl (154kB)
[00:00:49] Collecting nose-timer (from -r build_tools/appveyor/requirements.txt (line 14))
[00:00:49]   Downloading nose-timer-0.6.0.tar.gz
[00:00:50] Collecting wheel (from -r build_tools/appveyor/requirements.txt (line 15))
[00:00:50]   Downloading wheel-0.29.0-py2.py3-none-any.whl (66kB)
[00:00:50] Collecting wheelhouse_uploader (from -r build_tools/appveyor/requirements.txt (line 16))
[00:00:50]   Downloading wheelhouse_uploader-0.9.3-py2.py3-none-any.whl
[00:00:50] Collecting termcolor (from nose-timer->-r build_tools/appveyor/requirements.txt (line 14))
[00:00:50]   Downloading termcolor-1.1.0.tar.gz
[00:00:51] Collecting apache-libcloud (from wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:51]   Downloading apache_libcloud-0.20.1-py2.py3-none-any.whl (1.9MB)
[00:00:53] Requirement already satisfied (use --upgrade to upgrade): setuptools>=0.9 in c:\python27\lib\site-packages (from wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:53] Collecting packaging (from wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:53]   Downloading packaging-16.7-py2.py3-none-any.whl
[00:00:53] Collecting futures (from wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:53]   Downloading futures-3.0.5-py2-none-any.whl
[00:00:53] Collecting backports.ssl-match-hostname (from apache-libcloud->wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:53]   Downloading backports.ssl_match_hostname-3.5.0.1.tar.gz
[00:00:53] Collecting pyparsing (from packaging->wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:54]   Downloading pyparsing-2.1.4-py2.py3-none-any.whl (40kB)
[00:00:54] Collecting six (from packaging->wheelhouse_uploader->-r build_tools/appveyor/requirements.txt (line 16))
[00:00:54]   Downloading six-1.10.0-py2.py3-none-any.whl
[00:00:54] Installing collected packages: numpy, scipy, cython, nose, termcolor, nose-timer, wheel, backports.ssl-match-hostname, apache-libcloud, pyparsing, six, packaging, futures, wheelhouse-uploader
[00:01:02]   Running setup.py install for termcolor: started
[00:01:03]     Running setup.py install for termcolor: finished with status 'done'
[00:01:03]   Running setup.py install for nose-timer: started
[00:01:03]     Running setup.py install for nose-timer: finished with status 'done'
[00:01:03]   Running setup.py install for backports.ssl-match-hostname: started
[00:01:03]     Running setup.py install for backports.ssl-match-hostname: finished with status 'done'
[00:01:08] Successfully installed apache-libcloud-0.20.1 backports.ssl-match-hostname-3.5.0.1 cython-0.24 futures-3.0.5 nose-1.3.7 nose-timer-0.6.0 numpy-1.9.3 packaging-16.7 pyparsing-2.1.4 scipy-0.16.0 six-1.10.0 termcolor-1.1.0 wheel-0.29.0 wheelhouse-uploader-0.9.3
[00:01:09] %CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst -b doc/logos/scikit-learn-logo.bmp
[00:01:09] Using default MSVC build environment for 32 bit architecture
[00:01:09] Executing: python setup.py bdist_wheel bdist_wininst -b doc/logos/scikit-learn-logo.bmp
[00:02:03] sklearn
[00:02:03] Processing sklearn\_isotonic.pyx
[00:02:03] Processing sklearn\cluster\_dbscan_inner.pyx
[00:02:03] Processing sklearn\cluster\_hierarchical.pyx
[00:02:03] Processing sklearn\cluster\_k_means.pyx
[00:02:03] Processing sklearn\cluster\_k_means_elkan.pyx
[00:02:03] Processing sklearn\datasets\_svmlight_format.pyx
[00:02:03] Processing sklearn\decomposition\cdnmf_fast.pyx
[00:02:03] Processing sklearn\decomposition\_online_lda.pyx
[00:02:03] Processing sklearn\ensemble\_gradient_boosting.pyx
[00:02:03] Processing sklearn\feature_extraction\_hashing.pyx
[00:02:03] Processing sklearn\linear_model\cd_fast.pyx
[00:02:03] Processing sklearn\linear_model\sag_fast.pyx
[00:02:03] Processing sklearn\linear_model\sgd_fast.pyx
[00:02:03] Processing sklearn\manifold\_barnes_hut_tsne.pyx
[00:02:03] Processing sklearn\manifold\_utils.pyx
[00:02:03] Processing sklearn\metrics\pairwise_fast.pyx
[00:02:03] Processing sklearn\metrics\cluster\expected_mutual_info_fast.pyx
[00:02:03] Processing sklearn\neighbors\ball_tree.pyx
[00:02:03] Processing sklearn\neighbors\dist_metrics.pyx
[00:02:03] Processing sklearn\neighbors\kd_tree.pyx
[00:02:03] Processing sklearn\neighbors\typedefs.pyx
[00:02:03] Processing sklearn\svm\liblinear.
[00:02:03] pyx
[00:02:03] Processing sklearn\svm\libsvm.pyx
[00:02:03] Processing sklearn\svm\libsvm_sparse.pyx
[00:02:03] Processing sklearn\tree\_criterion.pyx
[00:02:03] Processing sklearn\tree\_splitter.pyx
[00:02:03] Processing sklearn\tree\_tree.pyx
[00:02:03] Processing sklearn\tree\_utils.pyx
[00:02:03] Processing sklearn\utils\arrayfuncs.pyx
[00:02:03] Processing sklearn\utils\fast_dict.pyx
[00:02:03] Processing sklearn\utils\graph_shortest_path.pyx
[00:02:03] Processing sklearn\utils\lgamma.pyx
[00:02:03] Processing sklearn\utils\murmurhash.pyx
[00:02:03] Processing sklearn\utils\seq_dataset.pyx
[00:02:03] Processing sklearn\utils\sparsefuncs_fast.pyx
[00:02:03] Processing sklearn\utils\weight_vector.pyx
[00:02:03] Processing sklearn\utils\_logistic_sigmoid.pyx
[00:02:03] Processing sklearn\utils\_random.pyx
[00:02:03] Processing sklearn\utils\sparsetools\_graph_tools.pyx
[00:02:03] Processing sklearn\utils\sparsetools\_traversal.pyx
[00:02:03] Processing sklearn\__check_build\_check_build.pyx
[00:02:03] Generating cython files
[00:02:03] Cythonizing sources
[00:02:03] blas_opt_info:
[00:02:03] blas_mkl_info:
[00:02:03]   libraries mkl_lapack95,mkl_blas95,mkl_intel_c,mkl_intel_thread,mkl_core,libiomp5md,libifportmd not found in []
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] openblas_info:
[00:02:03]   libraries openblas not found in ['C:\\Python27\\lib', 'C:\\', 'C:\\Python27\\libs']
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] atlas_3_10_blas_threads_info:
[00:02:03] Setting PTATLAS=ATLAS
[00:02:03]   libraries tatlas not found in ['C:\\Python27\\lib', 'C:\\', 'C:\\Python27\\libs']
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] atlas_3_10_blas_info:
[00:02:03]   libraries satlas not found in ['C:\\Python27\\lib', 'C:\\', 'C:\\Python27\\libs']
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] atlas_blas_threads_info:
[00:02:03] Setting PTATLAS=ATLAS
[00:02:03]   libraries ptf77blas,ptcblas,atlas not found in ['C:\\Python27\\lib', 'C:\\', 'C:\\Python27\\libs']
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] atlas_blas_info:
[00:02:03]   libraries f77blas,cblas,atlas not found in ['C:\\Python27\\lib', 'C:\\', 'C:\\Python27\\libs']
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] blas_info:
[00:02:03]   libraries blas not found in ['C:\\Python27\\lib', 'C:\\', 'C:\\Python27\\libs']
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] blas_src_info:
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03]   NOT AVAILABLE
[00:02:03] 
[00:02:03] running bdist_wheel
[00:02:03] running build
[00:02:03] running config_cc
[00:02:03] unifing config_cc, config, build_clib, build_ext, build commands --compiler options
[00:02:03] running config_fc
[00:02:03] unifing config_fc, config, build_clib, build_ext, build commands --fcompiler options
[00:02:03] ru
[00:02:03] nning build_src
[00:02:03] build_src
[00:02:03] building library "libsvm-skl" sources
[00:02:03] building library "cblas" sources
[00:02:03] building extension "sklearn.__check_build._check_build" sources
[00:02:03] building extension "sklearn.cluster._dbscan_inner" sources
[00:02:03] building extension "sklearn.cluster._hierarchical" sources
[00:02:03] building extension "sklearn.cluster._k_means_elkan" sources
[00:02:03] building extension "sklearn.cluster._k_means" sources
[00:02:03] building extension "sklearn.datasets._svmlight_format" sources
[00:02:03] building extension "sklearn.decomposition._online_lda" sources
[00:02:03] building extension "sklearn.decomposition.cdnmf_fast" sources
[00:02:03] building extension "sklearn.ensemble._gradient_boosting" sources
[00:02:03] building extension "sklearn.feature_extraction._hashing" sources
[00:02:03] building extension "sklearn.manifold._utils" sources
[00:02:03] building extension "sklearn.manifold._barnes_hut_tsne" sources
[00:02:03] building extension "sklearn.metrics.pairwise_fast" sources
[00:02:03] building extension "sklearn.metrics/cluster.expected_mutual_info_fast" sources
[00:02:03] building extension "sklearn.neighbors.bal
[00:02:03] l_tree" sources
[00:02:03] building extension "sklearn.neighbors.kd_tree" sources
[00:02:03] building extension "sklearn.neighbors.dist_metrics" sources
[00:02:03] building extension "sklearn.neighbors.typedefs" sources
[00:02:03] building extension "sklearn.tree._tree" sources
[00:02:03] building extension "sklearn.tree._splitter" sources
[00:02:03] building extension "sklearn.tree._criterion" sources
[00:02:03] building extension "sklearn.tree._utils" sources
[00:02:03] building extension "sklearn.svm.libsvm" sources
[00:02:03] building extension "sklearn.svm.liblinear" sources
[00:02:03] building extension "sklearn.svm.libsvm_sparse" sources
[00:02:03] building extension "sklearn._isotonic" sources
[00:02:03] building extension "sklearn.linear_model.cd_fast" sources
[00:02:03] building extension "sklearn.linear_model.sgd_fast" sources
[00:02:03] building extension "sklearn.linear_model.sag_fast" sources
[00:02:03] building extension "sklearn.utils.sparsetools._traversal" sources
[00:02:03] building extension "sklearn.utils.sparsetools._graph_tools" sources
[00:02:03] building extension "sklearn.utils.sparsefuncs_fast" sources
[00:02:03] building extension "sklearn.utils.arrayfuncs" 
[00:02:03] sources
[00:02:03] building extension "sklearn.utils.murmurhash" sources
[00:02:03] building extension "sklearn.utils.lgamma" sources
[00:02:03] building extension "sklearn.utils.graph_shortest_path" sources
[00:02:03] building extension "sklearn.utils.fast_dict" sources
[00:02:03] building extension "sklearn.utils.seq_dataset" sources
[00:02:03] building extension "sklearn.utils.weight_vector" sources
[00:02:03] building extension "sklearn.utils._random" sources
[00:02:03] building extension "sklearn.utils._logistic_sigmoid" sources
[00:02:03] building data_files sources
[00:02:03] build_src: building npy-pkg config files
[00:02:03] running build_py
[00:02:03] creating build
[00:02:03] creating build\lib.win32-2.7
[00:02:03] creating build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\base.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\calibration.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\cross_validation.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\discriminant_analysis.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\dummy.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\exceptions.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\grid_search.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\isotonic.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\kernel_approximation.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\kernel_ridge.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\lda.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\learning_curve.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\multiclass.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\multioutput.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\naive_bayes.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\pipeline.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\qda.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\random_projection.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\setup.py -> build\lib.win32-2.7\sklearn
[00:02:03] copying sklearn\__init__.py -> build\lib.win32-2.7\sklearn
[00:02:03] creating build\lib.win32-2.7\sklearn\__check_build
[00:02:03] copying sklearn\__check_build\setup.py ->
[00:02:03]  build\lib.win32-2.7\sklearn\__check_build
[00:02:03] copying sklearn\__check_build\__init__.py -> build\lib.win32-2.7\sklearn\__check_build
[00:02:03] creating build\lib.win32-2.7\sklearn\_build_utils
[00:02:03] copying sklearn\_build_utils\__init__.py -> build\lib.win32-2.7\sklearn\_build_utils
[00:02:03] creating build\lib.win32-2.7\sklearn\covariance
[00:02:03] copying sklearn\covariance\empirical_covariance_.py -> build\lib.win32-2.7\sklearn\covariance
[00:02:03] copying sklearn\covariance\graph_lasso_.py -> build\lib.win32-2.7\sklearn\covariance
[00:02:03] copying sklearn\covariance\outlier_detection.py -> build\lib.win32-2.7\sklearn\covariance
[00:02:03] copying sklearn\covariance\robust_covariance.py -> build\lib.win32-2.7\sklearn\covariance
[00:02:03] copying sklearn\covariance\shrunk_covariance_.py -> build\lib.win32-2.7\sklearn\covariance
[00:02:03] copying sklearn\covariance\__init__.py -> build\lib.win32-2.7\sklearn\covariance
[00:02:03] creating build\lib.win32-2.7\sklearn\covariance\tests
[00:02:03] copying sklearn\covariance\tests\test_covariance.py -> build\lib.win32-2.7\sklearn\covariance/tests
[00:02:03] copying sklearn\covariance\tests\test_graph_lasso.py -> build\lib.win32-2.7\sklearn\covariance/tests
[00:02:03] copying sklearn\covariance\tests\test_robust_covariance.py -> build\lib.win32-2.7\sklearn\covariance/tests
[00:02:03] copying sklearn\covariance\tests\__init__.py -> build\lib.win32-2.7\sklearn\covariance/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\cross_decomposition
[00:02:03] copying sklearn\cross_decomposition\cca_.py -> build\lib.win32-2.7\sklearn\cross_decomposition
[00:02:03] copying sklearn\cross_decomposition\pls_.py -> build\lib.win32-2.7\sklearn\cross_decomposition
[00:02:03] copying sklearn\cross_decomposition\__init__.py -> build\lib.win32-2.7\sklearn\cross_decomposition
[00:02:03] creating build\lib.win32-2.7\sklearn\cross_decomposition\tests
[00:02:03] copying sklearn\cross_decomposition\tests\test_pls.py -> build\lib.win32-2.7\sklearn\cross_decomposition/tests
[00:02:03] copying sklearn\cross_decomposition\tests\__init__.py -> build\lib.win32-2.7\sklearn\cross_decomposition/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\base.py -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\from_model.py -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\mutual_info_.py -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\rfe.py
[00:02:03]  -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\univariate_selection.py -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\variance_threshold.py -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] copying sklearn\feature_selection\__init__.py -> build\lib.win32-2.7\sklearn\feature_selection
[00:02:03] creating build\lib.win32-2.7\sklearn\feature_selection\tests
[00:02:03] copying sklearn\feature_selection\tests\test_base.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\test_chi2.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\test_feature_select.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\test_from_model.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\test_mutual_info.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\test_rfe.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\test_variance_threshold.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] copying sklearn\feature_selection\tests\__init__.py -> build\lib.win32-2.7\sklearn\feature_selection/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\correlation_models.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\gaussian_process.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\gpc.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\gpr.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\kernels.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\regression_models.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] copying sklearn\gaussian_process\__init__.py -> build\lib.win32-2.7\sklearn\gaussian_process
[00:02:03] creating build\lib.win32-2.7\sklearn\gaussian_process\tests
[00:02:03] copying sklearn\gaussian_process\tests\test_gaussian_process.py -> build\lib.win32-2.7\sklearn\gaussian_process/tests
[00:02:03] copying sklearn\gaussian_process\tests\test_gpc.py -> build\lib.win32-2.7\sklearn\gaussian_process/tests
[00:02:03] copying sklearn\gaussian_process\tests\test_gpr.py -> build\lib.win32-2.7\sklearn\gaussian_process/tests
[00:02:03] copying sklearn\gaussian_process\tests\test_kernels.py -> build\lib.win32-2.7\sklearn\gaussian_process/tests
[00:02:03] copying sklearn\gaussian_process\tests\__init__.py -> build\lib.win32-2.7\sklearn\gaussian_process/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\mixture
[00:02:03] copying sklearn\mixture\base.py -> build\lib.win32-2.7\sklearn\mixture
[00:02:03] copying sklearn\mixture\dpgmm.py -> build\lib.win32-2.7\sklearn\mixture
[00:02:03] copying sklearn\mixture\gaussian_mixture.py -> build\lib.win32-2.7\sklearn\mixture
[00:02:03] copying sklearn\mixture\gmm.py -> build\lib.win32-2.7\sklearn\mixture
[00:02:03] copying sklearn\mixture\__init__.py -> build\lib.win32-2.7\sklearn\mixture
[00:02:03] creating build\lib.win32-2.7\sklearn\mixture\tests
[00:02:03] copying sklearn\mixture\tests\test_dpgmm.py -> build\lib.win32-2.7\sklearn\mixture/tests
[00:02:03] copying sklearn\mixture\tests\test_gaussian_mixture.py -> build\lib.win32-2.7\sklearn\mixture/tests
[00:02:03] copying sklearn\mixture\tests\test_gmm.py -> build\lib.win32-2.7\sklearn\mixture/tests
[00:02:03] copying sklearn\mixture\tests\__init__.py -> build\lib.win32-2.7\sklearn\mixture/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\model_selection
[00:02:03] copying sklearn\model_selection\_search.py -> build\lib.win32-2.7\sklearn\model_selection
[00:02:03] copying sklearn\model_selection\_split.py -> build\lib.win32-2.7\sklearn\model_selection
[00:02:03] copying sklearn\model_selection\_validation.py -> build\lib.win32-2.7\sklearn\model_selection
[00:02:03] copying sklearn\model_selection\__init__.py -> build\lib.win32-2.7\sklearn\model_selection
[00:02:03] creating build\lib.win32-2.7\sklearn\model_selection\tests
[00:02:03] copying sklearn\model_selection\tests\test_search.py -> build\lib.win32-2.7\sklearn\model_selection/tests
[00:02:03] copying sklearn\model_selection\tests\test_split.py -> build\lib.win32-2.7\sklearn\model_selection/tests
[00:02:03] copying sklearn\model_selection\tests\test_validation.py -> build\lib.win32-2.7\sklearn\model_selection/tests
[00:02:03] copying sklearn\model_selection\tests\__init__.py -> build\lib.win32-2.7\sklearn\model_selection/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\neural_network
[00:02:03] copying sklearn\neural_network\multilayer_perceptron.py -> build\lib.win32-2.7\sklearn\neural_network
[00:02:03] copying sklearn\neural_network\rbm.py -> build\lib.win32-2.7\sklearn\neural_network
[00:02:03] copying sklearn\neural_network\_base.py -> build\lib.win32-2.7\sklearn\neural_network
[00:02:03] copying sklearn\neural_network\_stochastic_optimizers.py -> build\lib.win32-2.7\sklearn\neural_network
[00:02:03] copying sklearn\neural_network\__init__.py -> build\lib.win32-2.7\sklearn\neural_network
[00:02:03] creating build\lib.win32-2.7\sklearn\neural_network\tests
[00:02:03] copying sklearn\neural_network\tests\test_mlp.py -> build\lib.win32-2.7\sklearn\neural_network/tests
[00:02:03] copying sklearn\neural_network\tests\test_rbm.py -> build\lib.win32-2.7\sklearn\neural_network/tests
[00:02:03] copying sklearn\neural_network\tests\test_stochastic_optimizers.py -> build\lib.win32-2.7\sklearn\neural_network/tests
[00:02:03] copying sklearn\neural_network\tests\__init__.py -> build\lib.win32-2.7\sklearn\neural_network/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\preprocessing
[00:02:03] copying sklearn\preprocessing\data.py -> build\lib.win32-2.7\sklearn\preprocessing
[00:02:03] copying sklearn\preprocessing\imputation.py -> build\lib.win32-2.7\sklearn\preprocessing
[00:02:03] copying sklearn\preprocessing\label.py -> build\lib.win32-2.7\sklearn\preprocessing
[00:02:03] copying sklearn\preprocessing\_function_transformer.py -> build\lib.win32-2.7\sklearn\preprocessing
[00:02:03] copying sklearn\preprocessing\__init__.py -> build\lib.win32-2.7\sklearn\preprocessing
[00:02:03] creating build\lib.win32-2.7\sklearn\preprocessing\tests
[00:02:03] copying sklearn\preprocessing\tests\test_data.py -> build\lib.win32-2.7\sklearn\preprocessing/tests
[00:02:03] copying sklearn\preprocessing\tests\test_function_transformer.py -> build\lib.win32-2.7\sklearn\preprocessing/tests
[00:02:03] copying sklearn\preprocessing\tests\test_imputation.py -> build\lib.win32-2.7\sklearn\preprocessing/tests
[00:02:03] copying sklearn\preprocessing\tests\test_label.py -> build\lib.win32-2.7\sklearn\preprocessing/tests
[00:02:03] copying sklearn\preprocessing\tests\__init__.py -> build\lib.win32-2.7\sklearn\preprocessing/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\semi_supervised
[00:02:03] copying sklearn\semi_supervised\label_propagation.py -> build\lib.win32-2.7\sklearn\semi_supervised
[00:02:03] copying sklearn\semi_supervised\__init__.py -> build\lib.win32-2.7\sklearn\semi_supervised
[00:02:03] creating build\lib.win32-2.7\sklearn\semi_supervised\tests
[00:02:03] copying sklearn\semi_supervised\tests\test_label_propagation.py -> build\lib.win32-2.7\sklearn\semi_supervised/tests
[00:02:03] copying sklearn\semi_supervised\tests\__init__.py -> build\lib.win32-2.7\sklearn\semi_supervised/tests
[00:02:03] creating build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\affinity_propagation_.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\bicluster.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\birch.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\dbscan_.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\hierarchical.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\k_means_.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\mean_shift_.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\setup.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\spectral.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\_feature_agglomeration.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] copying sklearn\cluster\__init__.py -> build\lib.win32-2.7\sklearn\cluster
[00:02:03] creating build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\common.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_affinity_propagation.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_bicluster.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_birch.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_dbscan.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_hierarchical.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_k_means.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_mean_shift.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\test_spectral.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] copying sklearn\cluster\tests\__init__.py -> build\lib.win32-2.7\sklearn\cluster\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\base.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\california_housing.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\covtype.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\kddcup99.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\lfw.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\mlcomp.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\mldata.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\olivetti_faces.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\rcv1.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\samples_generator.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\setup.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\species_distributions.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\svmlight_format.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\twenty_newsgroups.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] copying sklearn\datasets\__init__.py -> build\lib.win32-2.7\sklearn\datasets
[00:02:03] creating build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_20news.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_base.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_covtype.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_kddcup99.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_lfw.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_mldata.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_rcv1.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_samples_generator.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\test_svmlight_format.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] copying sklearn\datasets\tests\__init__.py -> build\lib.win32-2.7\sklearn\datasets\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\base.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\dict_learning.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\factor_analysis.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\fastica_.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\incremental_pca.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\kernel_pca.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\nmf.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\online_lda.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\pca.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\setup.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\sparse_pca.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\truncated_svd.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] copying sklearn\decomposition\__init__.py -> build\lib.win32-2.7\sklearn\decomposition
[00:02:03] creating build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_dict_learning.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_factor_analysis.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_fastica.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_incremental_pca.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_kernel_pca.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_nmf.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_online_lda.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_pca.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_sparse_pca.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\test_truncated_svd.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] copying sklearn\decomposition\tests\__init__.py -> build\lib.win32-2.7\sklearn\decomposition\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\bagging.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\base.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\forest.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\gradient_boosting.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\iforest.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\partial_dependence.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\setup.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\voting_classifier.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\weight_boosting.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] copying sklearn\ensemble\__init__.py -> build\lib.win32-2.7\sklearn\ensemble
[00:02:03] creating build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_bagging.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_base.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_forest.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_gradient_boosting.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_gradient_boosting_loss_functions.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_iforest.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_partial_dependence.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_voting_classifier.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\test_weight_boosting.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] copying sklearn\ensemble\tests\__init__.py -> build\lib.win32-2.7\sklearn\ensemble\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\externals
[00:02:03] copying sklearn\externals\funcsigs.py -> build\lib.win32-2.7\sklearn\externals
[00:02:03] copying sklearn\externals\odict.py -> build\lib.win32-2.7\sklearn\externals
[00:02:03] copying sklearn\externals\setup.py -> build\lib.win32-2.7\sklearn\externals
[00:02:03] copying sklearn\externals\six.py -> build\lib.win32-2.7\sklearn\externals
[00:02:03] copying sklearn\externals\test_externals_setup.py -> build\lib.win32-2.7\sklearn\externals
[00:02:03] copying sklearn\externals\__init__.py -> build\lib.win32-2.7\sklearn\externals
[00:02:03] creating build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\disk.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\format_stack.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\func_inspect.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\hashing.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\logger.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\memory.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\my_exceptions.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\numpy_pickle.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\parallel.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\pool.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\testing.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\_compat.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\_memory_helpers.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\_multiprocessing_helpers.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] copying sklearn\externals\joblib\__init__.py -> build\lib.win32-2.7\sklearn\externals\joblib
[00:02:03] creating build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\dict_vectorizer.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\hashing.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\image.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\setup.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\stop_words.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\text.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] copying sklearn\feature_extraction\__init__.py -> build\lib.win32-2.7\sklearn\feature_extraction
[00:02:03] creating build\lib.win32-2.7\sklearn\feature_extraction\tests
[00:02:03] copying sklearn\feature_extraction\tests\test_dict_vectorizer.py -> build\lib.win32-2.7\sklearn\feature_extraction\tests
[00:02:03] copying sklearn\feature_extraction\tests\test_feature_hasher.py -> build\lib.win32-2.7\sklearn\feature_extraction\tests
[00:02:03] copying sklearn\feature_extraction\tests\test_image.py -> build\lib.win32-2.7\sklearn\feature_extraction\tests
[00:02:03] copying sklearn\feature_extraction\tests\test_text.py -> build\lib.win32-2.7\sklearn\feature_extraction\tests
[00:02:03] copying sklearn\feature_extraction\tests\__init__.py -> build\lib.win32-2.7\sklearn\feature_extraction\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\isomap.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\locally_linear.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\mds.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\setup.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\spectral_embedding_.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\t_sne.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] copying sklearn\manifold\__init__.py -> build\lib.win32-2.7\sklearn\manifold
[00:02:03] creating build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] copying sklearn\manifold\tests\test_isomap.py -> build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] copying sklearn\manifold\tests\test_locally_linear.py -> build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] copying sklearn\manifold\tests\test_mds.py -> build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] copying sklearn\manifold\tests\test_spectral_embedding.py -> build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] copying sklearn\manifold\tests\test_t_sne.py -> build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] copying sklearn\manifold\tests\__init__.py -> build\lib.win32-2.7\sklearn\manifold\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\base.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\classification.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\pairwise.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\ranking.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\regression.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\scorer.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\setup.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] copying sklearn\metrics\__init__.py -> build\lib.win32-2.7\sklearn\metrics
[00:02:03] creating build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\test_classification.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\test_common.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\test_pairwise.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\test_ranking.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\test_regression.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\test_score_objects.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] copying sklearn\metrics\tests\__init__.py -> build\lib.win32-2.7\sklearn\metrics\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\metrics\cluster
[00:02:03] copying sklearn\metrics\cluster\bicluster.py -> build\lib.win32-2.7\sklearn\metrics/cluster
[00:02:03] copying sklearn\metrics\cluster\setup.py -> build\lib.win32-2.7\sklearn\metrics/cluster
[00:02:03] copying sklearn\metrics\cluster\supervised.py -> build\lib.win32-2.7\sklearn\metrics/cluster
[00:02:03] copying sklearn\metrics\cluster\unsupervised.py -> build\lib.win32-2.7\sklearn\metrics/cluster
[00:02:03] copying sklearn\metrics\cluster\__init__.py -> build\lib.win32-2.7\sklearn\metrics/cluster
[00:02:03] creating build\lib.win32-2.7\sklearn\metrics\cluster\tests
[00:02:03] copying sklearn\metrics\cluster\tests\test_bicluster.py -> build\lib.win32-2.7\sklearn\metrics/cluster\tests
[00:02:03] copying sklearn\metrics\cluster\tests\test_supervised.py -> build\lib.win32-2.7\sklearn\metrics/cluster\tests
[00:02:03] copying sklearn\metrics\cluster\tests\test_unsupervised.py -> build\lib.win32-2.7\sklearn\metrics/cluster\tests
[00:02:03] copying sklearn\metrics\cluster\tests\__init__.py -> build\lib.win32-2.7\sklearn\metrics/cluster\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\approximate.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\base.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\classification.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\graph.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\kde.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\nearest_centroid.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\regression.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\setup.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\unsupervised.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] copying sklearn\neighbors\__init__.py -> build\lib.win32-2.7\sklearn\neighbors
[00:02:03] creating build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_approximate.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_ball_tree.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_dist_metrics.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_kde.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_kd_tree.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_nearest_centroid.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\test_neighbors.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] copying sklearn\neighbors\tests\__init__.py -> build\lib.win32-2.7\sklearn\neighbors\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\tree
[00:02:03] copying sklearn\tree\export.py -> build\lib.win32-2.7\sklearn\tree
[00:02:03] copying sklearn\tree\setup.py -> build\lib.win32-2.7\sklearn\tree
[00:02:03] copying sklearn\tree\tree.py -> build\lib.win32-2.7\sklearn\tree
[00:02:03] copying sklearn\tree\__init__.py -> build\lib.win32-2.7\sklearn\tree
[00:02:03] creating build\lib.win32-2.7\sklearn\tree\tests
[00:02:03] copying sklearn\tree\tests\test_export.py -> build\lib.win32-2.7\sklearn\tree\tests
[00:02:03] copying sklearn\tree\tests\test_tree.py -> build\lib.win32-2.7\sklearn\tree\tests
[00:02:03] copying sklearn\tree\tests\__init__.py -> build\lib.win32-2.7\sklearn\tree\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\svm
[00:02:03] copying sklearn\svm\base.py -> build\lib.win32-2.7\sklearn\svm
[00:02:03] copying sklearn\svm\bounds.py -> build\lib.win32-2.7\sklearn\svm
[00:02:03] copying sklearn\svm\classes.py -> build\lib.win32-2.7\sklearn\svm
[00:02:03] copying sklearn\svm\setup.py -> build\lib.win32-2.7\sklearn\svm
[00:02:03] copying sklearn\svm\__init__.py -> build\lib.win32-2.7\sklearn\svm
[00:02:03] creating build\lib.win32-2.7\sklearn\svm\tests
[00:02:03] copying sklearn\svm\tests\test_bounds.py -> build\lib.win32-2.7\sklearn\svm\tests
[00:02:03] copying sklearn\svm\tests\test_sparse.py -> build\lib.win32-2.7\sklearn\svm\tests
[00:02:03] copying sklearn\svm\tests\test_svm.py -> build\lib.win32-2.7\sklearn\svm\tests
[00:02:03] copying sklearn\svm\tests\__init__.py -> build\lib.win32-2.7\sklearn\svm\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\base.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\bayes.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\coordinate_descent.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\huber.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\least_angle.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\logistic.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\omp.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\passive_aggressive.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\perceptron.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\randomized_l1.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\ransac.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\ridge.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\sag.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\setup.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\stochastic_gradient.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\theil_sen.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] copying sklearn\linear_model\__init__.py -> build\lib.win32-2.7\sklearn\linear_model
[00:02:03] creating build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_base.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_bayes.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_coordinate_descent.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_huber.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_least_angle.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_logistic.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_omp.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_passive_aggressive.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_perceptron.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_randomized_l1.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_ransac.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_ridge.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_sag.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_sgd.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_sparse_coordinate_descent.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\test_theil_sen.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] copying sklearn\linear_model\tests\__init__.py -> build\lib.win32-2.7\sklearn\linear_model\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\arpack.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\bench.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\class_weight.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\deprecation.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\estimator_checks.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\extmath.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\fixes.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\graph.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\linear_assignment_.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\metaestimators.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\mocking.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\multiclass.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\optimize.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\random.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\setup.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\sparsefuncs.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\stats.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\testing.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\validation.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\_scipy_sparse_lsqr_backport.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] copying sklearn\utils\__init__.py -> build\lib.win32-2.7\sklearn\utils
[00:02:03] creating build\lib.win32-2.7\sklearn\utils\sparsetools
[00:02:03] copying sklearn\utils\sparsetools\setup.py -> build\lib.win32-2.7\sklearn\utils\sparsetools
[00:02:03] copying sklearn\utils\sparsetools\_graph_validation.py -> build\lib.win32-2.7\sklearn\utils\sparsetools
[00:02:03] copying sklearn\utils\sparsetools\__init__.py -> build\lib.win32-2.7\sklearn\utils\sparsetools
[00:02:03] creating build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_bench.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_class_weight.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_estimator_checks.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_extmath.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_fast_dict.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_fixes.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_graph.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_linear_assignment.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_metaestimators.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_multiclass.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_murmurhash.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_optimize.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_random.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_seq_dataset.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_shortest_path.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_sparsefuncs.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_stats.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_testing.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_utils.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\test_validation.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] copying sklearn\utils\tests\__init__.py -> build\lib.win32-2.7\sklearn\utils\tests
[00:02:03] creating build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_base.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_calibration.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_check_build.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_common.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_cross_validation.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_discriminant_analysis.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_dummy.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_grid_search.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_init.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_isotonic.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_kernel_approximation.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_kernel_ridge.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_learning_curve.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_metaestimators.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_multiclass.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_multioutput.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_naive_bayes.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_pipeline.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\test_random_projection.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] copying sklearn\tests\__init__.py -> build\lib.win32-2.7\sklearn\tests
[00:02:03] running build_clib
[00:02:03] No module named msvccompiler in numpy.distutils; trying from distutils
[00:02:03] customize MSVCCompiler
[00:02:03] Missing compiler_cxx fix for MSVCCompiler
[00:02:03] customize MSVCCompiler using build_clib
[00:02:03] building 'libsvm-skl' library
[00:02:03] compiling C sources
[00:02:03] creating build\temp.win32-2.7
[00:02:03] creating build\temp.win32-2.7\sklearn
[00:02:03] creating build\temp.win32-2.7\sklearn\svm
[00:02:03] creating build\temp.win32-2.7\sklearn\svm\src
[00:02:03] creating build\temp.win32-2.7\sklearn\svm\src\libsvm
[00:02:03] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tpsklearn\svm\src\libsvm\libsvm_template.cpp /Fobuild\temp.win32-2.7\sklearn\svm\src\libsvm\libsvm_template.obj
[00:02:03] Found executable C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe
[00:02:03] Partial import of sklearn during the build process.
[00:02:03] C:\Python27\lib\site-packages\numpy\distutils\system_info.py:594: UserWarning: Specified path C:/Program Files (x86)/Intel/Composer XE/mkl/lib/ia32 is invalid.
[00:02:03]   warnings.warn('Specified path %s is invalid.' % d)
[00:02:03] C:\Python27\lib\site-packages\numpy\distutils\system_info.py:594: UserWarning: Specified path C:/Program Files (x86)/Intel/Composer XE/compiler/lib/ia32 is i
[00:02:03] nvalid.
[00:02:03]   warnings.warn('Specified path %s is invalid.' % d)
[00:02:03] C:\Python27\lib\site-packages\numpy\distutils\system_info.py:594: UserWarning: Specified path C:/Program Files (x86)/Intel/Composer XE/mkl/include is invalid.
[00:02:03]   warnings.warn('Specified path %s is invalid.' % d)
[00:02:03] C:\Python27\lib\site-packages\numpy\distutils\system_info.py:1603: UserWarning: 
[00:02:03]     Atlas (http://math-atlas.sourceforge.net/) libraries not found.
[00:02:03]     Directories to search for the libraries can be specified in the
[00:02:03]     numpy/distutils/site.cfg file (section [atlas]) or by setting
[00:02:03]     the ATLAS environment variable.
[00:02:03]   warnings.warn(AtlasNotFoundError.__doc__)
[00:02:03] C:\Python27\lib\site-packages\numpy\distutils\system_info.py:1612: UserWarning: 
[00:02:03]     Blas (http://www.netlib.org/blas/) libraries not found.
[00:02:03]     Directories to search for the libraries can be specified in the
[00:02:03]     numpy/distutils/site.cfg file (section [blas]) or by setting
[00:02:03]     the BLAS environment variable.
[00:02:03]   warnings.warn(BlasNotFoundError.__doc__)
[00:02:03] C:\Python27\lib\site
[00:02:03] -packages\numpy\distutils\system_info.py:1615: UserWarning: 
[00:02:03]     Blas (http://www.netlib.org/blas/) sources not found.
[00:02:03]     Directories to search for the sources can be specified in the
[00:02:03]     numpy/distutils/site.cfg file (section [blas_src]) or by setting
[00:02:03]     the BLAS_SRC environment variable.
[00:02:03]   warnings.warn(BlasSrcNotFoundError.__doc__)
[00:02:03] sklearn\setup.py:71: UserWarning: 
[00:02:03]     Blas (http://www.netlib.org/blas/) libraries not found.
[00:02:03]     Directories to search for the libraries can be specified in the
[00:02:03]     numpy/distutils/site.cfg file (section [blas]) or by setting
[00:02:03]     the BLAS environment variable.
[00:02:03]   warnings.warn(BlasNotFoundError.__doc__)
[00:02:05] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\lib.exe build\temp.win32-2.7\sklearn\svm\src\libsvm\libsvm_template.obj /OUT:build\temp.win32-2.7\libsvm-skl.lib
[00:02:05] Found executable C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\lib.exe
[00:02:05] building 'cblas' library
[00:02:05] compiling C sources
[00:02:05] creating build\temp.win32-2.7\sklearn\src
[00:02:05] creating build\temp.win32-2.7\sklearn\src\cblas
[00:02:05] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefasum.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefasum.obj
[00:02:05] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefcopy.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefcopy.obj
[00:02:05] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefgemv.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefgemv.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefgemvN.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefgemvN.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefgemvT.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefgemvT.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefger.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefger.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefrot.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefrot.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_drefrotg.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_drefrotg.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_srefcopy.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_srefcopy.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_srefnrm2.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_srefnrm2.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_srefrot.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_srefrot.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\ATL_srefrotg.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\ATL_srefrotg.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_dasum.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_dasum.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_daxpy.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_daxpy.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_dcopy.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_dcopy.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_ddot.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_ddot.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_dgemv.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_dgemv.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_dger.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_dger.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_dnrm2.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_dnrm2.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_drot.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_drot.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_drotg.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_drotg.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_dscal.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_dscal.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_errprn.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_errprn.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_scopy.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_scopy.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_snrm2.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_snrm2.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_srot.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_srot.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_srotg.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_srotg.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include /Tcsklearn\src\cblas\cblas_xerbla.c /Fobuild\temp.win32-2.7\sklearn\src\cblas\cblas_xerbla.obj
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\lib.exe build\temp.win32-2.7\sklearn\src\cblas\ATL_drefasum.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefcopy.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefgemv.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefgemvN.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefgemvT.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefger.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefrot.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_drefrotg.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_srefcopy.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_srefnrm2.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_srefrot.obj build\temp.win32-2.7\sklearn\src\cblas\ATL_srefrotg.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_dasum.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_daxpy.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_dcopy.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_ddot.obj build\temp.win32-2.7\sklearn\src\cb
[00:02:06] las\cblas_dgemv.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_dger.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_dnrm2.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_drot.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_drotg.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_dscal.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_errprn.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_scopy.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_snrm2.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_srot.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_srotg.obj build\temp.win32-2.7\sklearn\src\cblas\cblas_xerbla.obj /OUT:build\temp.win32-2.7\cblas.lib
[00:02:06] running build_ext
[00:02:06] No module named msvccompiler in numpy.distutils; trying from distutils
[00:02:06] customize MSVCCompiler
[00:02:06] customize MSVCCompiler using build_ext
[00:02:06] No module named msvccompiler in numpy.distutils; trying from distutils
[00:02:06] customize MSVCCompiler
[00:02:06] Missing compiler_cxx fix for MSVCCompiler
[00:02:06] customize MSVCCompiler using build_ext
[00:02:06] building 'sklearn.__check_build._check_build' extension
[00:02:06] compiling C sources
[00:02:06] creating build\temp.win32-2.7\Release
[00:02:06] creating build\temp.win32-2.7\Release\sklearn
[00:02:06] creating build\temp.win32-2.7\Release\sklearn\__check_build
[00:02:06] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\__check_build\_check_build.c /Fobuild\temp.win32-2.7\Release\sklearn\__check_build\_check_build.obj
[00:02:07] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_check_build build\temp.win32-2.7\Release\sklearn\__check_build\_check_build.obj /OUT:build\lib.win32-2.7\sklearn\__check_build\_check_build.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\__check_build\_check_build.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\__check_build\_check_build.pyd.manifest
[00:02:07] Found executable C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe
[00:02:07] building 'sklearn.cluster._dbscan_inner' extension
[00:02:07] compiling C sources
[00:02:07] creating build\temp.win32-2.7\Release\sklearn\cluster
[00:02:07] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tpsklearn\cluster\_dbscan_inner.cpp /Fobuild\temp.win32-2.7\Release\sklearn\cluster\_dbscan_inner.obj /Zm1000
[00:02:08] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_dbscan_inner build\temp.win32-2.7\Release\sklearn\cluster\_dbscan_inner.obj /OUT:build\lib.win32-2.7\sklearn\cluster\_dbscan_inner.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\cluster\_dbscan_inner.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\cluster\_dbscan_inner.pyd.manifest
[00:02:08] building 'sklearn.cluster._hierarchical' extension
[00:02:08] compiling C sources
[00:02:08] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tpsklearn\cluster\_hierarchical.cpp /Fobuild\temp.win32-2.7\Release\sklearn\cluster\_hierarchical.obj /Zm1000
[00:02:10] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_hierarchical build\temp.win32-2.7\Release\sklearn\cluster\_hierarchical.obj /OUT:build\lib.win32-2.7\sklearn\cluster\_hierarchical.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\cluster\_hierarchical.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\cluster\_hierarchical.pyd.manifest
[00:02:10] building 'sklearn.cluster._k_means_elkan' extension
[00:02:10] compiling C sources
[00:02:10] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\cluster\_k_means_elkan.c /Fobuild\temp.win32-2.7\Release\sklearn\cluster\_k_means_elkan.obj
[00:02:12] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_k_means_elkan build\temp.win32-2.7\Release\sklearn\cluster\_k_means_elkan.obj /OUT:build\lib.win32-2.7\sklearn\cluster\_k_means_elkan.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\cluster\_k_means_elkan.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\cluster\_k_means_elkan.pyd.manifest
[00:02:12] building 'sklearn.cluster._k_means' extension
[00:02:12] compiling C sources
[00:02:12] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\cluster\_k_means.c /Fobuild\temp.win32-2.7\Release\sklearn\cluster\_k_means.obj
[00:02:13] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:init_k_means build\temp.win32-2.7\Release\sklearn\cluster\_k_means.obj /OUT:build\lib.win32-2.7\sklearn\cluster\_k_means.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\cluster\_k_means.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\cluster\_k_means.pyd.manifest
[00:02:13] building 'sklearn.datasets._svmlight_format' extension
[00:02:13] compiling C sources
[00:02:13] creating build\temp.win32-2.7\Release\sklearn\datasets
[00:02:13] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\datasets\_svmlight_format.c /Fobuild\temp.win32-2.7\Release\sklearn\datasets\_svmlight_format.obj
[00:02:14] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_svmlight_format build\temp.win32-2.7\Release\sklearn\datasets\_svmlight_format.obj /OUT:build\lib.win32-2.7\sklearn\datasets\_svmlight_format.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\datasets\_svmlight_format.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\datasets\_svmlight_format.pyd.manifest
[00:02:14] building 'sklearn.decomposition._online_lda' extension
[00:02:14] compiling C sources
[00:02:14] creating build\temp.win32-2.7\Release\sklearn\decomposition
[00:02:14] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\decomposition\_online_lda.c /Fobuild\temp.win32-2.7\Release\sklearn\decomposition\_online_lda.obj
[00:02:14] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_online_lda build\temp.win32-2.7\Release\sklearn\decomposition\_online_lda.obj /OUT:build\lib.win32-2.7\sklearn\decomposition\_online_lda.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\decomposition\_online_lda.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\decomposition\_online_lda.pyd.manifest
[00:02:14] building 'sklearn.decomposition.cdnmf_fast' extension
[00:02:14] compiling C sources
[00:02:14] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\decomposition\cdnmf_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\decomposition\cdnmf_fast.obj
[00:02:15] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initcdnmf_fast build\temp.win32-2.7\Release\sklearn\decomposition\cdnmf_fast.obj /OUT:build\lib.win32-2.7\sklearn\decomposition\cdnmf_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\decomposition\cdnmf_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\decomposition\cdnmf_fast.pyd.manifest
[00:02:15] building 'sklearn.ensemble._gradient_boosting' extension
[00:02:15] compiling C sources
[00:02:15] creating build\temp.win32-2.7\Release\sklearn\ensemble
[00:02:15] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\ensemble\_gradient_boosting.c /Fobuild\temp.win32-2.7\Release\sklearn\ensemble\_gradient_boosting.obj
[00:02:16] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_gradient_boosting build\temp.win32-2.7\Release\sklearn\ensemble\_gradient_boosting.obj /OUT:build\lib.win32-2.7\sklearn\ensemble\_gradient_boosting.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\ensemble\_gradient_boosting.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\ensemble\_gradient_boosting.pyd.manifest
[00:02:16] building 'sklearn.feature_extraction._hashing' extension
[00:02:16] compiling C sources
[00:02:16] creating build\temp.win32-2.7\Release\sklearn\feature_extraction
[00:02:16] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\feature_extraction\_hashing.c /Fobuild\temp.win32-2.7\Release\sklearn\feature_extraction\_hashing.obj
[00:02:16] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_hashing build\temp.win32-2.7\Release\sklearn\feature_extraction\_hashing.obj /OUT:build\lib.win32-2.7\sklearn\feature_extraction\_hashing.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\feature_extraction\_hashing.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\feature_extraction\_hashing.pyd.manifest
[00:02:17] building 'sklearn.manifold._utils' extension
[00:02:17] compiling C sources
[00:02:17] creating build\temp.win32-2.7\Release\sklearn\manifold
[00:02:17] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\manifold\_utils.c /Fobuild\temp.win32-2.7\Release\sklearn\manifold\_utils.obj -O3
[00:02:17] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_utils build\temp.win32-2.7\Release\sklearn\manifold\_utils.obj /OUT:build\lib.win32-2.7\sklearn\manifold\_utils.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\manifold\_utils.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\manifold\_utils.pyd.manifest
[00:02:17] building 'sklearn.manifold._barnes_hut_tsne' extension
[00:02:17] compiling C sources
[00:02:17] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\manifold\_barnes_hut_tsne.c /Fobuild\temp.win32-2.7\Release\sklearn\manifold\_barnes_hut_tsne.obj -O4
[00:02:18] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:init_barnes_hut_tsne build\temp.win32-2.7\Release\sklearn\manifold\_barnes_hut_tsne.obj /OUT:build\lib.win32-2.7\sklearn\manifold\_barnes_hut_tsne.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\manifold\_barnes_hut_tsne.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\manifold\_barnes_hut_tsne.pyd.manifest
[00:02:18] building 'sklearn.metrics.pairwise_fast' extension
[00:02:18] compiling C sources
[00:02:18] creating build\temp.win32-2.7\Release\sklearn\metrics
[00:02:18] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\metrics\pairwise_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\metrics\pairwise_fast.obj
[00:02:19] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:initpairwise_fast build\temp.win32-2.7\Release\sklearn\metrics\pairwise_fast.obj /OUT:build\lib.win32-2.7\sklearn\metrics\pairwise_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\metrics\pairwise_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\metrics\pairwise_fast.pyd.manifest
[00:02:19] building 'sklearn.metrics/cluster.expected_mutual_info_fast' extension
[00:02:19] compiling C sources
[00:02:19] creating build\temp.win32-2.7\Release\sklearn\metrics\cluster
[00:02:19] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\metrics\cluster\expected_mutual_info_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\metrics\cluster\expected_mutual_info_fast.obj
[00:02:22] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initexpected_mutual_info_fast build\temp.win32-2.7\Release\sklearn\metrics\cluster\expected_mutual_info_fast.obj /OUT:build\lib.win32-2.7\sklearn\metrics/cluster\expected_mutual_info_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\metrics\cluster\expected_mutual_info_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\metrics\cluster\expected_mutual_info_fast.pyd.manifest
[00:02:22] building 'sklearn.neighbors.ball_tree' extension
[00:02:22] compiling C sources
[00:02:22] creating build\temp.win32-2.7\Release\sklearn\neighbors
[00:02:22] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\neighbors\ball_tree.c /Fobuild\temp.win32-2.7\Release\sklearn\neighbors\ball_tree.obj
[00:02:26] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initball_tree build\temp.win32-2.7\Release\sklearn\neighbors\ball_tree.obj /OUT:build\lib.win32-2.7\sklearn\neighbors\ball_tree.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\neighbors\ball_tree.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\neighbors\ball_tree.pyd.manifest
[00:02:26] building 'sklearn.neighbors.kd_tree' extension
[00:02:26] compiling C sources
[00:02:26] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\neighbors\kd_tree.c /Fobuild\temp.win32-2.7\Release\sklearn\neighbors\kd_tree.obj
[00:02:29] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initkd_tree build\temp.win32-2.7\Release\sklearn\neighbors\kd_tree.obj /OUT:build\lib.win32-2.7\sklearn\neighbors\kd_tree.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\neighbors\kd_tree.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\neighbors\kd_tree.pyd.manifest
[00:02:29] building 'sklearn.neighbors.dist_metrics' extension
[00:02:29] compiling C sources
[00:02:29] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include\numpy -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\neighbors\dist_metrics.c /Fobuild\temp.win32-2.7\Release\sklearn\neighbors\dist_metrics.obj
[00:02:31] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initdist_metrics build\temp.win32-2.7\Release\sklearn\neighbors\dist_metrics.obj /OUT:build\lib.win32-2.7\sklearn\neighbors\dist_metrics.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\neighbors\dist_metrics.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\neighbors\dist_metrics.pyd.manifest
[00:02:31] building 'sklearn.neighbors.typedefs' extension
[00:02:31] compiling C sources
[00:02:31] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\neighbors\typedefs.c /Fobuild\temp.win32-2.7\Release\sklearn\neighbors\typedefs.obj
[00:02:31] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:inittypedefs build\temp.win32-2.7\Release\sklearn\neighbors\typedefs.obj /OUT:build\lib.win32-2.7\sklearn\neighbors\typedefs.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\neighbors\typedefs.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\neighbors\typedefs.pyd.manifest
[00:02:31] building 'sklearn.tree._tree' extension
[00:02:31] compiling C sources
[00:02:31] creating build\temp.win32-2.7\Release\sklearn\tree
[00:02:31] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\tree\_tree.c /Fobuild\temp.win32-2.7\Release\sklearn\tree\_tree.obj -O3
[00:02:32] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_tree build\temp.win32-2.7\Release\sklearn\tree\_tree.obj /OUT:build\lib.win32-2.7\sklearn\tree\_tree.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\tree\_tree.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\tree\_tree.pyd.manifest
[00:02:33] building 'sklearn.tree._splitter' extension
[00:02:33] compiling C sources
[00:02:33] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\tree\_splitter.c /Fobuild\temp.win32-2.7\Release\sklearn\tree\_splitter.obj -O3
[00:02:33] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_splitter build\temp.win32-2.7\Release\sklearn\tree\_splitter.obj /OUT:build\lib.win32-2.7\sklearn\tree\_splitter.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\tree\_splitter.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\tree\_splitter.pyd.manifest
[00:02:33] building 'sklearn.tree._criterion' extension
[00:02:33] compiling C sources
[00:02:33] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\tree\_criterion.c /Fobuild\temp.win32-2.7\Release\sklearn\tree\_criterion.obj -O3
[00:02:34] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_criterion build\temp.win32-2.7\Release\sklearn\tree\_criterion.obj /OUT:build\lib.win32-2.7\sklearn\tree\_criterion.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\tree\_criterion.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\tree\_criterion.pyd.manifest
[00:02:34] building 'sklearn.tree._utils' extension
[00:02:34] compiling C sources
[00:02:34] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\tree\_utils.c /Fobuild\temp.win32-2.7\Release\sklearn\tree\_utils.obj -O3
[00:02:34] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_utils build\temp.win32-2.7\Release\sklearn\tree\_utils.obj /OUT:build\lib.win32-2.7\sklearn\tree\_utils.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\tree\_utils.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\tree\_utils.pyd.manifest
[00:02:34] building 'sklearn.svm.libsvm' extension
[00:02:34] compiling C sources
[00:02:34] creating build\temp.win32-2.7\Release\sklearn\svm
[00:02:34] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -Isklearn\svm\src\libsvm -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\svm\libsvm.c /Fobuild\temp.win32-2.7\Release\sklearn\svm\libsvm.obj
[00:02:36] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 libsvm-skl.lib /EXPORT:initlibsvm build\temp.win32-2.7\Release\sklearn\svm\libsvm.obj /OUT:build\lib.win32-2.7\sklearn\svm\libsvm.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\svm\libsvm.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\svm\libsvm.pyd.manifest
[00:02:36] building 'sklearn.svm.liblinear' extension
[00:02:36] compiling C sources
[00:02:36] creating build\temp.win32-2.7\Release\sklearn\svm\src
[00:02:36] creating build\temp.win32-2.7\Release\sklearn\svm\src\liblinear
[00:02:36] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\svm\liblinear.c /Fobuild\temp.win32-2.7\Release\sklearn\svm\liblinear.obj /Zm1000
[00:02:36] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tpsklearn\svm\src\liblinear\linear.cpp /Fobuild\temp.win32-2.7\Release\sklearn\svm\src\liblinear\linear.obj /Zm1000
[00:02:37] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tpsklearn\svm\src\liblinear\tron.cpp /Fobuild\temp.win32-2.7\Release\sklearn\svm\src\liblinear\tron.obj /Zm1000
[00:02:37] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:initliblinear build\temp.win32-2.7\Release\sklearn\svm\liblinear.obj build\temp.win32-2.7\Release\sklearn\svm\src\liblinear\linear.obj build\temp.win32-2.7\Release\sklearn\svm\src\liblinear\tron.obj /OUT:build\lib.win32-2.7\sklearn\svm\liblinear.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\svm\liblinear.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\svm\liblinear.pyd.manifest
[00:02:37] building 'sklearn.svm.libsvm_sparse' extension
[00:02:37] compiling C sources
[00:02:37] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -Isklearn\svm\src\libsvm -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\svm\libsvm_sparse.c /Fobuild\temp.win32-2.7\Release\sklearn\svm\libsvm_sparse.obj
[00:02:39] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 libsvm-skl.lib /EXPORT:initlibsvm_sparse build\temp.win32-2.7\Release\sklearn\svm\libsvm_sparse.obj /OUT:build\lib.win32-2.7\sklearn\svm\libsvm_sparse.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\svm\libsvm_sparse.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\svm\libsvm_sparse.pyd.manifest
[00:02:39] building 'sklearn._isotonic' extension
[00:02:39] compiling C sources
[00:02:39] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\_isotonic.c /Fobuild\temp.win32-2.7\Release\sklearn\_isotonic.obj
[00:02:39] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_isotonic build\temp.win32-2.7\Release\sklearn\_isotonic.obj /OUT:build\lib.win32-2.7\sklearn\_isotonic.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\_isotonic.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\_isotonic.pyd.manifest
[00:02:39] building 'sklearn.linear_model.cd_fast' extension
[00:02:39] compiling C sources
[00:02:39] creating build\temp.win32-2.7\Release\sklearn\linear_model
[00:02:39] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\linear_model\cd_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\linear_model\cd_fast.obj
[00:02:41] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:initcd_fast build\temp.win32-2.7\Release\sklearn\linear_model\cd_fast.obj /OUT:build\lib.win32-2.7\sklearn\linear_model\cd_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\linear_model\cd_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\linear_model\cd_fast.pyd.manifest
[00:02:41] building 'sklearn.linear_model.sgd_fast' extension
[00:02:41] compiling C sources
[00:02:41] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\linear_model\sgd_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\linear_model\sgd_fast.obj
[00:02:42] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:initsgd_fast build\temp.win32-2.7\Release\sklearn\linear_model\sgd_fast.obj /OUT:build\lib.win32-2.7\sklearn\linear_model\sgd_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\linear_model\sgd_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\linear_model\sgd_fast.pyd.manifest
[00:02:42] building 'sklearn.linear_model.sag_fast' extension
[00:02:42] compiling C sources
[00:02:42] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\linear_model\sag_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\linear_model\sag_fast.obj
[00:02:43] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initsag_fast build\temp.win32-2.7\Release\sklearn\linear_model\sag_fast.obj /OUT:build\lib.win32-2.7\sklearn\linear_model\sag_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\linear_model\sag_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\linear_model\sag_fast.pyd.manifest
[00:02:43] building 'sklearn.utils.sparsetools._traversal' extension
[00:02:43] compiling C sources
[00:02:43] creating build\temp.win32-2.7\Release\sklearn\utils
[00:02:43] creating build\temp.win32-2.7\Release\sklearn\utils\sparsetools
[00:02:43] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\sparsetools\_traversal.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\sparsetools\_traversal.obj
[00:02:44] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_traversal build\temp.win32-2.7\Release\sklearn\utils\sparsetools\_traversal.obj /OUT:build\lib.win32-2.7\sklearn\utils\sparsetools\_traversal.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\sparsetools\_traversal.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\sparsetools\_traversal.pyd.manifest
[00:02:44] building 'sklearn.utils.sparsetools._graph_tools' extension
[00:02:44] compiling C sources
[00:02:44] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\sparsetools\_graph_tools.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\sparsetools\_graph_tools.obj
[00:02:45] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_graph_tools build\temp.win32-2.7\Release\sklearn\utils\sparsetools\_graph_tools.obj /OUT:build\lib.win32-2.7\sklearn\utils\sparsetools\_graph_tools.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\sparsetools\_graph_tools.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\sparsetools\_graph_tools.pyd.manifest
[00:02:45] building 'sklearn.utils.sparsefuncs_fast' extension
[00:02:45] compiling C sources
[00:02:45] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\sparsefuncs_fast.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\sparsefuncs_fast.obj
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initsparsefuncs_fast build\temp.win32-2.7\Release\sklearn\utils\sparsefuncs_fast.obj /OUT:build\lib.win32-2.7\sklearn\utils\sparsefuncs_fast.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\sparsefuncs_fast.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\sparsefuncs_fast.pyd.manifest
[00:02:49] building 'sklearn.utils.arrayfuncs' extension
[00:02:49] compiling C sources
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\arrayfuncs.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\arrayfuncs.obj
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:initarrayfuncs build\temp.win32-2.7\Release\sklearn\utils\arrayfuncs.obj /OUT:build\lib.win32-2.7\sklearn\utils\arrayfuncs.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\arrayfuncs.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\arrayfuncs.pyd.manifest
[00:02:49] building 'sklearn.utils.murmurhash' extension
[00:02:49] compiling C sources
[00:02:49] creating build\temp.win32-2.7\Release\sklearn\utils\src
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\utils\src -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\murmurhash.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\murmurhash.obj /Zm1000
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\utils\src -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tpsklearn\utils\src\MurmurHash3.cpp /Fobuild\temp.win32-2.7\Release\sklearn\utils\src\MurmurHash3.obj /Zm1000
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initmurmurhash build\temp.win32-2.7\Release\sklearn\utils\murmurhash.obj build\temp.win32-2.7\Release\sklearn\utils\src\MurmurHash3.obj /OUT:build\lib.win32-2.7\sklearn\utils\murmurhash.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\murmurhash.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\murmurhash.pyd.manifest
[00:02:49] building 'sklearn.utils.lgamma' extension
[00:02:49] compiling C sources
[00:02:49] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\utils\src -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\lgamma.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\lgamma.obj
[00:02:50] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\utils\src -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\src\gamma.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\src\gamma.obj
[00:02:50] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initlgamma build\temp.win32-2.7\Release\sklearn\utils\lgamma.obj build\temp.win32-2.7\Release\sklearn\utils\src\gamma.obj /OUT:build\lib.win32-2.7\sklearn\utils\lgamma.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\lgamma.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\lgamma.pyd.manifest
[00:02:50] building 'sklearn.utils.graph_shortest_path' extension
[00:02:50] compiling C sources
[00:02:50] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\graph_shortest_path.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\graph_shortest_path.obj
[00:02:50] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initgraph_shortest_path build\temp.win32-2.7\Release\sklearn\utils\graph_shortest_path.obj /OUT:build\lib.win32-2.7\sklearn\utils\graph_shortest_path.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\graph_shortest_path.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\graph_shortest_path.pyd.manifest
[00:02:50] building 'sklearn.utils.fast_dict' extension
[00:02:50] compiling C sources
[00:02:50] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tpsklearn\utils\fast_dict.cpp /Fobuild\temp.win32-2.7\Release\sklearn\utils\fast_dict.obj /Zm1000
[00:02:52] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initfast_dict build\temp.win32-2.7\Release\sklearn\utils\fast_dict.obj /OUT:build\lib.win32-2.7\sklearn\utils\fast_dict.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\fast_dict.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\fast_dict.pyd.manifest
[00:02:52] building 'sklearn.utils.seq_dataset' extension
[00:02:52] compiling C sources
[00:02:52] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\seq_dataset.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\seq_dataset.obj
[00:02:52] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:initseq_dataset build\temp.win32-2.7\Release\sklearn\utils\seq_dataset.obj /OUT:build\lib.win32-2.7\sklearn\utils\seq_dataset.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\seq_dataset.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\seq_dataset.pyd.manifest
[00:02:52] building 'sklearn.utils.weight_vector' extension
[00:02:52] compiling C sources
[00:02:52] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -Isklearn\src\cblas -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\weight_vector.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\weight_vector.obj
[00:02:53] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 cblas.lib /EXPORT:initweight_vector build\temp.win32-2.7\Release\sklearn\utils\weight_vector.obj /OUT:build\lib.win32-2.7\sklearn\utils\weight_vector.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\weight_vector.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\weight_vector.pyd.manifest
[00:02:53] building 'sklearn.utils._random' extension
[00:02:53] compiling C sources
[00:02:53] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\_random.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\_random.obj
[00:02:53] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_random build\temp.win32-2.7\Release\sklearn\utils\_random.obj /OUT:build\lib.win32-2.7\sklearn\utils\_random.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\_random.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\_random.pyd.manifest
[00:02:53] building 'sklearn.utils._logistic_sigmoid' extension
[00:02:53] compiling C sources
[00:02:53] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\cl.exe /c /nologo /Ox /MD /W3 /GS- /DNDEBUG -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\lib\site-packages\numpy\core\include -IC:\Python27\include -IC:\Python27\PC /Tcsklearn\utils\_logistic_sigmoid.c /Fobuild\temp.win32-2.7\Release\sklearn\utils\_logistic_sigmoid.obj
[00:02:54] C:\Users\appveyor\AppData\Local\Programs\Common\Microsoft\Visual C++ for Python\9.0\VC\Bin\link.exe /DLL /nologo /INCREMENTAL:NO /LIBPATH:C:\Python27\libs /LIBPATH:C:\Python27\PCbuild /LIBPATH:C:\Python27\PC\VS9.0 /LIBPATH:build\temp.win32-2.7 /EXPORT:init_logistic_sigmoid build\temp.win32-2.7\Release\sklearn\utils\_logistic_sigmoid.obj /OUT:build\lib.win32-2.7\sklearn\utils\_logistic_sigmoid.pyd /IMPLIB:build\temp.win32-2.7\Release\sklearn\utils\_logistic_sigmoid.lib /MANIFESTFILE:build\temp.win32-2.7\Release\sklearn\utils\_logistic_sigmoid.pyd.manifest
[00:02:54] installing to build\bdist.win32\wheel
[00:02:54] running install
[00:02:54] running install_lib
[00:02:54] creating build\bdist.win32
[00:02:54] creating build\bdist.win32\wheel
[00:02:54] creating build\bdist.win32\wheel\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\base.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\calibration.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\affinity_propagation_.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\bicluster.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\birch.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\dbscan_.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\hierarchical.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\k_means_.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\mean_shift_.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\setup.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\spectral.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] creating build\bdist.win32\wheel\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\common.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_affinity_propagation.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_bicluster.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_birch.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_dbscan.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_hierarchical.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_k_means.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_mean_shift.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\test_spectral.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\_dbscan_inner.pyd -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\_feature_agglomeration.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\_hierarchical.pyd -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\_k_means.pyd -> build\bdist.win32\wheel\.\sklearn\clu
[00:02:54] ster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\_k_means_elkan.pyd -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\cluster\__init__.py -> build\bdist.win32\wheel\.\sklearn\cluster
[00:02:54] creating build\bdist.win32\wheel\sklearn\covariance
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\empirical_covariance_.py -> build\bdist.win32\wheel\.\sklearn\covariance
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\graph_lasso_.py -> build\bdist.win32\wheel\.\sklearn\covariance
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\outlier_detection.py -> build\bdist.win32\wheel\.\sklearn\covariance
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\robust_covariance.py -> build\bdist.win32\wheel\.\sklearn\covariance
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\shrunk_covariance_.py -> build\bdist.win32\wheel\.\sklearn\covariance
[00:02:54] creating build\bdist.win32\wheel\sklearn\covariance\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\tests\test_covariance.py -> build\bdist.win32\wheel\.\sklearn\covariance\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\tests\test_graph_lasso.py -> build\bdist.win32\wheel\.\sklearn\covariance\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\tests\test_robust_covariance.py -> build\bdist.win32\wheel\.\sklearn\covariance\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\covariance\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\covariance\__init__.py -> build\bdist.win32\wheel\.\sklearn\covariance
[00:02:54] creating build\bdist.win32\wheel\sklearn\cross_decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\cross_decomposition\cca_.py -> build\bdist.win32\wheel\.\sklearn\cross_decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\cross_decomposition\pls_.py -> build\bdist.win32\wheel\.\sklearn\cross_decomposition
[00:02:54] creating build\bdist.win32\wheel\sklearn\cross_decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cross_decomposition\tests\test_pls.py -> build\bdist.win32\wheel\.\sklearn\cross_decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cross_decomposition\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\cross_decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\cross_decomposition\__init__.py -> build\bdist.win32\wheel\.\sklearn\cross_decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\cross_validation.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\base.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\california_housing.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\covtype.py -> build\bdist.wi
[00:02:54] n32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\kddcup99.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\lfw.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\mlcomp.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\mldata.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\olivetti_faces.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\rcv1.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\samples_generator.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\setup.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\species_distributions.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\svmlight_format.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] creating build\bdist.win32\wheel\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_20news.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_base.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_covtype.py -> build\bdi
[00:02:54] st.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_kddcup99.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_lfw.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_mldata.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_rcv1.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_samples_generator.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\test_svmlight_format.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\datasets\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\twenty_newsgroups.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\_svmlight_format.pyd -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] copying build\lib.win32-2.7\sklearn\datasets\__init__.py -> build\bdist.win32\wheel\.\sklearn\datasets
[00:02:54] creating build\bdist.win32\wheel\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\
[00:02:54] sklearn\decomposition\base.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\cdnmf_fast.pyd -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\dict_learning.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\factor_analysis.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\fastica_.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\incremental_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\kernel_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\nmf.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\online_lda.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\setup.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\sparse_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] creating build\bdist.win32\wheel\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_dict_learning.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\
[00:02:54] sklearn\decomposition\tests\test_factor_analysis.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_fastica.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_incremental_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_kernel_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_nmf.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_online_lda.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_sparse_pca.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_truncated_svd.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\decomposition\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\truncated_svd.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\decomposition\_online_lda.pyd -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying
[00:02:54]  build\lib.win32-2.7\sklearn\decomposition\__init__.py -> build\bdist.win32\wheel\.\sklearn\decomposition
[00:02:54] copying build\lib.win32-2.7\sklearn\discriminant_analysis.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\dummy.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\bagging.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\base.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\forest.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\gradient_boosting.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\iforest.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\partial_dependence.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\setup.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] creating build\bdist.win32\wheel\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_bagging.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_base.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_forest.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_gradient_boosting.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_gradient_boosting_loss_functions.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_iforest.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_partial_dependence.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_voting_classifier.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_weight_boosting.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\ensemble\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\voting_classifier.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\weight_boosting.py -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\_gradient_boosting.pyd -> build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\ensemble\__init__.py -> 
[00:02:54] build\bdist.win32\wheel\.\sklearn\ensemble
[00:02:54] copying build\lib.win32-2.7\sklearn\exceptions.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\externals
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\funcsigs.py -> build\bdist.win32\wheel\.\sklearn\externals
[00:02:54] creating build\bdist.win32\wheel\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\disk.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\format_stack.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\func_inspect.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\hashing.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\logger.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\memory.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\my_exceptions.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\numpy_pickle.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\parallel.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\pool.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\testing.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\_compat.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\_memory_helpers.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\joblib\_multiprocessing_helpers.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\ex
[00:02:54] ternals\joblib\__init__.py -> build\bdist.win32\wheel\.\sklearn\externals\joblib
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\odict.py -> build\bdist.win32\wheel\.\sklearn\externals
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\setup.py -> build\bdist.win32\wheel\.\sklearn\externals
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\six.py -> build\bdist.win32\wheel\.\sklearn\externals
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\test_externals_setup.py -> build\bdist.win32\wheel\.\sklearn\externals
[00:02:54] copying build\lib.win32-2.7\sklearn\externals\__init__.py -> build\bdist.win32\wheel\.\sklearn\externals
[00:02:54] creating build\bdist.win32\wheel\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\dict_vectorizer.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\hashing.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\image.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\setup.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\stop_words.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] creating build\bdist.win32\wheel\sklearn\feature_extraction\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_dict_vectorizer.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_feature_hasher.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_image.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_text.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\text.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\_hashing.pyd -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_extraction\__init__.py -> build\bdist.win32\wheel\.\sklearn\feature_extraction
[00:02:54] creating build\bdist.win32\wheel\sklearn\feature_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\base.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\from_model.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\mutual_info_.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\rfe.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] creating build\bdist.win32\wheel\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_base.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_chi2.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_feature_select.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_from_model.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_mutual_info.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_rfe.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_variance_threshold.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\feature_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\univariate_selection.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\variance_threshold.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\feature_selection\__init__.py -> build\bdist.win32\wheel\.\sklearn\feature_selection
[00:02:54] creating build\bdist.win32\wheel\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\correlation_models.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\gaussian_process.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\gpc.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\gpr.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\kernels.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\regression_models.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] creating build\bdist.win32\wheel\sklearn\gaussian_process\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_gaussian_process.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_gpc.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_gpr.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_kernels.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\gaussian_process\__init__.py -> build\bdist.win32\wheel\.\sklearn\gaussian_process
[00:02:54] copying build\lib.win32-2.7\sklearn\grid_search.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\isotonic.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\kernel_approximation.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\kernel_ridge.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\lda.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\learning_curve.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\base.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\bayes.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\cd_fast.pyd -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\coordinate_descent.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\huber.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\least_angle.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\logistic.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\omp.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\passive_aggressive.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\perceptron.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\randomized_l1.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\ransac.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\ridge.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\sag.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\sag_fast.pyd -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\setup.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\sgd_fast.pyd -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\stochastic_gradient.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] creating build\bdist.win32\wheel\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_base.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_bayes.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_coordinate_descent.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_huber.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_least_angle.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_logistic.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_omp.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_passive_aggressive.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_perceptron.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_randomized_l1.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_ransac.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_ridge.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_sag.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_sgd.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_sparse_coordinate_descent.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_theil_sen.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\linear_model\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\theil_sen.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] copying build\lib.win32-2.7\sklearn\linear_model\__init__.py -> build\bdist.win32\wheel\.\sklearn\linear_model
[00:02:54] creating build\bdist.win32\wheel\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\isomap.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\locally_linear.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\mds.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\setup.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\spectral_embedding_.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] creating build\bdist.win32\wheel\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\tests\test_isomap.py -> build\bdist.win32\wheel\.\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\tests\test_locally_linear.py -> build\bdist.win32\wheel\.\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\tests\test_mds.py -> build\bdist.win32\wheel\.\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\tests\test_spectral_embedding.py -> build\bdist.win32\wheel\.\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\tests\test_t_sne.py -> build\bdist.win32\wheel\.\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\manifold\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\t_sne.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\_barnes_hut_tsne.pyd -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\_utils.pyd -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] copying build\lib.win32-2.7\sklearn\manifold\__init__.py -> build\bdist.win32\wheel\.\sklearn\manifold
[00:02:54] creating build\bdist.win32\wheel\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\base.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\classification.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] creating build\bdist.win32\wheel\sklearn\metrics\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\bicluster.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\expected_mutual_info_fast.pyd -> build\bdist.win32\wheel\.\sklearn\metrics\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\setup.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\supervised.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster
[00:02:54] creating build\bdist.win32\wheel\sklearn\metrics\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\test_bicluster.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\test_supervised.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\test_unsupervised.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\unsupervised.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\cluster\__init__.py -> build\bdist.win32\wheel\.\sklearn\metrics\cluster
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\pairwise.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\pairwise_fast.pyd -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\ranking.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\regression.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\scorer.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\setup.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] creating build\bdist.win32\wheel\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\test_classification.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\test_common.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\test_pairwise.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\test_ranking.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\test_regression.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\test_score_objects.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\metrics\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\metrics\__init__.py -> build\bdist.win32\wheel\.\sklearn\metrics
[00:02:54] creating build\bdist.win32\wheel\sklearn\mixture
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\base.py -> build\bdist.win32\wheel\.\sklearn\mixture
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\dpgmm.py -> build\bdist.win32\wheel\.\sklearn\mixture
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\gaussian_mixture.py -> build\bdist.win32\wheel\.\sklearn\mixture
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\gmm.py -> build\bdist.win32\wheel\.\sklearn\mixture
[00:02:54] creating build\bdist.win32\wheel\sklearn\mixture\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\tests\test_dpgmm.py -> build\bdist.win32\wheel\.\sklearn\mixture\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\tests\test_gaussian_mixture.py -> build\bdist.win32\wheel\.\sklearn\mixture\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\tests\test_gmm.py -> build\bdist.win32\wheel\.\sklearn\mixture\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\mixture\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\mixture\__init__.py -> build\bdist.win32\wheel\.\sklearn\mixture
[00:02:54] creating build\bdist.win32\wheel\sklearn\model_selection
[00:02:54] creating build\bdist.win32\wheel\sklearn\model_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\tests\test_search.py -> build\bdist.win32\wheel\.\sklearn\model_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\tests\test_split.py -> build\bdist.win32\wheel\.\sklearn\model_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\tests\test_validation.py -> build\bdist.win32\wheel\.\sklearn\model_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\model_selection\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\_search.py -> build\bdist.win32\wheel\.\sklearn\model_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\_split.py -> build\bdist.win32\wheel\.\sklearn\model_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\_validation.py -> build\bdist.win32\wheel\.\sklearn\model_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\model_selection\__init__.py -> build\bdist.win32\wheel\.\sklearn\model_selection
[00:02:54] copying build\lib.win32-2.7\sklearn\multiclass.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\multioutput.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\naive_bayes.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\approximate.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\ball_tree.pyd -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\base.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\classification.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\dist_metrics.pyd -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\graph.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\kde.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\kd_tree.pyd -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\nearest_centroid.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\regression.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\setup.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] creating build\bdist.win32\wheel\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_approximate.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_ball_tree.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_dist_metrics.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_kde.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_kd_tree.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_nearest_centroid.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_neighbors.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\neighbors\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\typedefs.pyd -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\unsupervised.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] copying build\lib.win32-2.7\sklearn\neighbors\__init__.py -> build\bdist.win32\wheel\.\sklearn\neighbors
[00:02:54] creating build\bdist.win32\wheel\sklearn\neural_network
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\multilayer_perceptron.py -> build\bdist.win32\wheel\.\sklearn\neural_network
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\rbm.py -> build\bdist.win32\wheel\.\sklearn\neural_network
[00:02:54] creating build\bdist.win32\wheel\sklearn\neural_network\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\tests\test_mlp.py -> build\bdist.win32\wheel\.\sklearn\neural_network\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\tests\test_rbm.py -> build\bdist.win32\wheel\.\sklearn\neural_network\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\tests\test_stochastic_optimizers.py -> build\bdist.win32\wheel\.\sklearn\neural_network\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\neural_network\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\_base.py -> build\bdist.win32\wheel\.\sklearn\neural_network
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\_stochastic_optimizers.py -> build\bdist.win32\wheel\.\sklearn\neural_network
[00:02:54] copying build\lib.win32-2.7\sklearn\neural_network\__init__.py -> build\bdist.win32\wheel\.\sklearn\neural_network
[00:02:54] copying build\lib.win32-2.7\sklearn\pipeline.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\preprocessing
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\data.py -> build\bdist.win32\wheel\.\sklearn\preprocessing
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\imputation.py -> build\bdist.win32\wheel\.\sklearn\preprocessing
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\label.py -> build\bdist.win32\wheel\.\sklearn\preprocessing
[00:02:54] creating build\bdist.win32\wheel\sklearn\preprocessing\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_data.py -> build\bdist.win32\wheel\.\sklearn\preprocessing\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_function_transformer.py -> build\bdist.win32\wheel\.\sklearn\preprocessing\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_imputation.py -> build\bdist.win32\wheel\.\sklearn\preprocessing\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_label.py -> build\bdist.win32\wheel\.\sklearn\preprocessing\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\preprocessing\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\_function_transformer.py -> build\bdist.win32\wheel\.\sklearn\preprocessing
[00:02:54] copying build\lib.win32-2.7\sklearn\preprocessing\__init__.py -> build\bdist.win32\wheel\.\sklearn\preprocessing
[00:02:54] copying build\lib.win32-2.7\sklearn\qda.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] copying build\lib.win32-2.7\sklearn\random_projection.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\semi_supervised
[00:02:54] copying build\lib.win32-2.7\sklearn\semi_supervised\label_propagation.py -> build\bdist.win32\wheel\.\sklearn\semi_supervised
[00:02:54] creating build\bdist.win32\wheel\sklearn\semi_supervised\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\semi_supervised\tests\test_label_propagation.py -> build\bdist.win32\wheel\.\sklearn\semi_supervised\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\semi_supervised\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\semi_supervised\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\semi_supervised\__init__.py -> build\bdist.win32\wheel\.\sklearn\semi_supervised
[00:02:54] copying build\lib.win32-2.7\sklearn\setup.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\base.py -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\bounds.py -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\classes.py -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\liblinear.pyd -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\libsvm.pyd -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\libsvm_sparse.pyd -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\setup.py -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] creating build\bdist.win32\wheel\sklearn\svm\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\tests\test_bounds.py -> build\bdist.win32\wheel\.\sklearn\svm\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\tests\test_sparse.py -> build\bdist.win32\wheel\.\sklearn\svm\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\tests\test_svm.py -> build\bdist.win32\wheel\.\sklearn\svm\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\svm\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\svm\__init__.py -> build\bdist.win32\wheel\.\sklearn\svm
[00:02:54] creating build\bdist.win32\wheel\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_base.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_calibration.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_check_build.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_common.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_cross_validation.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_discriminant_analysis.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_dummy.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_grid_search.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_init.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_isotonic.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_kernel_approximation.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_kernel_ridge.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_learning_curve.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_metaestimators.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_multiclass.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_multioutput.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_naive_bayes.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_pipeline.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\test_random_projection.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\tests
[00:02:54] creating build\bdist.win32\wheel\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\export.py -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\setup.py -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] creating build\bdist.win32\wheel\sklearn\tree\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\tests\test_export.py -> build\bdist.win32\wheel\.\sklearn\tree\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\tests\test_tree.py -> build\bdist.win32\wheel\.\sklearn\tree\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\tree\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\tree.py -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\_criterion.pyd -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\_splitter.pyd -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\_tree.pyd -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\_utils.pyd -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] copying build\lib.win32-2.7\sklearn\tree\__init__.py -> build\bdist.win32\wheel\.\sklearn\tree
[00:02:54] creating build\bdist.win32\wheel\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\arpack.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\arrayfuncs.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\bench.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\class_weight.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\deprecation.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\estimator_checks.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\extmath.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\fast_dict.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\fixes.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\graph.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\graph_shortest_path.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\lgamma.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\linear_assignment_.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\metaestimators.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\mocking.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\multiclass.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\murmurhash.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\optimize.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\random.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\seq_dataset.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\setup.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsefuncs.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsefuncs_fast.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] creating build\bdist.win32\wheel\sklearn\utils\sparsetools
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsetools\setup.py -> build\bdist.win32\wheel\.\sklearn\utils\sparsetools
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsetools\_graph_tools.pyd -> build\bdist.win32\wheel\.\sklearn\utils\sparsetools
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsetools\_graph_validation.py -> build\bdist.win32\wheel\.\sklearn\utils\sparsetools
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsetools\_traversal.pyd -> build\bdist.win32\wheel\.\sklearn\utils\sparsetools
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\sparsetools\__init__.py -> build\bdist.win32\wheel\.\sklearn\utils\sparsetools
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\stats.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\testing.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] creating build\bdist.win32\wheel\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_bench.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_class_weight.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_estimator_checks.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_extmath.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_fast_dict.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_fixes.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_graph.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_linear_assignment.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_metaestimators.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_multiclass.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_murmurhash.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_optimize.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_random.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_seq_dataset.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_shortest_path.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_sparsefuncs.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_stats.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_testing.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_utils.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\test_validation.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\tests\__init__.py -> build\bdist.win32\wheel\.\sklearn\utils\tests
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\validation.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\weight_vector.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\_logistic_sigmoid.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\_random.pyd -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\_scipy_sparse_lsqr_backport.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] copying build\lib.win32-2.7\sklearn\utils\__init__.py -> build\bdist.win32\wheel\.\sklearn\utils
[00:02:54] creating build\bdist.win32\wheel\sklearn\_build_utils
[00:02:54] copying build\lib.win32-2.7\sklearn\_build_utils\__init__.py -> build\bdist.win32\wheel\.\sklearn\_build_utils
[00:02:54] copying build\lib.win32-2.7\sklearn\_isotonic.pyd -> build\bdist.win32\wheel\.\sklearn
[00:02:54] creating build\bdist.win32\wheel\sklearn\__check_build
[00:02:54] copying build\lib.win32-2.7\sklearn\__check_build\setup.py -> build\bdist.win32\wheel\.\sklearn\__check_build
[00:02:54] copying build\lib.win32-2.7\sklearn\__check_build\_check_build.pyd -> build\bdist.win32\wheel\.\sklearn\__check_build
[00:02:54] copying build\lib.win32-2.7\sklearn\__check_build\__init__.py -> build\bdist.win32\wheel\.\sklearn\__check_build
[00:02:54] copying build\lib.win32-2.7\sklearn\__init__.py -> build\bdist.win32\wheel\.\sklearn
[00:02:54] running install_data
[00:02:54] creating build\bdist.win32\wheel\sklearn\datasets\tests\data
[00:02:54] copying sklearn\datasets\tests\data\svmlight_multilabel.txt -> build\bdist.win32\wheel\.\sklearn\datasets\tests\data\
[00:02:54] copying sklearn\datasets\tests\data\svmlight_classification.txt -> build\bdist.win32\wheel\.\sklearn\datasets\tests\data\
[00:02:54] copying sklearn\datasets\tests\data\svmlight_invalid.txt -> build\bdist.win32\wheel\.\sklearn\datasets\tests\data\
[00:02:54] copying sklearn\datasets\tests\data\svmlight_invalid_order.txt -> build\bdist.win32\wheel\.\sklearn\datasets\tests\data\
[00:02:54] creating build\bdist.win32\wheel\sklearn\datasets\data
[00:02:54] copying sklearn\datasets\data\diabetes_data.csv.gz -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\breast_cancer.csv -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\digits.csv.gz -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\diabetes_target.csv.gz -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\linnerud_exercise.csv -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\iris.csv -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\linnerud_physiological.csv -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] copying sklearn\datasets\data\boston_house_prices.csv -> build\bdist.win32\wheel\.\sklearn\datasets\data\
[00:02:54] creating build\bdist.win32\wheel\sklearn\datasets\images
[00:02:54] copying sklearn\datasets\images\README.txt -> build\bdist.win32\wheel\.\sklearn\datasets\images\
[00:02:54] copying sklearn\datasets\images\china.jpg -> build\bdist.win32\wheel\.\sklearn\datasets\images\
[00:02:54] copying sklearn\datasets\images\flower.jpg -> build\bdist.win32\wheel\.\sklearn\datasets\images\
[00:02:54] creating build\bdist.win32\wheel\sklearn\datasets\descr
[00:02:54] copying sklearn\datasets\descr\linnerud.rst -> build\bdist.win32\wheel\.\sklearn\datasets\descr\
[00:02:54] copying sklearn\datasets\descr\digits.rst -> build\bdist.win32\wheel\.\sklearn\datasets\descr\
[00:02:54] copying sklearn\datasets\descr\breast_cancer.rst -> build\bdist.win32\wheel\.\sklearn\datasets\descr\
[00:02:54] copying sklearn\datasets\descr\diabetes.rst -> build\bdist.win32\wheel\.\sklearn\datasets\descr\
[00:02:54] copying sklearn\datasets\descr\iris.rst -> build\bdist.win32\wheel\.\sklearn\datasets\descr\
[00:02:54] copying sklearn\datasets\descr\boston_house_prices.rst -> build\bdist.win32\wheel\.\sklearn\datasets\descr\
[00:02:54] running install_clib
[00:02:54] running install_egg_info
[00:02:54] running egg_info
[00:02:54] creating scikit_learn.egg-info
[00:02:54] writing scikit_learn.egg-info\PKG-INFO
[00:02:54] writing top-level names to scikit_learn.egg-info\top_level.txt
[00:02:54] writing dependency_links to scikit_learn.egg-info\dependency_links.txt
[00:02:54] writing manifest file 'scikit_learn.egg-info\SOURCES.txt'
[00:02:54] reading manifest file 'scikit_learn.egg-info\SOURCES.txt'
[00:02:54] reading manifest template 'MANIFEST.in'
[00:02:54] writing manifest file 'scikit_learn.egg-info\SOURCES.txt'
[00:02:54] Copying scikit_learn.egg-info to build\bdist.win32\wheel\.\scikit_learn-0.18.dev0-py2.7.egg-info
[00:02:54] running install_scripts
[00:02:54] creating build\bdist.win32\wheel\scikit_learn-0.18.dev0.dist-info\WHEEL
[00:02:55] running bdist_wininst
[00:02:55] installing to build\bdist.win32\wininst
[00:02:55] running install_lib
[00:02:55] creating build\bdist.win32\wininst
[00:02:55] creating build\bdist.win32\wininst\PLATLIB
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\calibration.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\affinity_propagation_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\bicluster.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\birch.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\dbscan_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\hierarchical.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\k_means_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\mean_shift_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\spectral.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\common.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_affinity_propagation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_bicluster.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_birch.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_dbscan.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_hierarchical.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_k_means.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_mean_shift.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\test_spectral.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\_dbscan_inner.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\_feature_agglomeration.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\_hierarchical.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\_k_means.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\_k_means_elkan.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\cluster\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cluster
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\empirical_covariance_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\graph_lasso_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\outlier_detection.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\robust_covariance.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\shrunk_covariance_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\covariance\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\tests\test_covariance.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\tests\test_graph_lasso.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\tests\test_robust_covariance.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\covariance\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\covariance
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\cross_decomposition\cca_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\cross_decomposition\pls_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cross_decomposition\tests\test_pls.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cross_decomposition\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\cross_decomposition\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\cross_decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\cross_validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\california_housing.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\covtype.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\kddcup99.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\lfw.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\mlcomp.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\mldata.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\olivetti_faces.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\rcv1.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\samples_generator.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\species_distributions.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\svmlight_format.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_20news.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_covtype.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_kddcup99.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_lfw.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_mldata.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_rcv1.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_samples_generator.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\test_svmlight_format.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\twenty_newsgroups.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\_svmlight_format.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] copying build\lib.win32-2.7\sklearn\datasets\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\cdnmf_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\dict_learning.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\factor_analysis.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\fastica_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\incremental_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\kernel_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\nmf.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\online_lda.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\sparse_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_dict_learning.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_factor_analysis.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_fastica.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_incremental_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_kernel_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_nmf.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_online_lda.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_sparse_pca.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\test_truncated_svd.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\truncated_svd.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\_online_lda.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\decomposition\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\decomposition
[00:02:55] copying build\lib.win32-2.7\sklearn\discriminant_analysis.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\dummy.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\bagging.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\forest.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\gradient_boosting.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\iforest.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\partial_dependence.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_bagging.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_forest.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_gradient_boosting.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_gradient_boosting_loss_functions.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_iforest.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_partial_dependence.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_voting_classifier.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\test_weight_boosting.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\voting_classifier.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\weight_boosting.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\_gradient_boosting.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\ensemble\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\ensemble
[00:02:55] copying build\lib.win32-2.7\sklearn\exceptions.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\funcsigs.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\disk.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\format_stack.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\func_inspect.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\hashing.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\logger.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\memory.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\my_exceptions.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\numpy_pickle.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\parallel.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\pool.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\testing.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\_compat.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\_memory_helpers.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\_multiprocessing_helpers.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\joblib\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals\joblib
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\odict.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\six.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\test_externals_setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] copying build\lib.win32-2.7\sklearn\externals\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\externals
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\dict_vectorizer.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\hashing.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\image.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\stop_words.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_dict_vectorizer.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_feature_hasher.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_image.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\test_text.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\text.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\_hashing.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_extraction\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_extraction
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\from_model.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\mutual_info_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\rfe.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_chi2.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_feature_select.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_from_model.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_mutual_info.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_rfe.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\test_variance_threshold.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\univariate_selection.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\variance_threshold.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\feature_selection\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\feature_selection
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\correlation_models.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\gaussian_process.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\gpc.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\gpr.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\kernels.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\regression_models.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_gaussian_process.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_gpc.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_gpr.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\test_kernels.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\gaussian_process\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\gaussian_process
[00:02:55] copying build\lib.win32-2.7\sklearn\grid_search.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\isotonic.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\kernel_approximation.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\kernel_ridge.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\lda.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\learning_curve.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\bayes.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\cd_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\coordinate_descent.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\huber.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\least_angle.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\logistic.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\omp.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\passive_aggressive.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\perceptron.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\randomized_l1.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\ransac.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\ridge.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\sag.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\sag_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\sgd_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\stochastic_gradient.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_bayes.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_coordinate_descent.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_huber.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_least_angle.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_logistic.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_omp.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_passive_aggressive.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_perceptron.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_randomized_l1.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_ransac.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_ridge.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_sag.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_sgd.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_sparse_coordinate_descent.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\test_theil_sen.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\theil_sen.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] copying build\lib.win32-2.7\sklearn\linear_model\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\linear_model
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\isomap.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\locally_linear.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\mds.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\spectral_embedding_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\tests\test_isomap.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\tests\test_locally_linear.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\tests\test_mds.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\tests\test_spectral_embedding.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\tests\test_t_sne.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\t_sne.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\_barnes_hut_tsne.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\_utils.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] copying build\lib.win32-2.7\sklearn\manifold\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\manifold
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\classification.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\bicluster.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\expected_mutual_info_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\supervised.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\test_bicluster.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\test_supervised.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\test_unsupervised.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\unsupervised.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\cluster\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\cluster
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\pairwise.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\pairwise_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\ranking.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\regression.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\scorer.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\test_classification.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\test_common.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\test_pairwise.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\test_ranking.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\test_regression.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\test_score_objects.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\metrics\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\metrics
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\mixture
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\dpgmm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\gaussian_mixture.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\gmm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\mixture\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\tests\test_dpgmm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\tests\test_gaussian_mixture.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\tests\test_gmm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\mixture\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\mixture
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\model_selection
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\model_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\tests\test_search.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\tests\test_split.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\tests\test_validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\_search.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\_split.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\_validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\model_selection\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\model_selection
[00:02:55] copying build\lib.win32-2.7\sklearn\multiclass.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\multioutput.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\naive_bayes.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\approximate.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\ball_tree.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\classification.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\dist_metrics.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\graph.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\kde.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\kd_tree.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\nearest_centroid.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\regression.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_approximate.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_ball_tree.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_dist_metrics.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_kde.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_kd_tree.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_nearest_centroid.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\test_neighbors.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\typedefs.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\unsupervised.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] copying build\lib.win32-2.7\sklearn\neighbors\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neighbors
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\neural_network
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\multilayer_perceptron.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\rbm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\neural_network\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\tests\test_mlp.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\tests\test_rbm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\tests\test_stochastic_optimizers.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\_base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\_stochastic_optimizers.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network
[00:02:55] copying build\lib.win32-2.7\sklearn\neural_network\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\neural_network
[00:02:55] copying build\lib.win32-2.7\sklearn\pipeline.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\data.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\imputation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\label.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_data.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_function_transformer.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_imputation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\tests\test_label.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\_function_transformer.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing
[00:02:55] copying build\lib.win32-2.7\sklearn\preprocessing\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\preprocessing
[00:02:55] copying build\lib.win32-2.7\sklearn\qda.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] copying build\lib.win32-2.7\sklearn\random_projection.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\semi_supervised
[00:02:55] copying build\lib.win32-2.7\sklearn\semi_supervised\label_propagation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\semi_supervised
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\semi_supervised\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\semi_supervised\tests\test_label_propagation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\semi_supervised\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\semi_supervised\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\semi_supervised\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\semi_supervised\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\semi_supervised
[00:02:55] copying build\lib.win32-2.7\sklearn\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\bounds.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\classes.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\liblinear.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\libsvm.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\libsvm_sparse.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\svm\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\tests\test_bounds.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\tests\test_sparse.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\tests\test_svm.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\svm\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\svm
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_base.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_calibration.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_check_build.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_common.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_cross_validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_discriminant_analysis.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_dummy.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_grid_search.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_init.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_isotonic.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_kernel_approximation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_kernel_ridge.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_learning_curve.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_metaestimators.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_multiclass.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_multioutput.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_naive_bayes.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_pipeline.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\test_random_projection.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tests
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\export.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\tree\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\tests\test_export.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\tests\test_tree.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\tree.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\_criterion.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\_splitter.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\_tree.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\_utils.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] copying build\lib.win32-2.7\sklearn\tree\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\tree
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\arpack.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\arrayfuncs.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\bench.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\class_weight.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\deprecation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\estimator_checks.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\extmath.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\fast_dict.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\fixes.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\graph.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\graph_shortest_path.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\lgamma.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\linear_assignment_.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\metaestimators.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\mocking.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\multiclass.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\murmurhash.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\optimize.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\random.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\seq_dataset.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsefuncs.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsefuncs_fast.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\utils\sparsetools
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsetools\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\sparsetools
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsetools\_graph_tools.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\sparsetools
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsetools\_graph_validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\sparsetools
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsetools\_traversal.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\sparsetools
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\sparsetools\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\sparsetools
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\stats.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\testing.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_bench.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_class_weight.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_estimator_checks.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_extmath.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_fast_dict.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_fixes.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_graph.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_linear_assignment.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_metaestimators.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_multiclass.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_murmurhash.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_optimize.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_random.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_seq_dataset.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_shortest_path.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_sparsefuncs.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_stats.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_testing.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_utils.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\test_validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\tests\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils\tests
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\validation.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\weight_vector.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\_logistic_sigmoid.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\_random.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\_scipy_sparse_lsqr_backport.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] copying build\lib.win32-2.7\sklearn\utils\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\utils
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\_build_utils
[00:02:55] copying build\lib.win32-2.7\sklearn\_build_utils\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\_build_utils
[00:02:55] copying build\lib.win32-2.7\sklearn\_isotonic.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\__check_build
[00:02:55] copying build\lib.win32-2.7\sklearn\__check_build\setup.py -> build\bdist.win32\wininst\PLATLIB\sklearn\__check_build
[00:02:55] copying build\lib.win32-2.7\sklearn\__check_build\_check_build.pyd -> build\bdist.win32\wininst\PLATLIB\sklearn\__check_build
[00:02:55] copying build\lib.win32-2.7\sklearn\__check_build\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn\__check_build
[00:02:55] copying build\lib.win32-2.7\sklearn\__init__.py -> build\bdist.win32\wininst\PLATLIB\sklearn
[00:02:55] running install_data
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests\data
[00:02:55] copying sklearn\datasets\tests\data\svmlight_multilabel.txt -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests\data\
[00:02:55] copying sklearn\datasets\tests\data\svmlight_classification.txt -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests\data\
[00:02:55] copying sklearn\datasets\tests\data\svmlight_invalid.txt -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests\data\
[00:02:55] copying sklearn\datasets\tests\data\svmlight_invalid_order.txt -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\tests\data\
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data
[00:02:55] copying sklearn\datasets\data\diabetes_data.csv.gz -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\breast_cancer.csv -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\digits.csv.gz -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\diabetes_target.csv.gz -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\linnerud_exercise.csv -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\iris.csv -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\linnerud_physiological.csv -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] copying sklearn\datasets\data\boston_house_prices.csv -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\data\
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\datasets\images
[00:02:55] copying sklearn\datasets\images\README.txt -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\images\
[00:02:55] copying sklearn\datasets\images\china.jpg -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\images\
[00:02:55] copying sklearn\datasets\images\flower.jpg -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\images\
[00:02:55] creating build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr
[00:02:55] copying sklearn\datasets\descr\linnerud.rst -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr\
[00:02:55] copying sklearn\datasets\descr\digits.rst -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr\
[00:02:55] copying sklearn\datasets\descr\breast_cancer.rst -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr\
[00:02:55] copying sklearn\datasets\descr\diabetes.rst -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr\
[00:02:55] copying sklearn\datasets\descr\iris.rst -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr\
[00:02:55] copying sklearn\datasets\descr\boston_house_prices.rst -> build\bdist.win32\wininst\PLATLIB\sklearn\datasets\descr\
[00:02:55] running install_clib
[00:02:55] running install_egg_info
[00:02:55] Copying scikit_learn.egg-info to build\bdist.win32\wininst\PLATLIB\scikit_learn-0.18.dev0-py2.7.egg-info
[00:02:55] running install_scripts
[00:02:55] creating 'c:\users\appveyor\appdata\local\temp\1\tmpzfuqmd.zip' and adding '.' to it
[00:02:55] adding 'PLATLIB\scikit_learn-0.18.dev0-py2.7.egg-info\dependency_links.txt'
[00:02:55] adding 'PLATLIB\scikit_learn-0.18.dev0-py2.7.egg-info\not-zip-safe'
[00:02:55] adding 'PLATLIB\scikit_learn-0.18.dev0-py2.7.egg-info\PKG-INFO'
[00:02:55] adding 'PLATLIB\scikit_learn-0.18.dev0-py2.7.egg-info\SOURCES.txt'
[00:02:55] adding 'PLATLIB\scikit_learn-0.18.dev0-py2.7.egg-info\top_level.txt'
[00:02:55] adding 'PLATLIB\sklearn\base.py'
[00:02:55] adding 'PLATLIB\sklearn\calibration.py'
[00:02:55] adding 'PLATLIB\sklearn\cross_validation.py'
[00:02:55] adding 'PLATLIB\sklearn\discriminant_analysis.py'
[00:02:55] adding 'PLATLIB\sklearn\dummy.py'
[00:02:55] adding 'PLATLIB\sklearn\exceptions.py'
[00:02:55] adding 'PLATLIB\sklearn\grid_search.py'
[00:02:55] adding 'PLATLIB\sklearn\isotonic.py'
[00:02:55] adding 'PLATLIB\sklearn\kernel_approximation.py'
[00:02:55] adding 'PLATLIB\sklearn\kernel_ridge.py'
[00:02:55] adding 'PLATLIB\sklearn\lda.py'
[00:02:55] adding 'PLATLIB\sklearn\learning_curve.py'
[00:02:55] adding 'PLATLIB\sklearn\multiclass.py'
[00:02:55] adding 'PLATLIB\sklearn\multioutput.py'
[00:02:55] adding 'PLATLIB\sklearn\naive_bayes.py'
[00:02:55] adding 'PLATLIB\sklearn\pipeline.py'
[00:02:55] adding 'PLATLIB\sklearn\qda.py'
[00:02:55] adding 'PLATLIB\sklearn\random_projection.py'
[00:02:55] adding 'PLATLIB\sklearn\setup.py'
[00:02:55] adding 'PLATLIB\sklearn\_isotonic.pyd'
[00:02:55] adding 'PLATLIB\sklearn\__init__.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\affinity_propagation_.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\bicluster.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\birch.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\dbscan_.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\hierarchical.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\k_means_.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\mean_shift_.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\setup.py'
[00:02:55] adding 'PLATLIB\sklearn\cluster\spectral.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\_dbscan_inner.pyd'
[00:02:56] adding 'PLATLIB\sklearn\cluster\_feature_agglomeration.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\_hierarchical.pyd'
[00:02:56] adding 'PLATLIB\sklearn\cluster\_k_means.pyd'
[00:02:56] adding 'PLATLIB\sklearn\cluster\_k_means_elkan.pyd'
[00:02:56] adding 'PLATLIB\sklearn\cluster\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\common.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_affinity_propagation.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_bicluster.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_birch.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_dbscan.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_hierarchical.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_k_means.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_mean_shift.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\test_spectral.py'
[00:02:56] adding 'PLATLIB\sklearn\cluster\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\empirical_covariance_.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\graph_lasso_.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\outlier_detection.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\robust_covariance.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\shrunk_covariance_.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\tests\test_covariance.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\tests\test_graph_lasso.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\tests\test_robust_covariance.py'
[00:02:56] adding 'PLATLIB\sklearn\covariance\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\cross_decomposition\cca_.py'
[00:02:56] adding 'PLATLIB\sklearn\cross_decomposition\pls_.py'
[00:02:56] adding 'PLATLIB\sklearn\cross_decomposition\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\cross_decomposition\tests\test_pls.py'
[00:02:56] adding 'PLATLIB\sklearn\cross_decomposition\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\base.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\california_housing.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\covtype.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\kddcup99.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\lfw.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\mlcomp.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\mldata.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\olivetti_faces.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\rcv1.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\samples_generator.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\species_distributions.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\svmlight_format.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\twenty_newsgroups.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\_svmlight_format.pyd'
[00:02:56] adding 'PLATLIB\sklearn\datasets\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\boston_house_prices.csv'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\breast_cancer.csv'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\diabetes_data.csv.gz'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\diabetes_target.csv.gz'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\digits.csv.gz'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\iris.csv'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\linnerud_exercise.csv'
[00:02:56] adding 'PLATLIB\sklearn\datasets\data\linnerud_physiological.csv'
[00:02:56] adding 'PLATLIB\sklearn\datasets\descr\boston_house_prices.rst'
[00:02:56] adding 'PLATLIB\sklearn\datasets\descr\breast_cancer.rst'
[00:02:56] adding 'PLATLIB\sklearn\datasets\descr\diabetes.rst'
[00:02:56] adding 'PLATLIB\sklearn\datasets\descr\digits.rst'
[00:02:56] adding 'PLATLIB\sklearn\datasets\descr\iris.rst'
[00:02:56] adding 'PLATLIB\sklearn\datasets\descr\linnerud.rst'
[00:02:56] adding 'PLATLIB\sklearn\datasets\images\china.jpg'
[00:02:56] adding 'PLATLIB\sklearn\datasets\images\flower.jpg'
[00:02:56] adding 'PLATLIB\sklearn\datasets\images\README.txt'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_20news.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_base.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_covtype.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_kddcup99.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_lfw.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_mldata.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_rcv1.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_samples_generator.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\test_svmlight_format.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\data\svmlight_classification.txt'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\data\svmlight_invalid.txt'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\data\svmlight_invalid_order.txt'
[00:02:56] adding 'PLATLIB\sklearn\datasets\tests\data\svmlight_multilabel.txt'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\base.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\cdnmf_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\dict_learning.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\factor_analysis.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\fastica_.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\incremental_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\kernel_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\nmf.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\online_lda.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\sparse_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\truncated_svd.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\_online_lda.pyd'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_dict_learning.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_factor_analysis.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_fastica.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_incremental_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_kernel_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_nmf.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_online_lda.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_sparse_pca.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\test_truncated_svd.py'
[00:02:56] adding 'PLATLIB\sklearn\decomposition\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\bagging.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\base.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\forest.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\gradient_boosting.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\iforest.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\partial_dependence.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\voting_classifier.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\weight_boosting.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\_gradient_boosting.pyd'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_bagging.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_base.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_forest.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_gradient_boosting.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_gradient_boosting_loss_functions.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_iforest.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_partial_dependence.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_voting_classifier.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\test_weight_boosting.py'
[00:02:56] adding 'PLATLIB\sklearn\ensemble\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\funcsigs.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\odict.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\six.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\test_externals_setup.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\disk.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\format_stack.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\func_inspect.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\hashing.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\logger.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\memory.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\my_exceptions.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\numpy_pickle.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\parallel.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\pool.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\testing.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\_compat.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\_memory_helpers.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\_multiprocessing_helpers.py'
[00:02:56] adding 'PLATLIB\sklearn\externals\joblib\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\dict_vectorizer.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\hashing.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\image.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\stop_words.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\text.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\_hashing.pyd'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\tests\test_dict_vectorizer.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\tests\test_feature_hasher.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\tests\test_image.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\tests\test_text.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_extraction\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\base.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\from_model.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\mutual_info_.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\rfe.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\univariate_selection.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\variance_threshold.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_base.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_chi2.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_feature_select.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_from_model.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_mutual_info.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_rfe.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\test_variance_threshold.py'
[00:02:56] adding 'PLATLIB\sklearn\feature_selection\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\correlation_models.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\gaussian_process.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\gpc.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\gpr.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\kernels.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\regression_models.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\tests\test_gaussian_process.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\tests\test_gpc.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\tests\test_gpr.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\tests\test_kernels.py'
[00:02:56] adding 'PLATLIB\sklearn\gaussian_process\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\base.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\bayes.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\cd_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\coordinate_descent.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\huber.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\least_angle.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\logistic.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\omp.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\passive_aggressive.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\perceptron.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\randomized_l1.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\ransac.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\ridge.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\sag.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\sag_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\sgd_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\stochastic_gradient.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\theil_sen.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_base.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_bayes.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_coordinate_descent.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_huber.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_least_angle.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_logistic.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_omp.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_passive_aggressive.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_perceptron.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_randomized_l1.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_ransac.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_ridge.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_sag.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_sgd.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_sparse_coordinate_descent.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\test_theil_sen.py'
[00:02:56] adding 'PLATLIB\sklearn\linear_model\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\isomap.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\locally_linear.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\mds.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\spectral_embedding_.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\t_sne.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\_barnes_hut_tsne.pyd'
[00:02:56] adding 'PLATLIB\sklearn\manifold\_utils.pyd'
[00:02:56] adding 'PLATLIB\sklearn\manifold\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\tests\test_isomap.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\tests\test_locally_linear.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\tests\test_mds.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\tests\test_spectral_embedding.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\tests\test_t_sne.py'
[00:02:56] adding 'PLATLIB\sklearn\manifold\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\base.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\classification.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\pairwise.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\pairwise_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\metrics\ranking.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\regression.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\scorer.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\bicluster.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\expected_mutual_info_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\supervised.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\unsupervised.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\tests\test_bicluster.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\tests\test_supervised.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\tests\test_unsupervised.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\cluster\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\test_classification.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\test_common.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\test_pairwise.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\test_ranking.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\test_regression.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\test_score_objects.py'
[00:02:56] adding 'PLATLIB\sklearn\metrics\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\base.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\dpgmm.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\gaussian_mixture.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\gmm.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\tests\test_dpgmm.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\tests\test_gaussian_mixture.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\tests\test_gmm.py'
[00:02:56] adding 'PLATLIB\sklearn\mixture\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\_search.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\_split.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\_validation.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\tests\test_search.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\tests\test_split.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\tests\test_validation.py'
[00:02:56] adding 'PLATLIB\sklearn\model_selection\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\approximate.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\ball_tree.pyd'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\base.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\classification.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\dist_metrics.
[00:02:56] pyd'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\graph.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\kde.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\kd_tree.pyd'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\nearest_centroid.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\regression.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\typedefs.pyd'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\unsupervised.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_approximate.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_ball_tree.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_dist_metrics.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_kde.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_kd_tree.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_nearest_centroid.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\test_neighbors.py'
[00:02:56] adding 'PLATLIB\sklearn\neighbors\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\multilayer_perceptron.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network
[00:02:56] \rbm.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\_base.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\_stochastic_optimizers.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\tests\test_mlp.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\tests\test_rbm.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\tests\test_stochastic_optimizers.py'
[00:02:56] adding 'PLATLIB\sklearn\neural_network\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\data.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\imputation.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\label.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\_function_transformer.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\tests\test_data.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\tests\test_function_transformer.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\tests\test_imputation.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\tests\test_label.py'
[00:02:56] adding 'PLATLIB\sklearn\preprocessing\tests\__init__.py'
[00:02:56] addin
[00:02:56] g 'PLATLIB\sklearn\semi_supervised\label_propagation.py'
[00:02:56] adding 'PLATLIB\sklearn\semi_supervised\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\semi_supervised\tests\test_label_propagation.py'
[00:02:56] adding 'PLATLIB\sklearn\semi_supervised\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\base.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\bounds.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\classes.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\liblinear.pyd'
[00:02:56] adding 'PLATLIB\sklearn\svm\libsvm.pyd'
[00:02:56] adding 'PLATLIB\sklearn\svm\libsvm_sparse.pyd'
[00:02:56] adding 'PLATLIB\sklearn\svm\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\tests\test_bounds.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\tests\test_sparse.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\tests\test_svm.py'
[00:02:56] adding 'PLATLIB\sklearn\svm\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_base.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_calibration.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_check_build.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_common.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_cross_validation.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_discriminant_analysis.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_dummy.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_grid_search.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_init.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_isotonic.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_kernel_approximation.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_kernel_ridge.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_learning_curve.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_metaestimators.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_multiclass.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_multioutput.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_naive_bayes.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_pipeline.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\test_random_projection.py'
[00:02:56] adding 'PLATLIB\sklearn\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\export.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\tree.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\_criterion.pyd'
[00:02:56] adding 'PLATLIB\sklearn\tree\_splitter.pyd'
[00:02:56] adding 'PLATLIB\sklearn\tree\_tree.pyd'
[00:02:56] adding 'PLATLIB\sklearn\tree\_utils.pyd'
[00:02:56] adding 'PLATLIB\sklearn\tree\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\tests\test_export.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\tests\test_tree.py'
[00:02:56] adding 'PLATLIB\sklearn\tree\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\arpack.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\arrayfuncs.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\bench.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\class_weight.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\deprecation.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\estimator_checks.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\extmath.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\fast_dict.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\fixes.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\graph.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\graph_shortest_path.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\lgamma.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\linear_assignment_.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\metaestimators.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\mocking.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\multiclass.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\murmurhash.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\optimize.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\random.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\seq_dataset.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsefuncs.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsefuncs_fast.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\stats.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\testing.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\validation.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\weight_vector.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\_logistic_sigmoid.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\_random.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\_scipy_sparse_lsqr_backport.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsetools\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsetools\_graph_tools.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsetools\_graph_validation.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsetools\_traversal.pyd'
[00:02:56] adding 'PLATLIB\sklearn\utils\sparsetools\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_bench.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_class_weight.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_estimator_checks.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_extmath.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_fast_dict.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_fixes.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_graph.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_linear_assignment.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_metaestimators.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_multiclass.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_murmurhash.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_optimize.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_random.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_seq_dataset.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_shortest_path.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_sparsefuncs.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_stats.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_testing.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_utils.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\test_validation.py'
[00:02:56] adding 'PLATLIB\sklearn\utils\tests\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\_build_utils\__init__.py'
[00:02:56] adding 'PLATLIB\sklearn\__check_build\setup.py'
[00:02:56] adding 'PLATLIB\sklearn\__check_build\_check_build.pyd'
[00:02:56] adding 'PLATLIB\sklearn\__check_build\__init__.py'
[00:02:56] removing 'build\bdist.win32\wininst' (and everything under it)
[00:02:56] C:\Python27\lib\site-packages\wheel\pep425tags.py:77: RuntimeWarning: Config variable 'Py_DEBUG' is unset, Python ABI tag may be incorrect
[00:02:56]   warn=(impl == 'cp')):
[00:02:56] C:\Python27\lib\site-packages\wheel\pep425tags.py:81: RuntimeWarning: Config variable 'WITH_PYMALLOC' is unset, Python ABI tag may be incorrect
[00:02:56]   warn=(impl == 'cp')):
[00:02:56] C:\Python27\lib\site-packages\wheel\pep425tags.py:87: RuntimeWarning: Config variable 'Py_UNICODE_SIZE' is unset, Python ABI tag may be incorrect
[00:02:56]   sys.version_info < (3, 3))) \
[00:02:56] ls dist
[00:02:56] 
[00:02:56] 
[00:02:56]     Directory: C:\projects\scikit-learn\dist
[00:02:56] 
[00:02:56] 
[00:02:56] Mode                LastWriteTime         Length Name                                                                                                                                                                                
[00:02:56] ----                -------------         ------ ----                                                                                                                                                                                
[00:02:56] -a----         6/3/2016   9:38 AM        3860475 scikit-learn-0.18.dev0.win32-py2.7.exe                                                                                                                                              
[00:02:56] -a----         6/3/2016   9:38 AM        3629742 scikit_learn-0.18.dev0-cp27-cp27m-win32.whl                                                                                                                                         
[00:02:56] 
[00:02:56] 
[00:02:56] pip install --pre --no-index --find-links dist/ scikit-learn
[00:02:57] Ignoring indexes: https://pypi.python.org/simple
[00:02:57] Collecting scikit-learn
[00:02:57] Installing collected packages: scikit-learn
[00:03:00] Successfully installed scikit-learn-0.18.dev0
[00:03:00] mkdir empty_folder
[00:03:00] cd empty_folder
[00:03:00] python -c "import nose; nose.main()" --with-timer --timer-top-n 20 -s -v sklearn
[00:03:03] C:\Python27\lib\site-packages\sklearn\cross_validation.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. Also note that the interface of the new CV iterators are different from that of this module. This module will be removed in 0.20.
[00:03:03]   "This module will be removed in 0.20.", DeprecationWarning)
[00:03:03] C:\Python27\lib\site-packages\sklearn\grid_search.py:43: DeprecationWarning: This module has been deprecated in favor of the model_selection module into which all the refactored classes and functions are moved. This module will be removed in 0.20.
[00:03:03]   DeprecationWarning)
[00:03:03] C:\Python27\lib\site-packages\sklearn\lda.py:4: DeprecationWarning: lda.LDA has been moved to discriminant_analysis.LinearDiscriminantAnalysis in 0.17 and will be removed in 0.19
[00:03:03]   "in 0.17 and will be removed in 0.19", DeprecationWarning)
[00:03:03] C:\Python27\lib\site-packages\sklearn\learning_curve.py:23: DeprecationWarning: This module has been
[00:03:03]  deprecated in favor of the model_selection module into which all the functions are moved. This module will be removed in 0.20
[00:03:03]   DeprecationWarning)
[00:03:03] C:\Python27\lib\site-packages\sklearn\qda.py:4: DeprecationWarning: qda.QDA has been moved to discriminant_analysis.QuadraticDiscriminantAnalysis in 0.17 and will be removed in 0.19.
[00:03:03]   "in 0.17 and will be removed in 0.19.", DeprecationWarning)
[00:03:03] sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation ... 
[00:03:03] ok (0.0468s)
[00:03:03] sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict ... 
[00:03:03] ok (0.0056s)
[00:03:03] sklearn.cluster.tests.test_affinity_propagation.test_affinity_propagation_predict_error ... 
[00:03:03] ok (0.0047s)
[00:03:03] sklearn.cluster.tests.test_bicluster.test_get_submatrix ... 
[00:03:03] ok (0.0013s)
[00:03:03] sklearn.cluster.tests.test_bicluster.test_spectral_coclustering ... 
[00:03:03] ok (0.2234s)
[00:03:03] sklearn.cluster.tests.test_bicluster.test_spectral_biclustering ... 
[00:03:04] ok (0.5529s)
[00:03:04] sklearn.cluster.tests.test_bicluster.test_scale_normalize ... 
[00:03:04] ok (0.0040s)
[00:03:04] sklearn.cluster.tests.test_bicluster.test_bistochastic_normalize ... 
[00:03:04] ok (0.0078s)
[00:03:04] sklearn.cluster.tests.test_bicluster.test_log_normalize ... 
[00:03:04] ok (0.0012s)
[00:03:04] sklearn.cluster.tests.test_bicluster.test_fit_best_piecewise ... 
[00:03:04] ok (0.0220s)
[00:03:04] sklearn.cluster.tests.test_bicluster.test_project_and_cluster ... 
[00:03:04] ok (0.0124s)
[00:03:04] sklearn.cluster.tests.test_bicluster.test_perfect_checkerboard ... 
[00:03:04] SKIP: This test is failing on the buildbot, but cannot reproduce. Temporarily disabling it until it can be reproduced and  fixed.
[00:03:04] sklearn.cluster.tests.test_bicluster.test_errors ... 
[00:03:04] ok (0.0005s)
[00:03:04] sklearn.cluster.tests.test_birch.test_n_samples_leaves_roots ... 
[00:03:04] ok (0.0009s)
[00:03:04] sklearn.cluster.tests.test_birch.test_partial_fit ... 
[00:03:04] ok (0.0051s)
[00:03:04] sklearn.cluster.tests.test_birch.test_birch_predict ... 
[00:03:04] ok (0.0017s)
[00:03:04] sklearn.cluster.tests.test_birch.test_n_clusters ... 
[00:03:04] ok (0.0340s)
[00:03:04] sklearn.cluster.tests.test_birch.test_sparse_X ... 
[00:03:04] ok (0.0079s)
[00:03:04] sklearn.cluster.tests.test_birch.test_branching_factor ... 
[00:03:04] ok (0.0165s)
[00:03:04] sklearn.cluster.tests.test_birch.test_threshold ... 
[00:03:04] ok (0.0032s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_similarity ... 
[00:03:04] ok (0.0017s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_feature ... 
[00:03:04] ok (0.0027s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_sparse ... 
[00:03:04] ok (0.0024s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_sparse_precomputed ... 
[00:03:04] ok (0.0021s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_no_core_samples ... 
[00:03:04] ok (0.0027s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_callable ... 
[00:03:04] ok (0.1801s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_balltree ... 
[00:03:04] ok (0.0055s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_input_validation ... 
[00:03:04] ok (0.0009s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_badargs ... 
[00:03:04] ok (0.0005s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_pickle ... 
[00:03:04] ok (0.0033s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_boundaries ... 
[00:03:04] ok (0.0009s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_weighted_dbscan ... 
[00:03:04] ok (0.0100s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_core_samples_toy ... 
[00:03:04] ok (0.0057s)
[00:03:04] sklearn.cluster.tests.test_dbscan.test_dbscan_precomputed_metric_with_degenerate_input_arrays ... 
[00:03:04] ok (0.0017s)
[00:03:04] sklearn.cluster.tests.test_hierarchical.test_linkage_misc ... 
[00:03:04] ok (0.0015s)
[00:03:04] sklearn.cluster.tests.test_hierarchical.test_structured_linkage_tree ... 
[00:03:04] ok (0.0248s)
[00:03:04] sklearn.cluster.tests.test_hierarchical.test_unstructured_linkage_tree ... 
[00:03:04] ok (0.0480s)
[00:03:04] sklearn.cluster.tests.test_hierarchical.test_height_linkage_tree ... 
[00:03:04] ok (0.0239s)
[00:03:04] sklearn.cluster.tests.test_hierarchical.test_agglomerative_clustering ... 
[00:03:05] ok (0.5085s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_ward_agglomeration ... 
[00:03:05] ok (0.0109s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_scikit_vs_scipy ... 
[00:03:05] ok (0.0289s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_connectivity_propagation ... 
[00:03:05] ok (0.0024s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_ward_tree_children_order ... 
[00:03:05] ok (0.0077s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_ward_linkage_tree_return_distance ... 
[00:03:05] ok (0.0355s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_connectivity_fixing_non_lil ... 
[00:03:05] ok (0.0037s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_int_float_dict ... 
[00:03:05] ok (0.0003s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_connectivity_callable ... 
[00:03:05] ok (0.0048s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_connectivity_ignores_diagonal ... 
[00:03:05] ok (0.0050s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_compute_full_tree ... 
[00:03:05] ok (0.0124s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_n_components ... 
[00:03:05] ok (0.0148s)
[00:03:05] sklearn.cluster.tests.test_hierarchical.test_agg_n_clusters ... 
[00:03:05] ok (0.0002s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_kmeans_dtype ... 
[00:03:05] ok (0.0038s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_elkan_results ... 
[00:03:05] ok (0.0095s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_labels_assignment_and_inertia ... 
[00:03:05] ok (0.0011s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_update_consistency ... 
[00:03:05] ok (0.0015s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init ... 
[00:03:05] ok (0.0114s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_new_centers ... 
[00:03:05] ok (0.0021s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_precompute_distances_flag ... 
[00:03:05] ok (0.0004s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_sparse ... 
[00:03:05] ok (0.0372s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_random_init ... 
[00:03:05] ok (0.0109s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_random_init_sparse ... 
[00:03:05] ok (0.0228s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_not_precomputed ... 
[00:03:05] ok (0.0120s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_random_init_not_precomputed ... 
[00:03:05] ok (0.0114s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_perfect_init ... 
[00:03:05] ok (0.0015s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_n_init ... 
[00:03:05] ok (0.0003s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_explicit_init_shape ... 
[00:03:05] ok (0.0019s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_k_means_fortran_aligned_data ... 
[00:03:05] ok (0.0008s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_dense_array ... 
[00:03:05] ok (0.0076s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_mb_kmeans_verbose ... 
[00:03:05] ok (0.0076s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_mb_k_means_plus_plus_init_sparse_matrix ... 
[00:03:05] ok (0.0139s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_init_with_large_k ... 
[00:03:05] ok (0.0368s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_dense_array ... 
[00:03:05] ok (0.0109s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_k_means_random_init_sparse_csr ... 
[00:03:05] ok (0.0131s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_dense_array ... 
[00:03:05] ok (0.0054s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_k_means_init_multiple_runs_with_explicit_centers ... 
[00:03:05] ok (0.0066s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_k_means_perfect_init_sparse_csr ... 
[00:03:05] ok (0.0078s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_fit ... 
[00:03:05] ok (0.0379s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_sensible_reassign_partial_fit ... 
[00:03:05] ok (0.0898s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_reassign ... 
[00:03:05] ok (0.0385s)
[00:03:05] sklearn.cluster.tests.test_k_means.test_minibatch_with_many_reassignments ... 
[00:03:06] ok (0.5989s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_sparse_mb_k_means_callable_init ... 
[00:03:06] ok (0.0074s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_mini_batch_k_means_random_init_partial_fit ... 
[00:03:06] ok (0.0077s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_minibatch_default_init_size ... 
[00:03:06] ok (0.0086s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_minibatch_tol ... 
[00:03:06] ok (0.0047s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_minibatch_set_init_size ... 
[00:03:06] ok (0.0054s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_k_means_invalid_init ... 
[00:03:06] ok (0.0004s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_mini_match_k_means_invalid_init ... 
[00:03:06] ok (0.0002s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_k_means_copyx ... 
[00:03:06] ok (0.0122s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_k_means_non_collapsed ... 
[00:03:06] ok (0.0011s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_predict ... 
[00:03:06] ok (0.0229s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_score ... 
[00:03:06] ok (0.0058s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_predict_minibatch_dense_input ... 
[00:03:06] ok (0.0131s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_predict_minibatch_kmeanspp_init_sparse_input ... 
[00:03:06] ok (0.0353s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_predict_minibatch_random_init_sparse_input ... 
[00:03:06] ok (0.0136s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_input_dtypes ... 
[00:03:06] ok (0.0722s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_transform ... 
[00:03:06] ok (0.0120s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_fit_transform ... 
[00:03:06] ok (0.0232s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_predict_equal_labels ... 
[00:03:06] ok (0.0047s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_full_vs_elkan ... 
[00:03:06] ok (0.0497s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_n_init ... 
[00:03:06] ok (0.0835s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_k_means_function ... 
[00:03:06] ok (0.0161s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_k_means_plus_plus_init_2_jobs ... 
[00:03:06] SKIP: Possible multi-process bug with some BLAS under Python < 3.4
[00:03:06] Test that x_squared_norms can be None in _init_centroids ... 
[00:03:06] ok (0.0012s)
[00:03:06] sklearn.cluster.tests.test_k_means.test_max_iter_error ... 
[00:03:06] ok (0.0002s)
[00:03:06] sklearn.cluster.tests.test_mean_shift.test_estimate_bandwidth ... 
[00:03:06] ok (0.0031s)
[00:03:06] sklearn.cluster.tests.test_mean_shift.test_mean_shift ... 
[00:03:07] ok (0.7028s)
[00:03:07] sklearn.cluster.tests.test_mean_shift.test_parallel ... 
[00:03:10] ok (3.4907s)
[00:03:10] sklearn.cluster.tests.test_mean_shift.test_meanshift_predict ... 
[00:03:11] ok (0.3477s)
[00:03:11] sklearn.cluster.tests.test_mean_shift.test_meanshift_all_orphans ... 
[00:03:11] ok (0.0017s)
[00:03:11] sklearn.cluster.tests.test_mean_shift.test_unfitted ... 
[00:03:11] ok (0.0001s)
[00:03:11] sklearn.cluster.tests.test_mean_shift.test_bin_seeds ... 
[00:03:11] ok (0.0015s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_spectral_clustering ... 
[00:03:11] ok (0.0740s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_spectral_amg_mode ... 
[00:03:11] ok (0.0035s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_spectral_unknown_mode ... 
[00:03:11] ok (0.0026s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_spectral_unknown_assign_labels ... 
[00:03:11] ok (0.0012s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_spectral_clustering_sparse ... 
[00:03:11] ok (0.0115s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_affinities ... 
[00:03:11] ok (0.2037s)
[00:03:11] sklearn.cluster.tests.test_spectral.test_discretize ... 
[00:03:11] ok (0.0611s)
[00:03:11] sklearn.covariance.tests.test_covariance.test_covariance ... 
[00:03:11] ok (0.0054s)
[00:03:11] sklearn.covariance.tests.test_covariance.test_shrunk_covariance ... 
[00:03:11] ok (0.0033s)
[00:03:11] sklearn.covariance.tests.test_covariance.test_ledoit_wolf ... 
[00:03:11] ok (0.0105s)
[00:03:11] sklearn.covariance.tests.test_covariance.test_ledoit_wolf_small ... 
[00:03:11] ok (0.0009s)
[00:03:11] sklearn.covariance.tests.test_covariance.test_ledoit_wolf_large ... 
[00:03:11] ok (0.0018s)
[00:03:11] sklearn.covariance.tests.test_covariance.test_oas ... 
[00:03:11] ok (0.0081s)
[00:03:11] sklearn.covariance.tests.test_graph_lasso.test_graph_lasso ... 
[00:03:11] ok (0.1946s)
[00:03:11] sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_iris ... 
[00:03:11] ok (0.0077s)
[00:03:11] sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_iris_singular ... 
[00:03:11] ok (0.0073s)
[00:03:11] sklearn.covariance.tests.test_graph_lasso.test_graph_lasso_cv ... 
[00:03:11] ok (0.1052s)
[00:03:11] sklearn.covariance.tests.test_robust_covariance.test_mcd ... 
[00:03:13] ok (1.5347s)
[00:03:13] sklearn.covariance.tests.test_robust_covariance.test_fast_mcd_on_invalid_input ... 
[00:03:13] ok (0.0002s)
[00:03:13] sklearn.covariance.tests.test_robust_covariance.test_mcd_class_on_invalid_input ... 
[00:03:13] ok (0.0001s)
[00:03:13] sklearn.covariance.tests.test_robust_covariance.test_mcd_issue1127 ... 
[00:03:13] ok (0.0030s)
[00:03:13] sklearn.covariance.tests.test_robust_covariance.test_outlier_detection ... 
[00:03:13] ok (0.0416s)
[00:03:13] sklearn.cross_decomposition.tests.test_pls.test_pls ... 
[00:03:13] ok (0.0201s)
[00:03:13] sklearn.cross_decomposition.tests.test_pls.test_PLSSVD ... 
[00:03:13] ok (0.0055s)
[00:03:13] sklearn.cross_decomposition.tests.test_pls.test_univariate_pls_regression ... 
[00:03:13] ok (0.0026s)
[00:03:13] sklearn.cross_decomposition.tests.test_pls.test_predict_transform_copy ... 
[00:03:13] ok (0.0027s)
[00:03:13] sklearn.cross_decomposition.tests.test_pls.test_scale_and_stability ... 
[00:03:13] ok (0.0396s)
[00:03:13] sklearn.cross_decomposition.tests.test_pls.test_pls_errors ... 
[00:03:13] ok (0.0012s)
[00:03:13] sklearn.datasets.tests.test_20news.test_20news ... 
[00:03:13] SKIP: Download 20 newsgroups to run this test
[00:03:13] Checks the length consistencies within the bunch ... 
[00:03:13] SKIP: Download 20 newsgroups to run this test
[00:03:13] sklearn.datasets.tests.test_20news.test_20news_vectorized ... 
[00:03:13] SKIP: Test too slow.
[00:03:13] sklearn.datasets.tests.test_base.test_data_home ... 
[00:03:13] ok (0.0006s)
[00:03:13] sklearn.datasets.tests.test_base.test_default_empty_load_files ... 
[00:03:13] ok (0.0002s)
[00:03:13] sklearn.datasets.tests.test_base.test_default_load_files ... 
[00:03:13] ok (0.0013s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_files_w_categories_desc_and_encoding ... 
[00:03:13] ok (0.0015s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_files_wo_load_content ... 
[00:03:13] ok (0.0011s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_sample_images ... 
[00:03:13] C:\Python27\lib\site-packages\sklearn\datasets\tests\test_base.py:122: UserWarning: Could not load sample images, PIL is not available.
[00:03:13]   warnings.warn("Could not load sample images, PIL is not available.")
[00:03:13] ok (0.0014s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_digits ... 
[00:03:13] ok (0.0765s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_digits_n_class_lt_10 ... 
[00:03:13] ok (0.0767s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_sample_image ... 
[00:03:13] C:\Python27\lib\site-packages\sklearn\datasets\tests\test_base.py:143: UserWarning: Could not load sample images, PIL is not available.
[00:03:13]   warnings.warn("Could not load sample images, PIL is not available.")
[00:03:13] ok (0.0013s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_missing_sample_image_error ... 
[00:03:13] C:\Python27\lib\site-packages\sklearn\datasets\tests\test_base.py:159: UserWarning: Could not load sample images, PIL is not available.
[00:03:13]   warnings.warn("Could not load sample images, PIL is not available.")
[00:03:13] ok (0.0011s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_diabetes ... 
[00:03:13] ok (0.0112s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_linnerud ... 
[00:03:13] ok (0.0007s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_iris ... 
[00:03:13] ok (0.0013s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_breast_cancer ... 
[00:03:13] ok (0.0111s)
[00:03:13] sklearn.datasets.tests.test_base.test_load_boston ... 
[00:03:13] ok (0.0051s)
[00:03:13] sklearn.datasets.tests.test_base.test_loads_dumps_bunch ... 
[00:03:13] ok (0.0003s)
[00:03:13] sklearn.datasets.tests.test_base.test_bunch_pickle_generated_with_0_16_and_read_with_0_17 ... 
[00:03:13] ok (0.0005s)
[00:03:13] sklearn.datasets.tests.test_covtype.test_fetch ... 
[00:03:13] SKIP: Covertype dataset can not be loaded.
[00:03:13] sklearn.datasets.tests.test_kddcup99.test_percent10 ... 
[00:03:13] SKIP: kddcup99 dataset can not be loaded.
[00:03:13] SKIP: PIL not installed.
[00:03:13] sklearn.datasets.tests.test_mldata.test_mldata_filename ... 
[00:03:13] ok (0.0003s)
[00:03:13] Test that fetch_mldata is able to download and cache a data set. ... 
[00:03:13] ok (0.0023s)
[00:03:13] sklearn.datasets.tests.test_mldata.test_fetch_one_column ... 
[00:03:13] ok (0.0019s)
[00:03:13] sklearn.datasets.tests.test_mldata.test_fetch_multiple_column ... 
[00:03:13] ok (0.0067s)
[00:03:13] sklearn.datasets.tests.test_rcv1.test_fetch_rcv1 ... 
[00:03:13] SKIP: Download RCV1 dataset to run this test.
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_classification ... 
[00:03:13] ok (0.0014s)
[00:03:13] Test the construction of informative features in make_classification ... 
[00:03:13] ok (0.0762s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_sequences ... 
[00:03:13] ok (0.0129s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator ... 
[00:03:13] ok (0.0069s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_multilabel_classification_return_indicator_sparse ... 
[00:03:13] ok (0.0043s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_hastie_10_2 ... 
[00:03:13] ok (0.0003s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_regression ... 
[00:03:13] ok (0.0010s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_regression_multitarget ... 
[00:03:13] ok (0.0006s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_blobs ... 
[00:03:13] ok (0.0007s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_friedman1 ... 
[00:03:13] ok (0.0003s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_friedman2 ... 
[00:03:13] ok (0.0004s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_friedman3 ... 
[00:03:13] ok (0.0003s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_low_rank_matrix ... 
[00:03:13] ok (0.0064s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_sparse_coded_signal ... 
[00:03:13] ok (0.0006s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_sparse_uncorrelated ... 
[00:03:13] ok (0.0002s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_spd_matrix ... 
[00:03:13] ok (0.0006s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_swiss_roll ... 
[00:03:13] ok (0.0006s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_s_curve ... 
[00:03:13] ok (0.0004s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_biclusters ... 
[00:03:13] ok (0.0017s)
[00:03:13] sklearn.datasets.tests.test_samples_generator.test_make_checkerboard ... 
[00:03:13] ok (0.0059s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file ... 
[00:03:13] ok (0.0010s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_fd ... 
[00:03:13] ok (0.0008s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_multilabel ... 
[00:03:13] ok (0.0003s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_files ... 
[00:03:13] ok (0.0013s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_svmlight_file_n_features ... 
[00:03:13] ok (0.0007s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_compressed ... 
[00:03:13] ok (0.0030s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file ... 
[00:03:13] ok (0.0002s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_invalid_order_file ... 
[00:03:13] ok (0.0002s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_zero_based ... 
[00:03:13] ok (0.0001s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_zero_based_auto ... 
[00:03:13] ok (0.0005s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_with_qid ... 
[00:03:13] ok (0.0011s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_load_invalid_file2 ... 
[00:03:13] ok (0.0006s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_not_a_filename ... 
[00:03:13] ok (0.0001s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_invalid_filename ... 
[00:03:13] ok (0.0001s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_dump ... 
[00:03:13] ok (0.0562s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_dump_multilabel ... 
[00:03:13] ok (0.0013s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_dump_concise ... 
[00:03:13] ok (0.0009s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_dump_comment ... 
[00:03:13] ok (0.0018s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_dump_invalid ... 
[00:03:13] ok (0.0005s)
[00:03:13] sklearn.datasets.tests.test_svmlight_format.test_dump_query_id ... 
[00:03:13] ok (0.0013s)
[00:03:13] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_shapes ... 
[00:03:14] ok (0.0759s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_overcomplete ... 
[00:03:14] ok (0.0182s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction ... 
[00:03:14] ok (0.0223s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_reconstruction_parallel ... 
[00:03:14] ok (0.0226s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_lassocd_readonly_data ... 
[00:03:14] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:474: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations
[00:03:14]   ConvergenceWarning)
[00:03:14] ok (0.1007s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_nonzero_coefs ... 
[00:03:14] ok (0.0805s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_unknown_fit_algorithm ... 
[00:03:14] ok (0.0003s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_split ... 
[00:03:14] ok (0.0779s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_shapes ... 
[00:03:14] ok (0.1148s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_verbosity ... 
[00:03:14] ok (0.2383s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_estimator_shapes ... 
[00:03:14] ok (0.0224s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_overcomplete ... 
[00:03:14] ok (0.0255s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_initialization ... 
[00:03:14] ok (0.0004s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_dict_learning_online_partial_fit ... 
[00:03:14] ok (0.1649s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_shapes ... 
[00:03:14] ok (0.0053s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_input ... 
[00:03:14] ok (0.0154s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error ... 
[00:03:14] ok (0.0031s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_sparse_encode_error_default_sparsity ... 
[00:03:14] ok (0.0098s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_unknown_method ... 
[00:03:14] ok (0.0002s)
[00:03:14] sklearn.decomposition.tests.test_dict_learning.test_sparse_coder_estimator ... 
[00:03:14] ok (0.0029s)
[00:03:14] sklearn.decomposition.tests.test_factor_analysis.test_factor_analysis ... 
[00:03:14] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:368: UserWarning: The number of power iterations is increased to 7 to achieve higher precision.
[00:03:14]   warnings.warn("The number of power iterations is increased to "
[00:03:14] ok (0.0482s)
[00:03:14] sklearn.decomposition.tests.test_fastica.test_gs ... 
[00:03:14] ok (0.0003s)
[00:03:14] sklearn.decomposition.tests.test_fastica.test_fastica_simple ... 
[00:03:15] ok (0.1337s)
[00:03:15] sklearn.decomposition.tests.test_fastica.test_fastica_nowhiten ... 
[00:03:15] ok (0.0031s)
[00:03:15] sklearn.decomposition.tests.test_fastica.test_non_square_fastica ... 
[00:03:15] ok (0.0025s)
[00:03:15] sklearn.decomposition.tests.test_fastica.test_fit_transform ... 
[00:03:15] ok (0.0628s)
[00:03:15] sklearn.decomposition.tests.test_fastica.test_inverse_transform ... 
[00:03:15] ok (0.0788s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca ... 
[00:03:15] ok (0.0053s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_check_projection ... 
[00:03:15] ok (0.0027s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_inverse ... 
[00:03:15] ok (0.0017s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_validation ... 
[00:03:15] ok (0.0004s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_set_params ... 
[00:03:15] ok (0.0027s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_num_features_change ... 
[00:03:15] ok (0.0011s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_signs ... 
[00:03:15] ok (0.0206s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_batch_values ... 
[00:03:15] ok (0.0080s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_partial_fit ... 
[00:03:15] ok (0.0030s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_iris ... 
[00:03:15] ok (0.0022s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_incremental_pca_against_pca_random_data ... 
[00:03:15] ok (0.0017s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_explained_variances ... 
[00:03:15] ok (0.1176s)
[00:03:15] sklearn.decomposition.tests.test_incremental_pca.test_whitening ... 
[00:03:15] ok (0.0124s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca ... 
[00:03:15] ok (0.0234s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_parameters ... 
[00:03:15] ok (0.0001s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_consistent_transform ... 
[00:03:15] ok (0.0011s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_sparse ... 
[00:03:15] ok (0.0194s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_linear_kernel ... 
[00:03:15] ok (0.0010s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_n_components ... 
[00:03:15] ok (0.0037s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_remove_zero_eig ... 
[00:03:15] ok (0.0010s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_precomputed ... 
[00:03:15] ok (0.0048s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_kernel_pca_invalid_kernel ... 
[00:03:15] ok (0.0002s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline ... 
[00:03:15] ok (0.1742s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_gridsearch_pipeline_precomputed ... 
[00:03:15] ok (0.1632s)
[00:03:15] sklearn.decomposition.tests.test_kernel_pca.test_nested_circles ... 
[00:03:15] ok (0.0331s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_initialize_nn_output ... 
[00:03:15] ok (0.0033s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_initialize_close ... 
[00:03:15] ok (0.0012s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_initialize_variants ... 
[00:03:15] ok (0.0033s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_nls_nn_output ... 
[00:03:15] ok (0.0003s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_nls_close ... 
[00:03:15] ok (0.0021s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_nmf_transform_custom_init ... 
[00:03:15] ok (0.0060s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_safe_compute_error ... 
[00:03:15] ok (0.0007s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_n_components_greater_n_features ... 
[00:03:15] ok (0.0040s)
[00:03:15] sklearn.decomposition.tests.test_nmf.test_nmf_fit_close ... 
[00:03:16] ok (0.2132s)
[00:03:16] sklearn.decomposition.tests.test_nmf.test_nmf_fit_nn_output ... 
[00:03:16] ok (0.1555s)
[00:03:16] sklearn.decomposition.tests.test_nmf.test_nmf_inverse_transform ... 
[00:03:16] ok (0.5496s)
[00:03:16] sklearn.decomposition.tests.test_nmf.test_nmf_transform ... 
[00:03:17] ok (1.1259s)
[00:03:17] sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_checking ... 
[00:03:17] ok (0.0043s)
[00:03:17] sklearn.decomposition.tests.test_nmf.test_non_negative_factorization_consistency ... 
[00:03:18] ok (0.1149s)
[00:03:18] sklearn.decomposition.tests.test_nmf.test_parameter_checking ... 
[00:03:18] ok (0.0035s)
[00:03:18] sklearn.decomposition.tests.test_nmf.test_projgrad_nmf_sparseness ... 
[00:03:18] ok (0.0469s)
[00:03:18] sklearn.decomposition.tests.test_nmf.test_sparse_input ... 
[00:03:18] ok (0.0488s)
[00:03:18] sklearn.decomposition.tests.test_nmf.test_sparse_transform ... 
[00:03:18] ok (0.0099s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_default_prior_params ... 
[00:03:18] ok (0.0358s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_fit_batch ... 
[00:03:18] ok (0.0122s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_fit_online ... 
[00:03:18] ok (0.0240s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit ... 
[00:03:18] ok (0.0094s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_dense_input ... 
[00:03:18] ok (0.0144s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_transform ... 
[00:03:18] ok (0.1074s)
[00:03:18] sklearn.decomposition.tests.test_online_lda.test_lda_fit_transform ... 
[00:03:19] ok (1.3634s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_dim_mismatch ... 
[00:03:19] ok (0.0104s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_invalid_params ... 
[00:03:19] ok (0.0011s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_negative_input ... 
[00:03:19] ok (0.0005s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_no_component_error ... 
[00:03:19] ok (0.0004s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_transform_mismatch ... 
[00:03:19] ok (0.0205s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_preplexity_mismatch ... 
[00:03:19] ok (0.0420s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_perplexity ... 
[00:03:19] ok (0.0669s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_score ... 
[00:03:19] ok (0.0786s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_perplexity_input_format ... 
[00:03:19] ok (0.0136s)
[00:03:19] sklearn.decomposition.tests.test_online_lda.test_lda_score_perplexity ... 
[00:03:20] ok (0.0225s)
[00:03:20] Test LDA on empty document (all-zero rows). ... 
[00:03:20] ok (0.9485s)
[00:03:20] Test Cython version of Dirichlet expectation calculation. ... 
[00:03:20] C:\Python27\lib\site-packages\sklearn\decomposition\tests\test_online_lda.py:333: RuntimeWarning: underflow encountered in exp
[00:03:20]   assert_allclose(expectation, np.exp(psi(x) - psi(np.sum(x))),
[00:03:20] C:\Python27\lib\site-packages\numpy\core\numeric.py:2222: RuntimeWarning: underflow encountered in multiply
[00:03:20]   r = all(less_equal(abs(x - y), atol + rtol * abs(y)))
[00:03:20] ok (0.0059s)
[00:03:20] sklearn.decomposition.tests.test_online_lda.test_lda_multi_jobs ... 
[00:03:23] ok (2.4008s)
[00:03:23] sklearn.decomposition.tests.test_online_lda.test_lda_partial_fit_multi_jobs ... 
[00:03:25] ok (2.1996s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca ... 
[00:03:25] ok (0.0070s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_arpack_solver ... ok (0.0069s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_randomized_solver ... ok (0.0075s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_no_empty_slice_warning ... ok (0.0034s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_whitening ... ok (0.0565s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_check_projection ... ok (0.0024s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_inverse ... ok (0.0031s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_validation ... ok (0.0004s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_randomized_pca_check_projection ... ok (0.0010s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_randomized_pca_check_list ... ok (0.0010s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_randomized_pca_inverse ... ok (0.0019s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_dim ... ok (0.0006s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_explained_variance ... 
[00:03:25] ok (0.0202s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_infer_dim_1 ... 
[00:03:25] ok (0.0013s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_infer_dim_2 ... 
[00:03:25] ok (0.0010s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_infer_dim_3 ... 
[00:03:25] ok (0.0007s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_infer_dim_by_explained_variance ... 
[00:03:25] ok (0.0010s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_score ... 
[00:03:25] ok (0.0056s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_score2 ... 
[00:03:25] ok (0.0064s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_pca_score3 ... 
[00:03:25] ok (0.0016s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_svd_solver_auto ... 
[00:03:25] ok (0.0293s)
[00:03:25] sklearn.decomposition.tests.test_pca.test_deprecation_randomized_pca ... 
[00:03:25] ok (0.0034s)
[00:03:25] sklearn.decomposition.tests.test_sparse_pca.test_correct_shapes ... 
[00:03:25] ok (0.1265s)
[00:03:25] sklearn.decomposition.tests.test_sparse_pca.test_fit_transform ... 
[00:03:25] ok (0.0475s)
[00:03:25] sklearn.decomposition.tests.test_sparse_pca.test_transform_nan ... 
[00:03:25] ok (0.0357s)
[00:03:25] sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_tall ... 
[00:03:26] ok (0.0686s)
[00:03:26] sklearn.decomposition.tests.test_sparse_pca.test_initialization ... 
[00:03:26] ok (0.0004s)
[00:03:26] sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_correct_shapes ... 
[00:03:26] ok (0.2196s)
[00:03:26] sklearn.decomposition.tests.test_sparse_pca.test_mini_batch_fit_transform ... 
[00:03:26] SKIP: skipping mini_batch_fit_transform.
[00:03:26] sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel ... 
[00:03:30] ok (4.4477s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_algorithms ... 
[00:03:30] ok (0.0081s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_attributes ... ok (0.0095s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_too_many_components ... ok (0.0005s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_sparse_formats ... ok (0.0122s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_inverse_transform ... ok (0.0104s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_integers ... ok (0.0022s)
[00:03:30] sklearn.decomposition.tests.test_truncated_svd.test_explained_variance ... ok (0.0351s)
[00:03:30] sklearn.ensemble.tests.test_bagging.test_classification ... 
[00:03:34] ok (3.5789s)
[00:03:34] sklearn.ensemble.tests.test_bagging.test_sparse_classification ... 
[00:03:36] C:\Python27\lib\site-packages\sklearn\ensemble\bagging.py:711: RuntimeWarning: divide by zero encountered in log
[00:03:36]   return np.log(self.predict_proba(X))
[00:03:36] ok (2.1527s)
[00:03:36] sklearn.ensemble.tests.test_bagging.test_regression ... 
[00:03:37] ok (1.3138s)
[00:03:37] sklearn.ensemble.tests.test_bagging.test_sparse_regression ... 
[00:03:38] ok (0.3965s)
[00:03:38] sklearn.ensemble.tests.test_bagging.test_bootstrap_samples ... 
[00:03:38] ok (0.1058s)
[00:03:38] sklearn.ensemble.tests.test_bagging.test_bootstrap_features ... 
[00:03:38] ok (0.0852s)
[00:03:38] sklearn.ensemble.tests.test_bagging.test_probability ... 
[00:03:38] ok (0.0470s)
[00:03:38] sklearn.ensemble.tests.test_bagging.test_oob_score_classification ... 
[00:03:38] ok (0.4534s)
[00:03:38] sklearn.ensemble.tests.test_bagging.test_oob_score_regression ... 
[00:03:39] ok (0.2130s)
[00:03:39] sklearn.ensemble.tests.test_bagging.test_single_estimator ... 
[00:03:39] ok (0.0076s)
[00:03:39] sklearn.ensemble.tests.test_bagging.test_error ... 
[00:03:39] ok (0.0195s)
[00:03:39] sklearn.ensemble.tests.test_bagging.test_parallel_classification ... 
[00:03:44] ok (5.4215s)
[00:03:44] sklearn.ensemble.tests.test_bagging.test_parallel_regression ... 
[00:03:47] ok (2.9843s)
[00:03:47] sklearn.ensemble.tests.test_bagging.test_gridsearch ... 
[00:03:47] ok (0.1326s)
[00:03:47] sklearn.ensemble.tests.test_bagging.test_base_estimator ... 
[00:03:57] ok (9.5557s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_bagging_with_pipeline ... 
[00:03:57] ok (0.0668s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_bagging_sample_weight_unsupported_but_passed ... 
[00:03:57] ok (0.0046s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_warm_start ... 
[00:03:57] ok (0.0466s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_warm_start_smaller_n_estimators ... 
[00:03:57] ok (0.0124s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_warm_start_equal_n_estimators ... 
[00:03:57] ok (0.0160s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_warm_start_equivalence ... 
[00:03:57] ok (0.0528s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_warm_start_with_oob_score_fails ... 
[00:03:57] ok (0.0006s)
[00:03:57] sklearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start ... 
[00:04:00] ok (3.2250s)
[00:04:00] sklearn.ensemble.tests.test_base.test_base ... 
[00:04:00] ok (0.0127s)
[00:04:00] sklearn.ensemble.tests.test_base.test_base_zero_n_estimators ... 
[00:04:00] ok (0.0019s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_classification_toy('ExtraTreesClassifier',) ... 
[00:04:00] ok (0.0377s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_classification_toy('RandomForestClassifier',) ... 
[00:04:00] ok (0.0411s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_iris('ExtraTreesClassifier', 'gini') ... 
[00:04:00] ok (0.0404s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_iris('ExtraTreesClassifier', 'entropy') ... 
[00:04:00] ok (0.0400s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_iris('RandomForestClassifier', 'gini') ... 
[00:04:00] ok (0.0430s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_iris('RandomForestClassifier', 'entropy') ... 
[00:04:00] ok (0.0435s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_boston('ExtraTreesRegressor', 'mse') ... 
[00:04:00] ok (0.0364s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_boston('RandomForestRegressor', 'mse') ... 
[00:04:00] ok (0.0451s)
[00:04:00] sklearn.ensemble.tests.test_forest.test_regressor_attributes('ExtraTreesRegressor',) ... 
[00:04:01] ok (0.0155s)
[00:04:01] sklearn.ensemble.tests.test_forest.test_regressor_attributes('RandomForestRegressor',) ... 
[00:04:01] ok (0.0168s)
[00:04:01] sklearn.ensemble.tests.test_forest.test_probability('ExtraTreesClassifier',) ... 
[00:04:01] ok (0.0220s)
[00:04:01] sklearn.ensemble.tests.test_forest.test_probability('RandomForestClassifier',) ... 
[00:04:01] ok (0.0229s)
[00:04:01] sklearn.ensemble.tests.test_forest.test_importances_asymptotic ... 
[00:04:02] ok (1.0568s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_1d_input ... 
[00:04:02] ok (0.0021s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_random_hasher ... 
[00:04:02] ok (0.1119s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('ExtraTreesRegressor',) ... 
[00:04:02] ok (0.0002s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('RandomForestRegressor',) ... 
[00:04:02] ok (0.0001s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('RandomTreesEmbedding',) ... 
[00:04:02] ok (0.0001s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('ExtraTreesClassifier',) ... 
[00:04:02] ok (0.0001s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_unfitted_feature_importances('RandomForestClassifier',) ... 
[00:04:02] ok (0.0002s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:02] ok (0.0808s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesClassifier', <150x4 sparse matrix of type '<type 'numpy.float64'>' ... 
[00:04:02] ok (0.0544s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:02] ok (0.0704s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:02] ok (0.0708s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestClassifier', <150x4 sparse matrix of type '<type 'numpy.float64'>' ... 
[00:04:02] ok (0.0553s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:02] ok (0.0730s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... 
[00:04:02] ok (0.1479s)
[00:04:02] sklearn.ensemble.tests.test_forest.test_oob_score('ExtraTreesRegressor', <506x13 sparse matrix of type '<type 'numpy.float64'>' ... 
[00:04:03] ok (0.2279s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... 
[00:04:03] ok (0.1994s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score('RandomForestRegressor', <506x13 sparse matrix of type '<type 'numpy.float64'>' ... 
[00:04:03] ok (0.2979s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('ExtraTreesRegressor',) ... 
[00:04:03] ok (0.0004s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('RandomForestRegressor',) ... 
[00:04:03] ok (0.0003s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('RandomTreesEmbedding',) ... 
[00:04:03] ok (0.0001s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('ExtraTreesClassifier',) ... 
[00:04:03] ok (0.0004s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_oob_score_raise_error('RandomForestClassifier',) ... 
[00:04:03] ok (0.0004s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_gridsearch('ExtraTreesClassifier',) ... 
[00:04:03] ok (0.0691s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_gridsearch('RandomForestClassifier',) ... 
[00:04:03] ok (0.0734s)
[00:04:03] sklearn.ensemble.tests.test_forest.test_parallel('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:04] ok (0.3224s)
[00:04:04] sklearn.ensemble.tests.test_forest.test_parallel('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:04] ok (0.3341s)
[00:04:04] sklearn.ensemble.tests.test_forest.test_parallel('ExtraTreesRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... 
[00:04:04] ok (0.2863s)
[00:04:04] sklearn.ensemble.tests.test_forest.test_parallel('RandomForestRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... 
[00:04:05] ok (0.3135s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_pickle('ExtraTreesClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:05] ok (0.0582s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_pickle('RandomForestClassifier', array([[ 5.8,  2.8,  5.1,  2.4], ... 
[00:04:05] ok (0.0526s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_pickle('ExtraTreesRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... 
[00:04:05] ok (0.0779s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_pickle('RandomForestRegressor', array([[  3.16360000e+00,   0.00000000e+00,   1.81000000e+01, ..., ... 
[00:04:05] ok (0.0741s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_multioutput('ExtraTreesClassifier',) ... 
[00:04:05] ok (0.0217s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_multioutput('RandomForestClassifier',) ... 
[00:04:05] ok (0.0225s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_multioutput('ExtraTreesRegressor',) ... 
[00:04:05] ok (0.0187s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_multioutput('RandomForestRegressor',) ... 
[00:04:05] ok (0.0182s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_classes_shape('ExtraTreesClassifier',) ... 
[00:04:05] ok (0.0418s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_classes_shape('RandomForestClassifier',) ... 
[00:04:05] ok (0.0545s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_random_trees_dense_type ... 
[00:04:05] ok (0.0258s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_random_trees_dense_equal ... 
[00:04:05] ok (0.0507s)
[00:04:05] sklearn.ensemble.tests.test_forest.test_random_hasher_sparse_data ... 
[00:04:06] ok (0.2368s)
[00:04:06] sklearn.ensemble.tests.test_forest.test_parallel_train ... 
[00:04:07] ok (1.6593s)
[00:04:07] sklearn.ensemble.tests.test_forest.test_distribution ... 
[00:04:08] ok (1.1777s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_importances ... 
[00:04:08] SKIP: Test skipped on 32bit platforms.
[00:04:08] sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('ExtraTreesRegressor',) ... 
[00:04:08] ok (0.0052s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('RandomForestRegressor',) ... 
[00:04:08] ok (0.0054s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('RandomTreesEmbedding',) ... 
[00:04:08] ok (0.0071s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('ExtraTreesClassifier',) ... 
[00:04:08] ok (0.0061s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_max_leaf_nodes_max_depth('RandomForestClassifier',) ... 
[00:04:08] ok (0.0065s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_min_samples_split('ExtraTreesRegressor',) ... 
[00:04:08] ok (0.0574s)
[00:04:08] sklearn.ensemble.tests.test_forest.test_min_samples_split('RandomForestRegressor',) ... 
[00:04:09] ok (0.0694s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_split('RandomTreesEmbedding',) ... 
[00:04:09] ok (0.0613s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_split('ExtraTreesClassifier',) ... 
[00:04:09] ok (0.0664s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_split('RandomForestClassifier',) ... 
[00:04:09] ok (0.0804s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_leaf('ExtraTreesRegressor',) ... 
[00:04:09] ok (0.0408s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_leaf('RandomForestRegressor',) ... 
[00:04:09] ok (0.0445s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_leaf('RandomTreesEmbedding',) ... 
[00:04:09] ok (0.0419s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_leaf('ExtraTreesClassifier',) ... 
[00:04:09] ok (0.0461s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_samples_leaf('RandomForestClassifier',) ... 
[00:04:09] ok (0.0480s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('ExtraTreesRegressor',) ... 
[00:04:09] ok (0.0135s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('RandomForestRegressor',) ... 
[00:04:09] ok (0.0145s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('RandomTreesEmbedding',) ... 
[00:04:09] ok (0.0214s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('ExtraTreesClassifier',) ... 
[00:04:09] ok (0.0156s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_min_weight_fraction_leaf('RandomForestClassifier',) ... 
[00:04:09] ok (0.0160s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:09] ok (0.1016s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:09] ok (0.0830s)
[00:04:09] sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.0823s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.0797s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.0815s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestRegressor', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.0975s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomTreesEmbedding', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.1091s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomTreesEmbedding', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.1515s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomTreesEmbedding', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:10] ok (0.1162s)
[00:04:10] sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:11] ok (0.0920s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:11] ok (0.0935s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_sparse_input('ExtraTreesClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:11] ok (0.0991s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:11] ok (0.0902s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:11] ok (0.0883s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_sparse_input('RandomForestClassifier', array([[  3.,   1.,   4.,   0.,   3.,   0.,   7.,   2.,   1.,   0.,   5., ... 
[00:04:11] ok (0.0944s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesClassifier', <type 'numpy.float64'>) ... 
[00:04:11] ok (0.1597s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesClassifier', <type 'numpy.float32'>) ... 
[00:04:11] ok (0.1593s)
[00:04:11] sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestClassifier', <type 'numpy.float64'>) ... 
[00:04:12] ok (0.1792s)
[00:04:12] sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestClassifier', <type 'numpy.float32'>) ... 
[00:04:12] ok (0.1907s)
[00:04:12] sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesRegressor', <type 'numpy.float64'>) ... 
[00:04:12] ok (0.1389s)
[00:04:12] sklearn.ensemble.tests.test_forest.test_memory_layout('ExtraTreesRegressor', <type 'numpy.float32'>) ... 
[00:04:12] ok (0.1371s)
[00:04:12] sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestRegressor', <type 'numpy.float64'>) ... 
[00:04:12] ok (0.1559s)
[00:04:12] sklearn.ensemble.tests.test_forest.test_memory_layout('RandomForestRegressor', <type 'numpy.float32'>) ... 
[00:04:12] ok (0.1471s)
[00:04:12] sklearn.ensemble.tests.test_forest.test_class_weights('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.1588s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_class_weights('RandomForestClassifier',) ... 
[00:04:13] ok (0.1966s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_class_weight_balanced_and_bootstrap_multi_output('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.0777s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_class_weight_balanced_and_bootstrap_multi_output('RandomForestClassifier',) ... 
[00:04:13] ok (0.0869s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_class_weight_errors('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.0228s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_class_weight_errors('RandomForestClassifier',) ... 
[00:04:13] ok (0.0238s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start('ExtraTreesRegressor',) ... 
[00:04:13] ok (0.0334s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start('RandomForestRegressor',) ... 
[00:04:13] ok (0.0359s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start('RandomTreesEmbedding',) ... 
[00:04:13] ok (0.0377s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.0391s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start('RandomForestClassifier',) ... 
[00:04:13] ok (0.0399s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_clear('ExtraTreesRegressor',) ... 
[00:04:13] ok (0.0254s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_clear('RandomForestRegressor',) ... 
[00:04:13] ok (0.0273s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_clear('RandomTreesEmbedding',) ... 
[00:04:13] ok (0.0279s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_clear('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.0288s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_clear('RandomForestClassifier',) ... 
[00:04:13] ok (0.0299s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('ExtraTreesRegressor',) ... 
[00:04:13] ok (0.0086s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('RandomForestRegressor',) ... 
[00:04:13] ok (0.0095s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('RandomTreesEmbedding',) ... 
[00:04:13] ok (0.0097s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.0099s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_smaller_n_estimators('RandomForestClassifier',) ... 
[00:04:13] ok (0.0104s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('ExtraTreesRegressor',) ... 
[00:04:13] ok (0.0194s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('RandomForestRegressor',) ... 
[00:04:13] ok (0.0202s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('RandomTreesEmbedding',) ... 
[00:04:13] ok (0.0226s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('ExtraTreesClassifier',) ... 
[00:04:13] ok (0.0216s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_equal_n_estimators('RandomForestClassifier',) ... 
[00:04:13] ok (0.0226s)
[00:04:13] sklearn.ensemble.tests.test_forest.test_warm_start_oob('ExtraTreesClassifier',) ... 
[00:04:14] ok (0.0873s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_warm_start_oob('RandomForestClassifier',) ... 
[00:04:14] ok (0.0939s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_warm_start_oob('ExtraTreesRegressor',) ... 
[00:04:14] ok (0.0785s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_warm_start_oob('RandomForestRegressor',) ... 
[00:04:14] ok (0.0824s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_dtype_convert ... 
[00:04:14] ok (0.0204s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_decision_path('ExtraTreesClassifier',) ... 
[00:04:14] ok (0.0144s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_decision_path('RandomForestClassifier',) ... 
[00:04:14] ok (0.0149s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_decision_path('ExtraTreesRegressor',) ... 
[00:04:14] ok (0.0135s)
[00:04:14] sklearn.ensemble.tests.test_forest.test_decision_path('RandomForestRegressor',) ... 
[00:04:14] ok (0.0137s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy('auto', 'deviance') ... 
[00:04:14] ok (0.0030s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy('auto', 'exponential') ... 
[00:04:14] ok (0.0029s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy(True, 'deviance') ... 
[00:04:14] ok (0.0026s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy(True, 'exponential') ... 
[00:04:14] ok (0.0028s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy(False, 'deviance') ... 
[00:04:14] ok (0.0027s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_toy(False, 'exponential') ... 
[00:04:14] ok (0.0028s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_parameter_checks ... 
[00:04:14] ok (0.0053s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_loss_function ... 
[00:04:14] ok (0.0011s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic('auto', 'deviance') ... 
[00:04:14] ok (0.4338s)
[00:04:14] sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic('auto', 'exponential') ... 
[00:04:15] ok (0.4183s)
[00:04:15] sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic(True, 'deviance') ... 
[00:04:15] ok (0.4386s)
[00:04:15] sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic(True, 'exponential') ... 
[00:04:16] ok (0.4963s)
[00:04:16] sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic(False, 'deviance') ... 
[00:04:16] ok (0.6450s)
[00:04:16] sklearn.ensemble.tests.test_gradient_boosting.test_classification_synthetic(False, 'exponential') ... 
[00:04:17] ok (0.6896s)
[00:04:17] sklearn.ensemble.tests.test_gradient_boosting.test_boston('auto', 'ls', 1.0) ... 
[00:04:17] ok (0.3543s)
[00:04:17] sklearn.ensemble.tests.test_gradient_boosting.test_boston('auto', 'ls', 0.5) ... 
[00:04:18] ok (0.3135s)
[00:04:18] sklearn.ensemble.tests.test_gradient_boosting.test_boston('auto', 'lad', 1.0) ... 
[00:04:18] ok (0.4459s)
[00:04:18] sklearn.ensemble.tests.test_gradient_boosting.test_boston('auto', 'lad', 0.5) ... 
[00:04:19] ok (0.4005s)
[00:04:19] sklearn.ensemble.tests.test_gradient_boosting.test_boston('auto', 'huber', 1.0) ... 
[00:04:19] ok (0.5887s)
[00:04:19] sklearn.ensemble.tests.test_gradient_boosting.test_boston('auto', 'huber', 0.5) ... 
[00:04:20] ok (0.5751s)
[00:04:20] sklearn.ensemble.tests.test_gradient_boosting.test_boston(True, 'ls', 1.0) ... 
[00:04:20] ok (0.3781s)
[00:04:20] sklearn.ensemble.tests.test_gradient_boosting.test_boston(True, 'ls', 0.5) ... 
[00:04:20] ok (0.3392s)
[00:04:20] sklearn.ensemble.tests.test_gradient_boosting.test_boston(True, 'lad', 1.0) ... 
[00:04:21] ok (0.3776s)
[00:04:21] sklearn.ensemble.tests.test_gradient_boosting.test_boston(True, 'lad', 0.5) ... 
[00:04:21] ok (0.3523s)
[00:04:21] sklearn.ensemble.tests.test_gradient_boosting.test_boston(True, 'huber', 1.0) ... 
[00:04:22] ok (0.5488s)
[00:04:22] sklearn.ensemble.tests.test_gradient_boosting.test_boston(True, 'huber', 0.5) ... 
[00:04:22] ok (0.5204s)
[00:04:22] sklearn.ensemble.tests.test_gradient_boosting.test_boston(False, 'ls', 1.0) ... 
[00:04:23] ok (0.6071s)
[00:04:23] sklearn.ensemble.tests.test_gradient_boosting.test_boston(False, 'ls', 0.5) ... 
[00:04:23] ok (0.3758s)
[00:04:23] sklearn.ensemble.tests.test_gradient_boosting.test_boston(False, 'lad', 1.0) ... 
[00:04:24] ok (0.6947s)
[00:04:24] sklearn.ensemble.tests.test_gradient_boosting.test_boston(False, 'lad', 0.5) ... 
[00:04:24] ok (0.4721s)
[00:04:24] sklearn.ensemble.tests.test_gradient_boosting.test_boston(False, 'huber', 1.0) ... 
[00:04:25] ok (0.8633s)
[00:04:25] sklearn.ensemble.tests.test_gradient_boosting.test_boston(False, 'huber', 0.5) ... 
[00:04:26] ok (0.5923s)
[00:04:26] sklearn.ensemble.tests.test_gradient_boosting.test_iris('auto', 1.0, None) ... 
[00:04:26] ok (0.1419s)
[00:04:26] sklearn.ensemble.tests.test_gradient_boosting.test_iris('auto', 1.0, array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:04:26] ok (0.1432s)
[00:04:26] sklearn.ensemble.tests.test_gradient_boosting.test_iris('auto', 0.5, None) ... 
[00:04:26] ok (0.1719s)
[00:04:26] sklearn.ensemble.tests.test_gradient_boosting.test_iris('auto', 0.5, array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:04:27] ok (0.1982s)
[00:04:27] sklearn.ensemble.tests.test_gradient_boosting.test_iris(True, 1.0, None) ... 
[00:04:27] ok (0.1670s)
[00:04:27] sklearn.ensemble.tests.test_gradient_boosting.test_iris(True, 1.0, array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:04:27] ok (0.1503s)
[00:04:27] sklearn.ensemble.tests.test_gradient_boosting.test_iris(True, 0.5, None) ... 
[00:04:27] ok (0.1629s)
[00:04:27] sklearn.ensemble.tests.test_gradient_boosting.test_iris(True, 0.5, array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:04:27] ok (0.1714s)
[00:04:27] sklearn.ensemble.tests.test_gradient_boosting.test_iris(False, 1.0, None) ... 
[00:04:27] ok (0.1892s)
[00:04:27] sklearn.ensemble.tests.test_gradient_boosting.test_iris(False, 1.0, array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:04:28] ok (0.2162s)
[00:04:28] sklearn.ensemble.tests.test_gradient_boosting.test_iris(False, 0.5, None) ... 
[00:04:28] ok (0.3007s)
[00:04:28] sklearn.ensemble.tests.test_gradient_boosting.test_iris(False, 0.5, array([ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:04:28] ok (0.2367s)
[00:04:28] sklearn.ensemble.tests.test_gradient_boosting.test_regression_synthetic ... 
[00:04:29] ok (0.4188s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_feature_importances ... 
[00:04:29] ok (0.4992s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_probability_log ... 
[00:04:29] ok (0.0265s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs ... 
[00:04:29] ok (0.0017s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_check_inputs_predict ... 
[00:04:29] ok (0.0391s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_check_max_features ... 
[00:04:29] ok (0.0012s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_regression ... 
[00:04:29] ok (0.1304s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_max_feature_auto ... 
[00:04:29] ok (0.0310s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict ... 
[00:04:29] ok (0.0517s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_staged_predict_proba ... 
[00:04:29] ok (0.0222s)
[00:04:29] sklearn.ensemble.tests.test_gradient_boosting.test_staged_functions_defensive ... 
[00:04:30] ok (0.1493s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_serialization ... 
[00:04:30] ok (0.0292s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_degenerate_targets ... 
[00:04:30] ok (0.0134s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_quantile_loss ... 
[00:04:30] ok (0.2929s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_symbol_labels ... 
[00:04:30] ok (0.0209s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_float_class_labels ... 
[00:04:30] ok (0.0221s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_shape_y ... 
[00:04:30] ok (0.0243s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_mem_layout ... 
[00:04:30] ok (0.1086s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement ... 
[00:04:30] ok (0.0293s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_oob_improvement_raise ... 
[00:04:30] ok (0.0200s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_oob_multilcass_iris ... 
[00:04:30] ok (0.1654s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_verbose_output ... 
[00:04:30] ok (0.0281s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_more_verbose_output ... 
[00:04:30] ok (0.0220s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_sparse_input ... 
[00:04:30] SKIP: Test skipped on 32bit platforms.
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start ... 
[00:04:30] ok (0.1884s)
[00:04:30] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_n_estimators ... 
[00:04:31] ok (0.3352s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_max_depth ... 
[00:04:31] ok (0.0684s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_clear ... 
[00:04:31] ok (0.1639s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_zero_n_estimators ... 
[00:04:31] ok (0.0534s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_smaller_n_estimators ... 
[00:04:31] ok (0.0529s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_equal_n_estimators ... 
[00:04:31] ok (0.1101s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob_switch ... 
[00:04:31] ok (0.0603s)
[00:04:31] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_oob ... 
[00:04:32] ok (0.3049s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_monitor_early_stopping ... 
[00:04:32] ok (0.0511s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_complete_classification ... 
[00:04:32] ok (0.0105s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_complete_regression ... 
[00:04:32] ok (0.0175s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_reg ... 
[00:04:32] ok (0.0139s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_zero_estimator_clf ... 
[00:04:32] ok (0.0500s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_max_leaf_nodes_max_depth ... 
[00:04:32] ok (0.1006s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_warm_start_wo_nestimators_change ... 
[00:04:32] ok (0.0031s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_probability_exponential ... 
[00:04:32] ok (0.0258s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_reg ... 
[00:04:32] ok (0.0036s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting.test_non_uniform_weights_toy_edge_case_clf ... 
[00:04:32] ok (0.0032s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_binomial_deviance ... 
[00:04:32] ok (0.0013s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_log_odds_estimator ... 
[00:04:32] ok (0.0003s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_smoke ... 
[00:04:32] ok (0.0003s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_init_estimators ... 
[00:04:32] ok (0.0029s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile ... 
[00:04:32] ok (0.0002s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_equal ... 
[00:04:32] ok (0.0002s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_weighted_percentile_zero_weight ... 
[00:04:32] ok (0.0001s)
[00:04:32] sklearn.ensemble.tests.test_gradient_boosting_loss_functions.test_sample_weight_deviance ... 
[00:04:32] ok (0.0005s)
[00:04:32] Check Isolation Forest for various parameter settings. ... 
[00:04:32] ok (0.0542s)
[00:04:32] Check IForest for various parameter settings on sparse input. ... 
[00:04:32] ok (0.4198s)
[00:04:32] Test that it gives proper exception on deficient input. ... 
[00:04:33] ok (0.5645s)
[00:04:33] Check max_depth recalculation when max_samples is reset to n_samples ... 
[00:04:33] ok (0.1897s)
[00:04:33] sklearn.ensemble.tests.test_iforest.test_max_samples_attribute ... 
[00:04:34] ok (0.5350s)
[00:04:34] Check parallel regression. ... 
[00:04:36] ok (1.9406s)
[00:04:36] Test Isolation Forest performs well ... 
[00:04:36] ok (0.2039s)
[00:04:36] sklearn.ensemble.tests.test_iforest.test_iforest_works ... 
[00:04:36] ok (0.2020s)
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_classifier ... 
[00:04:36] ok (0.0032s)
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_multiclass ... 
[00:04:36] ok (0.0160s)
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_partial_dependence_regressor ... 
[00:04:36] ok (0.0090s)
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_partial_dependecy_input ... 
[00:04:36] ok (0.0027s)
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence ... 
[00:04:36] SKIP: Matplotlib not available.
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_input ... 
[00:04:36] SKIP: Matplotlib not available.
[00:04:36] sklearn.ensemble.tests.test_partial_dependence.test_plot_partial_dependence_multiclass ... 
[00:04:36] SKIP: Matplotlib not available.
[00:04:36] sklearn.ensemble.tests.test_voting_classifier.test_estimator_init ... 
[00:04:36] ok (0.0002s)
[00:04:36] sklearn.ensemble.tests.test_voting_classifier.test_predictproba_hardvoting ... 
[00:04:36] ok (0.0001s)
[00:04:36] sklearn.ensemble.tests.test_voting_classifier.test_notfitted ... 
[00:04:36] ok (0.0001s)
[00:04:36] Check classification by majority label on dataset iris. ... 
[00:04:36] ok (0.1423s)
[00:04:36] Check voting classifier selects smaller class label in tie situation. ... 
[00:04:36] ok (0.0616s)
[00:04:36] Check classification by average probabilities on dataset iris. ... 
[00:04:36] ok (0.1546s)
[00:04:36] Manually check predicted class labels for toy dataset. ... 
[00:04:37] ok (0.0677s)
[00:04:37] Calculate predicted probabilities on toy dataset. ... 
[00:04:37] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:04:37]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:04:37] C:\Python27\lib\site-packages\sklearn\naive_bayes.py:103: RuntimeWarning: underflow encountered in exp
[00:04:37]   return np.exp(self.predict_log_proba(X))
[00:04:37] ok (0.0467s)
[00:04:37] Check if error is raised for multilabel classification. ... 
[00:04:37] ok (0.0070s)
[00:04:37] Check GridSearch support. ... 
[00:04:38] ok (1.2479s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_samme_proba ... 
[00:04:38] ok (0.0005s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_classification_toy ... 
[00:04:38] ok (0.0047s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_regression_toy ... 
[00:04:38] ok (0.0021s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_iris ... 
[00:04:38] ok (0.2845s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_boston ... 
[00:04:38] ok (0.1445s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_staged_predict ... 
[00:04:38] ok (0.0966s)
[00:04:38] sklearn.ensemble.tests.test_weight_boosting.test_gridsearch ... 
[00:04:39] ok (0.2456s)
[00:04:39] sklearn.ensemble.tests.test_weight_boosting.test_pickle ... 
[00:04:39] ok (0.5892s)
[00:04:39] sklearn.ensemble.tests.test_weight_boosting.test_importances ... 
[00:04:40] ok (0.7194s)
[00:04:40] sklearn.ensemble.tests.test_weight_boosting.test_error ... 
[00:04:40] ok (0.0023s)
[00:04:40] sklearn.ensemble.tests.test_weight_boosting.test_base_estimator ... 
[00:04:40] ok (0.1576s)
[00:04:40] sklearn.ensemble.tests.test_weight_boosting.test_sample_weight_missing ... 
[00:04:40] ok (0.0023s)
[00:04:40] sklearn.ensemble.tests.test_weight_boosting.test_sparse_classification ... 
[00:04:40] ok (0.1034s)
[00:04:40] sklearn.ensemble.tests.test_weight_boosting.test_sparse_regression ... 
[00:04:40] ok (0.0975s)
[00:04:40] AdaBoostRegressor should work without sample_weights in the base estimator ... 
[00:04:40] ok (0.0006s)
[00:04:40] sklearn.feature_extraction.tests.test_dict_vectorizer.test_dictvectorizer ... 
[00:04:40] ok (0.0291s)
[00:04:40] sklearn.feature_extraction.tests.test_dict_vectorizer.test_feature_selection ... 
[00:04:40] ok (0.0030s)
[00:04:40] sklearn.feature_extraction.tests.test_dict_vectorizer.test_one_of_k ... 
[00:04:40] ok (0.0016s)
[00:04:40] sklearn.feature_extraction.tests.test_dict_vectorizer.test_unseen_or_no_features ... 
[00:04:40] ok (0.0007s)
[00:04:40] sklearn.feature_extraction.tests.test_dict_vectorizer.test_deterministic_vocabulary ... 
[00:04:40] ok (0.0044s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_dicts ... 
[00:04:40] ok (0.0011s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_strings ... 
[00:04:40] ok (0.0035s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs ... 
[00:04:40] ok (0.0011s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_feature_hasher_pairs_with_string_values ... 
[00:04:40] ok (0.0011s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_hash_empty_input ... 
[00:04:40] ok (0.0004s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_invalid_input ... 
[00:04:40] ok (0.0003s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_set_params ... 
[00:04:40] ok (0.0004s)
[00:04:40] sklearn.feature_extraction.tests.test_feature_hasher.test_hasher_zeros ... 
[00:04:40] ok (0.0004s)
[00:04:40] sklearn.feature_extraction.tests.test_image.test_img_to_graph ... 
[00:04:40] ok (0.0008s)
[00:04:40] sklearn.feature_extraction.tests.test_image.test_grid_to_graph ... 
[00:04:40] ok (0.0035s)
[00:04:40] sklearn.feature_extraction.tests.test_image.test_connect_regions ... 
[00:04:43] ok (3.0712s)
[00:04:43] sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid ... 
[00:04:46] ok (2.3048s)
[00:04:46] sklearn.feature_extraction.tests.test_image.test_extract_patches_all ... 
[00:04:46] ok (0.0317s)
[00:04:46] sklearn.feature_extraction.tests.test_image.test_extract_patches_all_color ... 
[00:04:46] ok (0.1984s)
[00:04:46] sklearn.feature_extraction.tests.test_image.test_extract_patches_all_rect ... 
[00:04:46] ok (0.0076s)
[00:04:46] sklearn.feature_extraction.tests.test_image.test_extract_patches_max_patches ... 
[00:04:46] ok (0.0237s)
[00:04:46] sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect ... 
[00:04:46] ok (0.2859s)
[00:04:46] sklearn.feature_extraction.tests.test_image.test_reconstruct_patches_perfect_color ... 
[00:04:47] ok (0.5972s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_patch_extractor_fit ... 
[00:04:47] ok (0.0002s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches ... 
[00:04:47] ok (0.0705s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_patch_extractor_max_patches_default ... 
[00:04:47] ok (0.0027s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_patch_extractor_all_patches ... 
[00:04:47] ok (0.1032s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_patch_extractor_color ... 
[00:04:47] ok (0.2804s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_extract_patches_strided ... 
[00:04:47] ok (0.0011s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_extract_patches_square ... 
[00:04:47] ok (0.0001s)
[00:04:47] sklearn.feature_extraction.tests.test_image.test_width_patch ... 
[00:04:47] ok (0.0001s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_strip_accents ... 
[00:04:47] ok (0.0024s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_to_ascii ... 
[00:04:47] ok (0.0001s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams ... 
[00:04:47] ok (0.0006s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_word_analyzer_unigrams_and_bigrams ... 
[00:04:47] ok (0.0002s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_unicode_decode_error ... 
[00:04:47] ok (0.0002s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_char_ngram_analyzer ... 
[00:04:47] ok (0.0004s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_char_wb_ngram_analyzer ... 
[00:04:47] ok (0.0003s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary ... 
[00:04:47] ok (0.0017s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_pipeline ... 
[00:04:47] ok (0.0011s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_repeated_indeces ... 
[00:04:47] ok (0.0001s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_countvectorizer_custom_vocabulary_gap_index ... 
[00:04:47] ok (0.0001s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_countvectorizer_stop_words ... 
[00:04:47] ok (0.0024s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_countvectorizer_empty_vocabulary ... 
[00:04:47] ok (0.0002s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_fit_countvectorizer_twice ... 
[00:04:47] ok (0.0024s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_tf_idf_smoothing ... 
[00:04:47] ok (0.0025s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_tfidf_no_smoothing ... 
[00:04:47] ok (0.0058s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_sublinear_tf ... 
[00:04:47] ok (0.0007s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_vectorizer ... 
[00:04:47] ok (0.0084s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_setters ... 
[00:04:47] ok (0.0001s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_hashing_vectorizer ... 
[00:04:47] ok (0.0030s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_feature_names ... 
[00:04:47] ok (0.0014s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_vectorizer_max_features ... 
[00:04:47] ok (0.0026s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_count_vectorizer_max_features ... 
[00:04:47] ok (0.0039s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_vectorizer_max_df ... 
[00:04:47] ok (0.0032s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_vectorizer_min_df ... 
[00:04:47] ok (0.0032s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_count_binary_occurrences ... 
[00:04:47] ok (0.0038s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_hashed_binary_occurrences ... 
[00:04:47] ok (0.0007s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_vectorizer_inverse_transform ... 
[00:04:47] ok (0.0088s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_count_vectorizer_pipeline_grid_selection ... 
[00:04:47] ok (0.0884s)
[00:04:47] sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_grid_selection ... 
[00:04:48] ok (0.2174s)
[00:04:48] sklearn.feature_extraction.tests.test_text.test_vectorizer_pipeline_cross_validation ... 
[00:04:48] ok (0.0175s)
[00:04:48] sklearn.feature_extraction.tests.test_text.test_vectorizer_unicode ... 
[00:04:48] ok (0.0016s)
[00:04:48] sklearn.feature_extraction.tests.test_text.test_tfidf_vectorizer_with_fixed_vocabulary ... 
[00:04:48] ok (0.0020s)
[00:04:48] sklearn.feature_extraction.tests.test_text.test_pickling_vectorizer ... 
[00:04:49] ok (0.9391s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_sets_when_pickling ... 
[00:04:49] ok (0.1547s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_countvectorizer_vocab_dicts_when_pickling ... 
[00:04:49] ok (0.2567s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_stop_words_removal ... 
[00:04:49] ok (0.0083s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_pickling_transformer ... 
[00:04:49] ok (0.0048s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_non_unique_vocab ... 
[00:04:49] ok (0.0002s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_hashingvectorizer_nan_in_docs ... 
[00:04:49] ok (0.0002s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_binary ... 
[00:04:49] ok (0.0019s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_tfidfvectorizer_export_idf ... 
[00:04:49] ok (0.0019s)
[00:04:49] sklearn.feature_extraction.tests.test_text.test_vectorizer_vocab_clone ... 
[00:04:49] ok (0.0026s)
[00:04:49] sklearn.feature_selection.tests.test_base.test_transform_dense ... 
[00:04:49] ok (0.0008s)
[00:04:49] sklearn.feature_selection.tests.test_base.test_transform_sparse ... 
[00:04:49] ok (0.0041s)
[00:04:49] sklearn.feature_selection.tests.test_base.test_inverse_transform_dense ... 
[00:04:49] ok (0.0005s)
[00:04:49] sklearn.feature_selection.tests.test_base.test_inverse_transform_sparse ... 
[00:04:49] ok (0.0020s)
[00:04:49] sklearn.feature_selection.tests.test_base.test_get_support ... 
[00:04:49] ok (0.0004s)
[00:04:49] sklearn.feature_selection.tests.test_chi2.test_chi2 ... 
[00:04:49] ok (0.0070s)
[00:04:49] sklearn.feature_selection.tests.test_chi2.test_chi2_coo ... 
[00:04:49] ok (0.0020s)
[00:04:49] sklearn.feature_selection.tests.test_chi2.test_chi2_negative ... 
[00:04:49] ok (0.0007s)
[00:04:49] sklearn.feature_selection.tests.test_chi2.test_chisquare ... 
[00:04:49] ok (0.0012s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_oneway_vs_scipy_stats ... 
[00:04:49] ok (0.0014s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_oneway_ints ... 
[00:04:49] ok (0.0008s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_classif ... 
[00:04:49] ok (0.0094s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_regression ... 
[00:04:49] ok (0.0033s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_regression_input_dtype ... 
[00:04:49] ok (0.0013s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_regression_center ... 
[00:04:49] ok (0.0009s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_f_classif_multi_class ... 
[00:04:49] ok (0.0016s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif ... 
[00:04:49] ok (0.0041s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_percentile_classif_sparse ... 
[00:04:49] ok (0.0188s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_kbest_classif ... 
[00:04:49] ok (0.0054s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_kbest_all ... 
[00:04:49] ok (0.0012s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_kbest_zero ... 
[00:04:49] ok (0.0043s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_classif ... 
[00:04:49] ok (0.0087s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression ... 
[00:04:49] ok (0.0050s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_percentile_regression_full ... 
[00:04:49] ok (0.0028s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_invalid_percentile ... 
[00:04:49] ok (0.0015s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_kbest_regression ... 
[00:04:49] ok (0.0033s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_heuristics_regression ... 
[00:04:49] ok (0.0071s)
[00:04:49] sklearn.feature_selection.tests.test_feature_select.test_select_fdr_regression ... 
[00:04:50] ok (0.6512s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_select_fwe_regression ... 
[00:04:50] ok (0.0027s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_selectkbest_tiebreaking ... 
[00:04:50] ok (0.0155s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_selectpercentile_tiebreaking ... 
[00:04:50] ok (0.0212s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_tied_pvalues ... 
[00:04:50] ok (0.0126s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_tied_scores ... 
[00:04:50] ok (0.0039s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_nans ... 
[00:04:50] ok (0.0103s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_score_func_error ... 
[00:04:50] ok (0.0010s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_invalid_k ... 
[00:04:50] ok (0.0020s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_f_classif_constant_feature ... 
[00:04:50] ok (0.0054s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_no_feature_selected ... 
[00:04:50] ok (0.0183s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_mutual_info_classif ... 
[00:04:50] ok (0.1112s)
[00:04:50] sklearn.feature_selection.tests.test_feature_select.test_mutual_info_regression ... 
[00:04:50] ok (0.1639s)
[00:04:50] sklearn.feature_selection.tests.test_from_model.test_transform_linear_model ... 
[00:04:50] ok (0.1658s)
[00:04:50] sklearn.feature_selection.tests.test_from_model.test_invalid_input ... 
[00:04:50] ok (0.0066s)
[00:04:50] Test that SelectFromModel fits on a clone of the estimator. ... 
[00:04:50] ok (0.0302s)
[00:04:50] sklearn.feature_selection.tests.test_from_model.test_partial_fit ... 
[00:04:50] ok (0.0046s)
[00:04:50] sklearn.feature_selection.tests.test_from_model.test_warm_start ... 
[00:04:50] ok (0.0047s)
[00:04:50] Test all possible combinations of the prefit parameter. ... 
[00:04:50] ok (0.0076s)
[00:04:50] sklearn.feature_selection.tests.test_from_model.test_threshold_string ... 
[00:04:51] ok (0.2893s)
[00:04:51] Test that the threshold can be set without refitting the model. ... 
[00:04:51] ok (0.0035s)
[00:04:51] sklearn.feature_selection.tests.test_from_model.test_feature_importances ... 
[00:04:51] SKIP: Test skipped on 32bit platforms.
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_dd ... 
[00:04:51] ok (0.0005s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cc ... 
[00:04:51] ok (0.0686s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd ... 
[00:04:51] ok (0.1395s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_compute_mi_cd_unique_label ... 
[00:04:51] ok (0.0105s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_discrete ... 
[00:04:51] ok (0.0017s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_regression ... 
[00:04:51] ok (0.0854s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_classif_mixed ... 
[00:04:51] ok (0.0386s)
[00:04:51] sklearn.feature_selection.tests.test_mutual_info.test_mutual_info_options ... 
[00:04:51] ok (0.0390s)
[00:04:51] sklearn.feature_selection.tests.test_rfe.test_rfe_features_importance ... 
[00:04:52] ok (0.4254s)
[00:04:52] sklearn.feature_selection.tests.test_rfe.test_rfe ... 
[00:04:52] ok (0.0936s)
[00:04:52] sklearn.feature_selection.tests.test_rfe.test_rfe_mockclassifier ... 
[00:04:52] ok (0.0035s)
[00:04:52] sklearn.feature_selection.tests.test_rfe.test_rfecv ... 
[00:04:53] ok (1.7057s)
[00:04:53] sklearn.feature_selection.tests.test_rfe.test_rfecv_mockclassifier ... 
[00:04:53] ok (0.0074s)
[00:04:53] sklearn.feature_selection.tests.test_rfe.test_rfe_estimator_tags ... 
[00:04:53] ok (0.0235s)
[00:04:53] sklearn.feature_selection.tests.test_rfe.test_rfe_min_step ... 
[00:04:53] ok (0.0194s)
[00:04:53] sklearn.feature_selection.tests.test_rfe.test_number_of_subsets_of_features ... 
[00:04:54] ok (0.2344s)
[00:04:54] sklearn.feature_selection.tests.test_rfe.test_rfe_cv_n_jobs ... 
[00:04:55] ok (1.4847s)
[00:04:55] sklearn.feature_selection.tests.test_variance_threshold.test_zero_variance ... 
[00:04:55] ok (0.0029s)
[00:04:55] sklearn.feature_selection.tests.test_variance_threshold.test_variance_threshold ... ok (0.0014s)
[00:04:55] sklearn.gaussian_process.tests.test_gaussian_process.test_1d ... C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:52: DeprecationWarning: Class GaussianProcess is deprecated; GaussianProcess is deprecated and will be removed in 0.20. Use the GaussianProcessRegressor instead.
[00:04:55]   warnings.warn(msg, category=DeprecationWarning)
[00:04:55] C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:70: DeprecationWarning: Function l1_cross_distances is deprecated; l1_cross_distances is deprecated and will be removed in 0.20.
[00:04:55]   warnings.warn(msg, category=DeprecationWarning)
[00:04:55] ok (0.0488s)
[00:04:55] sklearn.gaussian_process.tests.test_gaussian_process.test_2d ... 
[00:04:55] ok (0.2698s)
[00:04:55] sklearn.gaussian_process.tests.test_gaussian_process.test_2d_2d ... 
[00:04:56] ok (0.2736s)
[00:04:56] sklearn.gaussian_process.tests.test_gaussian_process.test_wrong_number_of_outputs ... 
[00:04:56] ok (0.0006s)
[00:04:56] sklearn.gaussian_process.tests.test_gaussian_process.test_more_builtin_correlation_models ... 
[00:04:56] ok (0.2284s)
[00:04:56] sklearn.gaussian_process.tests.test_gaussian_process.test_ordinary_kriging ... 
[00:04:57] ok (1.4084s)
[00:04:57] sklearn.gaussian_process.tests.test_gaussian_process.test_no_normalize ... 
[00:04:57] ok (0.0012s)
[00:04:57] sklearn.gaussian_process.tests.test_gaussian_process.test_random_starts ... 
[00:04:58] C:\Python27\lib\site-packages\sklearn\gaussian_process\correlation_models.py:97: RuntimeWarning: underflow encountered in exp
[00:04:58]   return np.exp(-np.sum(theta.reshape(1, n_features) * d ** 2, axis=1))
[00:04:58] ok (0.4736s)
[00:04:58] sklearn.gaussian_process.tests.test_gaussian_process.test_mse_solving ... 
[00:04:58] C:\Python27\lib\site-packages\sklearn\datasets\samples_generator.py:1033: RuntimeWarning: underflow encountered in exp
[00:04:58]   np.exp(-1.0 * (singular_ind / effective_rank) ** 2))
[00:04:58] ok (0.0748s)
[00:04:58] Check binary predict decision has also predicted probability above 0.5. ... 
[00:04:58] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:1152: RuntimeWarning: underflow encountered in exp
[00:04:58]   K = np.exp(-.5 * dists)
[00:04:58] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:1170: RuntimeWarning: underflow encountered in multiply
[00:04:58]   (K * squareform(dists))[:, :, np.newaxis]
[00:04:58] C:\Python27\lib\site-packages\sklearn\gaussian_process\gpc.py:392: RuntimeWarning: underflow encountered in multiply
[00:04:58]   W_sr_K = W_sr[:, np.newaxis] * K
[00:04:58] C:\Python27\lib\site-packages\sklearn\gaussian_process\gpc.py:393: RuntimeWarning: underflow encountered in multiply
[00:04:58]   B = np.eye(W.shape[0]) + W_sr_K * W_sr
[00:04:58] C:\Python27\lib\site-packages\sklearn\gaussian_process\gpc.py:350: RuntimeWarning: underflow encountered in multiply
[00:04:58]   C = solve(L, W_sr[:, np.newaxis] * K)  # Line 8
[00:04:58] ok (0.0834s)
[00:04:58] Test that hyperparameter-tuning improves log-marginal likelihood. ... 
[00:04:58] ok (0.0910s)
[00:04:58] Test that lml of optimized kernel is stored correctly. ... 
[00:04:58] ok (0.0903s)
[00:04:58] Test that we are in local maximum after hyperparameter-optimization. ... 
[00:04:58] ok (0.0870s)
[00:04:58] Compare analytic and numeric gradient of log marginal likelihood. ... 
[00:04:58] ok (0.1079s)
[00:04:58] Test that an increasing number of random-starts of GP fitting only ... 
[00:04:59] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:1176: RuntimeWarning: underflow encountered in multiply
[00:04:59]   K_gradient *= K[..., np.newaxis]
[00:04:59] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:709: RuntimeWarning: underflow encountered in multiply
[00:04:59]   K2_gradient * K1[:, :, np.newaxis]))
[00:04:59] C:\Python27\lib\site-packages\sklearn\gaussian_process\gpc.py:349: RuntimeWarning: underflow encountered in multiply
[00:04:59]   R = W_sr[:, np.newaxis] * cho_solve((L, True), np.diag(W_sr))  # Line 7
[00:04:59] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:708: RuntimeWarning: underflow encountered in multiply
[00:04:59]   return K1 * K2, np.dstack((K1_gradient * K2[:, :, np.newaxis],
[00:04:59] ok (0.6434s)
[00:04:59] Test that GPC can use externally defined optimizers. ... 
[00:05:00] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:711: RuntimeWarning: underflow encountered in multiply
[00:05:00]   return self.k1(X, Y) * self.k2(X, Y)
[00:05:00] ok (0.9995s)
[00:05:00] Test GPC for multi-class classification problems. ... 
[00:05:00] ok (0.2772s)
[00:05:00] Test that multi-class GPC produces identical results with n_jobs>1. ... 
[00:05:05] ok (4.9494s)
[00:05:05] Test the interpolating property for different kernels. ... 
[00:05:05] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:1162: RuntimeWarning: underflow encountered in exp
[00:05:05]   K = np.exp(-.5 * dists)
[00:05:05] ok (0.2558s)
[00:05:05] Test that hyperparameter-tuning improves log-marginal likelihood. ... 
[00:05:06] ok (0.2618s)
[00:05:06] Test that lml of optimized kernel is stored correctly. ... 
[00:05:06] ok (0.2426s)
[00:05:06] Test that we are in local maximum after hyperparameter-optimization. ... 
[00:05:06] ok (0.2736s)
[00:05:06] Test that hyperparameter-optimization remains in bounds ... 
[00:05:06] ok (0.2530s)
[00:05:06] Compare analytic and numeric gradient of log marginal likelihood. ... 
[00:05:07] ok (0.2862s)
[00:05:07] Test that GP prior has mean 0 and identical variances. ... 
[00:05:07] ok (0.0030s)
[00:05:07] Test that statistics of samples drawn from GP are correct. ... 
[00:05:08] ok (1.0600s)
[00:05:08] Test that kernel parameters are unmodified when optimizer is None. ... 
[00:05:08] ok (0.0018s)
[00:05:08] Test that predicted std.-dev. is consistent with cov's diagonal. ... 
[00:05:08] ok (0.2180s)
[00:05:08] Test that GPR can identify meaningful anisotropic length-scales. ... 
[00:05:08] ok (0.0875s)
[00:05:08] Test that an increasing number of random-starts of GP fitting only ... 
[00:05:09] ok (1.2662s)
[00:05:09] Test normalization of the target values in GP ... 
[00:05:10] ok (0.3115s)
[00:05:10] Test that GPR can deal with multi-dimensional target values ... 
[00:05:10] ok (0.4113s)
[00:05:10] Test that GPR can use externally defined optimizers. ... 
[00:05:11] ok (0.5145s)
[00:05:11] Test GPR can handle two different output-values for the same input. ... 
[00:05:11] ok (0.4247s)
[00:05:11] Compare analytic and numeric gradient of kernels. ... 
[00:05:11] C:\Python27\lib\site-packages\sklearn\gaussian_process\kernels.py:1312: RuntimeWarning: invalid value encountered in divide
[00:05:11]   / np.sqrt(D.sum(2))[:, :, np.newaxis]
[00:05:11] ok (0.0843s)
[00:05:11] Check that parameter vector theta of kernel is set correctly. ... 
[00:05:11] ok (0.0142s)
[00:05:11] Auto-correlation and cross-correlation should be consistent. ... 
[00:05:11] ok (0.0084s)
[00:05:11] Test that diag method of kernel returns consistent results. ... 
[00:05:11] ok (0.0091s)
[00:05:11] Adding kernels and multiplying kernels should be commutative. ... 
[00:05:11] ok (0.0008s)
[00:05:11] Anisotropic kernel should be consistent with isotropic kernels. ... 
[00:05:11] ok (0.0009s)
[00:05:11] Test stationarity of kernels. ... 
[00:05:11] C:\Python27\lib\site-packages\sklearn\metrics\pairwise.py:818: RuntimeWarning: underflow encountered in exp
[00:05:11]   np.exp(K, K)    # exponentiate K in-place
[00:05:11] ok (0.0041s)
[00:05:11] Test that sklearn's clone works correctly on kernels. ... 
[00:05:11] ok (0.0442s)
[00:05:11] Test consistency of Matern kernel for special values of nu. ... 
[00:05:11] ok (0.0034s)
[00:05:11] Check that GP kernels can also be used as pairwise kernels. ... 
[00:05:11] ok (0.0145s)
[00:05:11] Check that set_params()/get_params() is consistent with kernel.theta. ... 
[00:05:11] ok (0.0281s)
[00:05:11] sklearn.linear_model.tests.test_base.test_linear_regression ... 
[00:05:11] ok (0.0016s)
[00:05:11] sklearn.linear_model.tests.test_base.test_linear_regression_sample_weights ... 
[00:05:11] ok (0.0025s)
[00:05:11] sklearn.linear_model.tests.test_base.test_raises_value_error_if_sample_weights_greater_than_1d ... 
[00:05:11] ok (0.0039s)
[00:05:11] sklearn.linear_model.tests.test_base.test_fit_intercept ... 
[00:05:11] ok (0.0011s)
[00:05:11] sklearn.linear_model.tests.test_base.test_linear_regression_sparse ... 
[00:05:11] ok (0.0175s)
[00:05:11] sklearn.linear_model.tests.test_base.test_linear_regression_multiple_outcome ... 
[00:05:11] ok (0.0105s)
[00:05:11] sklearn.linear_model.tests.test_base.test_linear_regression_sparse_multiple_outcome ... 
[00:05:11] ok (0.0064s)
[00:05:11] sklearn.linear_model.tests.test_base.test_preprocess_data ... 
[00:05:11] ok (0.0026s)
[00:05:11] sklearn.linear_model.tests.test_base.test_preprocess_data_multioutput ... 
[00:05:11] ok (0.0034s)
[00:05:11] sklearn.linear_model.tests.test_base.test_preprocess_data_weighted ... 
[00:05:11] ok (0.0024s)
[00:05:11] sklearn.linear_model.tests.test_base.test_sparse_preprocess_data_with_return_mean ... 
[00:05:11] ok (0.0051s)
[00:05:11] sklearn.linear_model.tests.test_base.test_csr_preprocess_data ... 
[00:05:11] ok (0.0014s)
[00:05:11] sklearn.linear_model.tests.test_base.test_rescale_data ... 
[00:05:11] ok (0.0008s)
[00:05:11] sklearn.linear_model.tests.test_base.test_deprecation_center_data ... 
[00:05:11] ok (0.0185s)
[00:05:11] sklearn.linear_model.tests.test_bayes.test_bayesian_on_diabetes ... 
[00:05:11] SKIP: XFailed Test
[00:05:11] sklearn.linear_model.tests.test_bayes.test_toy_bayesian_ridge_object ... 
[00:05:11] ok (0.0009s)
[00:05:11] sklearn.linear_model.tests.test_bayes.test_toy_ard_object ... 
[00:05:11] ok (0.0021s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_zero ... 
[00:05:11] ok (0.0010s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_toy ... 
[00:05:11] ok (0.0032s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_enet_toy ... 
[00:05:11] ok (0.0048s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv ... 
[00:05:11] ok (0.0818s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_cv_positive_constraint ... 
[00:05:11] ok (0.0256s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_path_return_models_vs_new_return_gives_same_coefficients ... 
[00:05:11] ok (0.0015s)
[00:05:11] sklearn.linear_model.tests.test_coordinate_descent.test_enet_path ... 
[00:05:12] ok (0.1169s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_path_parameters ... 
[00:05:12] ok (0.0496s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_warm_start ... 
[00:05:12] ok (0.0118s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_alpha_warning ... 
[00:05:12] ok (0.0027s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_positive_constraint ... 
[00:05:12] ok (0.0017s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_enet_positive_constraint ... 
[00:05:12] ok (0.0007s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_enet_cv_positive_constraint ... 
[00:05:12] ok (0.0384s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_uniform_targets ... 
[00:05:12] ok (0.2240s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_and_enet ... 
[00:05:12] ok (0.0077s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_readonly_data ... 
[00:05:12] ok (0.0063s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_multi_task_lasso_readonly_data ... 
[00:05:12] ok (0.0090s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_enet_multitarget ... 
[00:05:12] ok (0.0031s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_multioutput_enetcv_error ... 
[00:05:12] ok (0.0002s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_multitask_enet_and_lasso_cv ... 
[00:05:12] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:05:12]   warnings.warn('Objective did not converge, you might want'
[00:05:12] ok (0.4969s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_enet_and_multitask_enet_cv ... 
[00:05:12] ok (0.0465s)
[00:05:12] sklearn.linear_model.tests.test_coordinate_descent.test_1d_multioutput_lasso_and_multitask_lasso_cv ... 
[00:05:13] ok (0.0291s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_sparse_input_dtype_enet_and_lassocv ... 
[00:05:13] ok (0.0977s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_precompute_invalid_argument ... 
[00:05:13] ok (0.0076s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence ... 
[00:05:13] ok (0.0043s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_warm_start_convergence_with_regularizer_decrement ... 
[00:05:13] ok (0.0202s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_random_descent ... 
[00:05:13] ok (0.0086s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_enet_path_positive ... 
[00:05:13] ok (0.0203s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_sparse_dense_descent_paths ... 
[00:05:13] ok (0.0634s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_check_input_false ... 
[00:05:13] ok (0.0029s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_overrided_gram_matrix ... 
[00:05:13] ok (0.0029s)
[00:05:13] sklearn.linear_model.tests.test_coordinate_descent.test_lasso_non_float_y ... 
[00:05:13] ok (0.0017s)
[00:05:13] sklearn.linear_model.tests.test_huber.test_huber_equals_lr_for_high_epsilon ... 
[00:05:13] ok (0.0131s)
[00:05:13] sklearn.linear_model.tests.test_huber.test_huber_gradient ... 
[00:05:13] ok (0.0403s)
[00:05:13] sklearn.linear_model.tests.test_huber.test_huber_sample_weights ... 
[00:05:13] ok (0.2093s)
[00:05:13] sklearn.linear_model.tests.test_huber.test_huber_sparse ... 
[00:05:13] ok (0.1391s)
[00:05:13] Test that outliers filtering is scaling independent. ... 
[00:05:13] ok (0.0577s)
[00:05:13] Test they should converge to same coefficients for same parameters ... 
[00:05:14] ok (0.7717s)
[00:05:14] sklearn.linear_model.tests.test_huber.test_huber_warm_start ... 
[00:05:14] ok (0.0088s)
[00:05:14] sklearn.linear_model.tests.test_huber.test_huber_better_r2_score ... 
[00:05:14] ok (0.0233s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_simple ... 
[00:05:14] ok (0.0046s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_simple_precomputed ... 
[00:05:14] ok (0.0036s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_all_precomputed ... 
[00:05:14] ok (0.0127s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lars_lstsq ... 
[00:05:14] ok (0.0051s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_gives_lstsq_solution ... 
[00:05:14] ok (0.0041s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_collinearity ... 
[00:05:14] ok (0.0041s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_no_path ... 
[00:05:14] ok (0.0055s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_no_path_precomputed ... 
[00:05:14] ok (0.0048s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_no_path_all_precomputed ... 
[00:05:14] ok (0.0024s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_singular_matrix ... 
[00:05:14] ok (0.0006s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_rank_deficient_design ... 
[00:05:14] ok (0.0029s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd ... 
[00:05:14] ok (0.1374s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_early_stopping ... 
[00:05:14] ok (0.0092s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_path_length ... 
[00:05:14] ok (0.0022s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned ... 
[00:05:14] ok (0.1804s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_ill_conditioned2 ... 
[00:05:14] ok (0.0046s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_multitarget ... 
[00:05:14] ok (0.0317s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lars_add_features ... 
[00:05:14] ok (0.0027s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lars_n_nonzero_coefs ... 
[00:05:14] ok (0.0025s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lars_cv ... 
[00:05:14] ok (0.0330s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_ic ... 
[00:05:14] ok (0.0120s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_no_warning_for_zero_mse ... 
[00:05:14] ok (0.0029s)
[00:05:14] sklearn.linear_model.tests.test_least_angle.test_lars_path_readonly_data ... 
[00:05:15] ok (0.0142s)
[00:05:15] sklearn.linear_model.tests.test_least_angle.test_lars_path_positive_constraint ... 
[00:05:15] ok (0.0078s)
[00:05:15] sklearn.linear_model.tests.test_least_angle.test_estimatorclasses_positive_constraint ... 
[00:05:15] ok (0.0452s)
[00:05:15] sklearn.linear_model.tests.test_least_angle.test_lasso_lars_vs_lasso_cd_positive ... 
[00:05:15] ok (0.0380s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_predict_2_classes ... 
[00:05:15] ok (0.0060s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_error ... 
[00:05:15] ok (0.0003s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_predict_3_classes ... 
[00:05:15] ok (0.0025s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_predict_iris ... 
[00:05:15] ok (0.0706s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_multinomial_validation ... 
[00:05:15] ok (0.0003s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_check_solver_option ... 
[00:05:15] ok (0.0015s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_multinomial_binary ... 
[00:05:15] ok (0.1314s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_sparsify ... 
[00:05:15] ok (0.0032s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_inconsistent_input ... 
[00:05:15] ok (0.0010s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_write_parameters ... 
[00:05:15] ok (0.0007s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_nan ... 
[00:05:15] ok (0.0002s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_consistency_path ... 
[00:05:15] ok (0.0882s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_liblinear_dual_random_state ... 
[00:05:15] ok (0.0031s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_logistic_loss_and_grad ... 
[00:05:15] ok (0.0145s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_logistic_grad_hess ... 
[00:05:15] ok (0.0130s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_max_iter ... 
[00:05:15] ok (0.0428s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_logistic_cv ... 
[00:05:15] ok (0.0048s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_logistic_cv_sparse ... 
[00:05:15] ok (0.1982s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_intercept_logistic_helper ... 
[00:05:15] ok (0.0015s)
[00:05:15] sklearn.linear_model.tests.test_logistic.test_ovr_multinomial_iris ... 
[00:05:16] ok (0.6376s)
[00:05:16] sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers ... 
[00:05:16] ok (0.0138s)
[00:05:16] sklearn.linear_model.tests.test_logistic.test_logistic_regression_solvers_multiclass ... 
[00:05:16] ok (0.0603s)
[00:05:16] sklearn.linear_model.tests.test_logistic.test_logistic_regressioncv_class_weights ... 
[00:05:16] ok (0.1455s)
[00:05:16] sklearn.linear_model.tests.test_logistic.test_logistic_regression_sample_weights ... 
[00:05:16] ok (0.3907s)
[00:05:16] sklearn.linear_model.tests.test_logistic.test_logistic_regression_class_weights ... 
[00:05:17] ok (0.1220s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_multinomial_logistic_regression_with_classweight_auto ... 
[00:05:17] ok (0.0287s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_logistic_regression_convergence_warnings ... 
[00:05:17] I: Seeding RNGs with 1690158338
[00:05:17] Converged after 58 iterations.
[00:05:17] ---
[00:05:17] [LibLinear]iter  1 act 8.384e+000 pre 7.564e+000 delta 1.496e+000 f 1.386e+001 |g| 1.326e+001 CG   3
[00:05:17] iter  2 act 7.603e-001 pre 6.769e-001 delta 1.496e+000 f 5.479e+000 |g| 2.906e+000 CG   3
[00:05:17] ok (0.0032s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_logistic_regression_multinomial ... 
[00:05:17] ok (0.3710s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_multinomial_grad_hess ... 
[00:05:17] ok (0.0043s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_liblinear_decision_function_zero ... 
[00:05:17] ok (0.0008s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_liblinear_logregcv_sparse ... 
[00:05:17] ok (0.0149s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling ... 
[00:05:17] ok (0.0005s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_logreg_intercept_scaling_zero ... 
[00:05:17] ok (0.0004s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_logreg_cv_penalty ... 
[00:05:17] ok (0.0040s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_logreg_predict_proba_multinomial ... 
[00:05:17] ok (0.0153s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_n_iter ... 
[00:05:17] ok (0.3721s)
[00:05:17] sklearn.linear_model.tests.test_logistic.test_warm_start ... 
[00:05:18] ok (0.4551s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_correct_shapes ... 
[00:05:18] ok (0.0019s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_correct_shapes_gram ... 
[00:05:18] ok (0.0016s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_n_nonzero_coefs ... 
[00:05:18] ok (0.0012s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_tol ... 
[00:05:18] ok (0.0009s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_with_without_gram ... 
[00:05:18] ok (0.0027s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_with_without_gram_tol ... 
[00:05:18] ok (0.0017s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_unreachable_accuracy ... 
[00:05:18] C:\Python27\lib\site-packages\sklearn\linear_model\omp.py:391: RuntimeWarning:  Orthogonal matching pursuit ended prematurely due to linear
[00:05:18] dependence in the dictionary. The requested precision might not have been met.
[00:05:18] 
[00:05:18]   copy_X=copy_X, return_path=return_path)
[00:05:18] C:\Python27\lib\site-packages\sklearn\linear_model\omp.py:380: RuntimeWarning:  Orthogonal matching pursuit ended prematurely due to linear
[00:05:18] dependence in the dictionary. The requested precision might not have been met.
[00:05:18] 
[00:05:18]   return_path=return_path)
[00:05:18] ok (0.0080s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_bad_input ... 
[00:05:18] ok (0.0005s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_perfect_signal_recovery ... 
[00:05:18] ok (0.0016s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_estimator ... 
[00:05:18] ok (0.0046s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_identical_regressors ... 
[00:05:18] ok (0.0019s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_swapped_regressors ... 
[00:05:18] ok (0.0008s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_no_atoms ... 
[00:05:18] ok (0.0042s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_omp_path ... 
[00:05:18] ok (0.0053s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_omp_return_path_prop_with_gram ... 
[00:05:18] ok (0.0030s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_omp_cv ... 
[00:05:18] ok (0.0059s)
[00:05:18] sklearn.linear_model.tests.test_omp.test_omp_reaches_least_squares ... 
[00:05:18] ok (0.0031s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_classifier_accuracy ... 
[00:05:18] ok (0.0073s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_classifier_partial_fit ... 
[00:05:18] ok (0.0515s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_classifier_refit ... 
[00:05:18] ok (0.0031s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_classifier_correctness ... 
[00:05:18] ok (0.0089s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_classifier_undefined_methods ... 
[00:05:18] ok (0.0002s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_class_weights ... 
[00:05:18] ok (0.0013s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_partial_fit_weight_class_balanced ... 
[00:05:18] ok (0.0002s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_equal_class_weight ... 
[00:05:18] ok (0.0023s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_label ... 
[00:05:18] ok (0.0004s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_wrong_class_weight_format ... 
[00:05:18] ok (0.0006s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_regressor_mse ... 
[00:05:18] ok (0.0039s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_regressor_partial_fit ... 
[00:05:18] ok (0.0160s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_regressor_correctness ... 
[00:05:18] ok (0.0094s)
[00:05:18] sklearn.linear_model.tests.test_passive_aggressive.test_regressor_undefined_methods ... 
[00:05:18] ok (0.0001s)
[00:05:18] sklearn.linear_model.tests.test_perceptron.test_perceptron_accuracy ... 
[00:05:18] ok (0.0036s)
[00:05:18] sklearn.linear_model.tests.test_perceptron.test_perceptron_correctness ... 
[00:05:18] ok (0.0036s)
[00:05:18] sklearn.linear_model.tests.test_perceptron.test_undefined_methods ... 
[00:05:18] ok (0.0002s)
[00:05:18] sklearn.linear_model.tests.test_randomized_l1.test_lasso_stability_path ... 
[00:05:18] ok (0.0384s)
[00:05:18] sklearn.linear_model.tests.test_randomized_l1.test_randomized_lasso ... 
[00:05:19] ok (0.6018s)
[00:05:19] sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic ... 
[00:05:19] ok (0.0653s)
[00:05:19] sklearn.linear_model.tests.test_randomized_l1.test_randomized_logistic_sparse ... 
[00:05:19] ok (0.0853s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_inliers_outliers ... 
[00:05:19] ok (0.0030s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_is_data_valid ... 
[00:05:19] ok (0.0110s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_is_model_valid ... 
[00:05:19] ok (0.0434s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_max_trials ... 
[00:05:19] ok (0.0041s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_stop_n_inliers ... 
[00:05:19] ok (0.0025s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_stop_score ... 
[00:05:19] ok (0.0023s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_score ... 
[00:05:19] ok (0.0031s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_predict ... 
[00:05:19] ok (0.0030s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_resid_thresh_no_inliers ... 
[00:05:19] ok (0.0019s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_sparse_coo ... 
[00:05:19] ok (0.0129s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csr ... 
[00:05:19] ok (0.0122s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_sparse_csc ... 
[00:05:19] ok (0.0126s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_none_estimator ... 
[00:05:19] ok (0.0051s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_min_n_samples ... 
[00:05:19] ok (0.0134s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_multi_dimensional_targets ... 
[00:05:19] ok (0.0034s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_residual_metric ... 
[00:05:19] ok (0.0210s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_residual_loss ... 
[00:05:19] ok (0.0188s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_default_residual_threshold ... 
[00:05:19] ok (0.0029s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_dynamic_max_trials ... 
[00:05:19] ok (0.0022s)
[00:05:19] sklearn.linear_model.tests.test_ransac.test_ransac_fit_sample_weight ... 
[00:05:19] ok (0.0110s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge ... 
[00:05:19] ok (0.0168s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_primal_dual_relationship ... 
[00:05:19] ok (0.0016s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_singular ... 
[00:05:19] ok (0.0010s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_regression_sample_weights ... 
[00:05:19] ok (0.0041s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_sample_weights ... 
[00:05:19] ok (0.0211s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_shapes ... 
[00:05:19] ok (0.0025s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_intercept ... 
[00:05:19] ok (0.0018s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_toy_ridge_object ... 
[00:05:19] ok (0.0024s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_vs_lstsq ... 
[00:05:19] ok (0.0029s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_ridge_individual_penalties ... 
[00:05:19] ok (0.0258s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_n_iter ... 
[00:05:19] ok (0.0105s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_dense_sparse(<function _test_ridge_loo at 0x0E2C6AF0>,) ... 
[00:05:19] ok (0.2539s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_dense_sparse(<function _test_ridge_cv at 0x0E2C6B30>,) ... 
[00:05:19] ok (0.0937s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_dense_sparse(<function _test_ridge_diabetes at 0x0E2C6B70>,) ... 
[00:05:19] ok (0.0031s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_dense_sparse(<function _test_multi_ridge_diabetes at 0x0E2C6BB0>,) ... 
[00:05:19] ok (0.0059s)
[00:05:19] sklearn.linear_model.tests.test_ridge.test_dense_sparse(<function _test_ridge_classifiers at 0x0E2C6BF0>,) ... 
[00:05:20] ok (0.2377s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_dense_sparse(<function _test_tolerance at 0x0E2C6C30>,) ... 
[00:05:20] ok (0.0055s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_ridge_cv_sparse_svd ... 
[00:05:20] ok (0.0005s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_ridge_sparse_svd ... 
[00:05:20] ok (0.0008s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_class_weights ... 
[00:05:20] ok (0.0061s)
[00:05:20] Check class_weights resemble sample_weights behavior. ... 
[00:05:20] ok (0.0285s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_class_weights_cv ... 
[00:05:20] ok (0.0027s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_ridgecv_store_cv_values ... 
[00:05:20] ok (0.0011s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_ridgecv_sample_weight ... 
[00:05:20] ok (0.1536s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_sample_weights_greater_than_1d ... 
[00:05:20] ok (0.0048s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_sparse_design_with_sample_weights ... 
[00:05:20] ok (0.0231s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_raises_value_error_if_solver_not_supported ... 
[00:05:20] ok (0.0003s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_sparse_cg_max_iter ... 
[00:05:20] ok (0.0009s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_ridge_fit_intercept_sparse ... 
[00:05:20] ok (0.0300s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_errors_and_values_helper ... 
[00:05:20] ok (0.0005s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_errors_and_values_svd_helper ... 
[00:05:20] ok (0.0007s)
[00:05:20] sklearn.linear_model.tests.test_ridge.test_ridge_classifier_no_support_multilabel ... 
[00:05:20] ok (0.0020s)
[00:05:20] tests binary classifier with classweights for each class ... 
[00:05:20] ok (0.0471s)
[00:05:20] sklearn.linear_model.tests.test_sag.test_classifier_matching ... 
[00:05:20] ok (0.0789s)
[00:05:20] tests if classifier results match target ... 
[00:05:20] ok (0.0051s)
[00:05:20] sklearn.linear_model.tests.test_sag.test_get_auto_step_size ... 
[00:05:20] ok (0.0022s)
[00:05:20] tests multiclass with classweights for each class ... 
[00:05:20] ok (0.1306s)
[00:05:20] sklearn.linear_model.tests.test_sag.test_regressor_matching ... 
[00:05:20] ok (0.0468s)
[00:05:20] tests if the binary classifier is computed correctly ... 
[00:05:20] ok (0.1092s)
[00:05:20] tests if the multiclass classifier is computed correctly ... 
[00:05:20] ok (0.1040s)
[00:05:20] tests if the sag pobj matches log reg ... 
[00:05:20] ok (0.0059s)
[00:05:20] tests if the sag pobj matches ridge reg ... 
[00:05:20] ok (0.0091s)
[00:05:20] tests if the sag regressor performs well ... 
[00:05:20] ok (0.0074s)
[00:05:20] tests if the sag regressor is computed correctly ... 
[00:05:21] ok (0.1342s)
[00:05:21] tests if ValueError is thrown with only one class ... 
[00:05:21] ok (0.0004s)
[00:05:21] sklearn.linear_model.tests.test_sag.test_step_size_alpha_error ... 
[00:05:21] ok (0.0008s)
[00:05:21] sklearn.linear_model.tests.test_sag.test_multinomial_loss ... 
[00:05:21] ok (0.0013s)
[00:05:21] sklearn.linear_model.tests.test_sag.test_multinomial_loss_ground_truth ... 
[00:05:21] ok (0.0011s)
[00:05:21] test_argument_coef (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_average_binary_computed_correctly (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0011s)
[00:05:21] test_balanced_weight (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.3624s)
[00:05:21] test_class_weights (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0019s)
[00:05:21] test_clone (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0026s)
[00:05:21] test_equal_class_weight (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0015s)
[00:05:21] test_fit_then_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0014s)
[00:05:21] test_input_format (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0006s)
[00:05:21] test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0642s)
[00:05:21] test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0015s)
[00:05:21] test_multiple_fit (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0009s)
[00:05:21] test_partial_fit_binary (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0010s)
[00:05:21] test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0035s)
[00:05:21] test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0034s)
[00:05:21] test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0041s)
[00:05:21] test_partial_fit_exception (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0002s)
[00:05:21] test_partial_fit_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0014s)
[00:05:21] test_partial_fit_multiclass_average (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0014s)
[00:05:21] test_partial_fit_weight_class_balanced (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0010s)
[00:05:21] test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0008s)
[00:05:21] test_provide_coef (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0004s)
[00:05:21] test_regression_losses (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0019s)
[00:05:21] test_sample_weights (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0019s)
[00:05:21] test_set_coef_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0020s)
[00:05:21] test_set_intercept (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0004s)
[00:05:21] test_set_intercept_binary (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0005s)
[00:05:21] test_set_intercept_to_intercept (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0016s)
[00:05:21] test_sgd (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0019s)
[00:05:21] test_sgd_at_least_two_labels (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0004s)
[00:05:21] test_sgd_bad_alpha (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_alpha_for_optimal_learning_rate (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_eta0 (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_l1_ratio (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_learning_rate_schedule (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_l1 (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0044s)
[00:05:21] test_sgd_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0011s)
[00:05:21] test_sgd_multiclass_average (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0019s)
[00:05:21] test_sgd_multiclass_njobs (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.1427s)
[00:05:21] test_sgd_multiclass_with_init_coef (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0012s)
[00:05:21] test_sgd_n_iter_param (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_proba (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] C:\Python27\lib\site-packages\sklearn\linear_model\stochastic_gradient.py:826: RuntimeWarning: divide by zero encountered in log
[00:05:21]   return np.log(self.predict_proba(X))
[00:05:21] ok (0.0068s)
[00:05:21] test_sgd_shuffle_param (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_warm_start_constant (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0025s)
[00:05:21] test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0023s)
[00:05:21] test_warm_start_multiclass (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0038s)
[00:05:21] test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0026s)
[00:05:21] test_weights_multiplied (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0010s)
[00:05:21] test_wrong_class_weight_format (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0004s)
[00:05:21] test_wrong_class_weight_label (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0003s)
[00:05:21] test_wrong_sample_weights (sklearn.linear_model.tests.test_sgd.DenseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0003s)
[00:05:21] test_average_sparse (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0009s)
[00:05:21] test_clone (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0022s)
[00:05:21] test_elasticnet_convergence (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0556s)
[00:05:21] test_input_format (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0010s)
[00:05:21] test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0330s)
[00:05:21] test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0010s)
[00:05:21] test_loss_function_epsilon (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0007s)
[00:05:21] test_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0027s)
[00:05:21] test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0008s)
[00:05:21] test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0009s)
[00:05:21] test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0009s)
[00:05:21] test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0005s)
[00:05:21] test_sgd (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0003s)
[00:05:21] test_sgd_averaged_computed_correctly (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0009s)
[00:05:21] test_sgd_averaged_partial_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0010s)
[00:05:21] test_sgd_bad_alpha_for_optimal_learning_rate (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_sgd_epsilon_insensitive (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0016s)
[00:05:21] test_sgd_huber_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0015s)
[00:05:21] test_sgd_least_squares_fit (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0015s)
[00:05:21] test_warm_start_constant (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0019s)
[00:05:21] test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0017s)
[00:05:21] test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.DenseSGDRegressorTestCase) ... 
[00:05:21] ok (0.0016s)
[00:05:21] test_argument_coef (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0001s)
[00:05:21] test_average_binary_computed_correctly (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:21] ok (0.0017s)
[00:05:21] test_balanced_weight (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.3640s)
[00:05:22] test_class_weights (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0028s)
[00:05:22] test_clone (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok (0.0035s)
[00:05:22] test_equal_class_weight (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok (0.0020s)
[00:05:22] test_fit_then_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok (0.0018s)
[00:05:22] test_input_format (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... ok (0.0013s)
[00:05:22] test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.1215s)
[00:05:22] test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0019s)
[00:05:22] test_multiple_fit (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0015s)
[00:05:22] test_partial_fit_binary (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0019s)
[00:05:22] test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0066s)
[00:05:22] test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0061s)
[00:05:22] test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0062s)
[00:05:22] test_partial_fit_exception (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0005s)
[00:05:22] test_partial_fit_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0020s)
[00:05:22] test_partial_fit_multiclass_average (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0018s)
[00:05:22] test_partial_fit_weight_class_balanced (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0004s)
[00:05:22] test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0015s)
[00:05:22] test_provide_coef (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0006s)
[00:05:22] test_regression_losses (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0041s)
[00:05:22] test_sample_weights (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0027s)
[00:05:22] test_set_coef_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0035s)
[00:05:22] test_set_intercept (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0007s)
[00:05:22] test_set_intercept_binary (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0008s)
[00:05:22] test_set_intercept_to_intercept (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0026s)
[00:05:22] test_sgd (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0043s)
[00:05:22] test_sgd_at_least_two_labels (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0010s)
[00:05:22] test_sgd_bad_alpha (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_alpha_for_optimal_learning_rate (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_eta0 (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_l1_ratio (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_learning_rate_schedule (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_l1 (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0054s)
[00:05:22] test_sgd_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0018s)
[00:05:22] test_sgd_multiclass_average (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0022s)
[00:05:22] test_sgd_multiclass_njobs (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.1444s)
[00:05:22] test_sgd_multiclass_with_init_coef (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0019s)
[00:05:22] test_sgd_n_iter_param (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_proba (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] C:\Python27\lib\site-packages\sklearn\linear_model\stochastic_gradient.py:826: RuntimeWarning: divide by zero encountered in log
[00:05:22]   return np.log(self.predict_proba(X))
[00:05:22] ok (0.0109s)
[00:05:22] test_sgd_shuffle_param (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_warm_start_constant (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0036s)
[00:05:22] test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0036s)
[00:05:22] test_warm_start_multiclass (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0051s)
[00:05:22] test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0063s)
[00:05:22] test_weights_multiplied (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0026s)
[00:05:22] test_wrong_class_weight_format (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0012s)
[00:05:22] test_wrong_class_weight_label (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0011s)
[00:05:22] test_wrong_sample_weights (sklearn.linear_model.tests.test_sgd.SparseSGDClassifierTestCase) ... 
[00:05:22] ok (0.0011s)
[00:05:22] test_average_sparse (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0018s)
[00:05:22] test_clone (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0026s)
[00:05:22] test_elasticnet_convergence (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0576s)
[00:05:22] test_input_format (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0011s)
[00:05:22] test_late_onset_averaging_not_reached (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0982s)
[00:05:22] test_late_onset_averaging_reached (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0017s)
[00:05:22] test_loss_function_epsilon (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0009s)
[00:05:22] test_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0034s)
[00:05:22] test_partial_fit_equal_fit_constant (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0019s)
[00:05:22] test_partial_fit_equal_fit_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0022s)
[00:05:22] test_partial_fit_equal_fit_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0019s)
[00:05:22] test_plain_has_no_average_attr (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0013s)
[00:05:22] test_sgd (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0007s)
[00:05:22] test_sgd_averaged_computed_correctly (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0012s)
[00:05:22] test_sgd_averaged_partial_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0016s)
[00:05:22] test_sgd_bad_alpha_for_optimal_learning_rate (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_loss (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_bad_penalty (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0001s)
[00:05:22] test_sgd_epsilon_insensitive (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0023s)
[00:05:22] test_sgd_huber_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0021s)
[00:05:22] test_sgd_least_squares_fit (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0025s)
[00:05:22] test_warm_start_constant (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0034s)
[00:05:22] test_warm_start_invscaling (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0040s)
[00:05:22] test_warm_start_optimal (sklearn.linear_model.tests.test_sgd.SparseSGDRegressorTestCase) ... 
[00:05:22] ok (0.0037s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_l1_ratio ... 
[00:05:22] ok (0.0267s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_underflow_or_overlow ... 
[00:05:22] ok (0.0078s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_numerical_stability_large_gradient ... 
[00:05:22] ok (0.0016s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_large_regularization ... 
[00:05:22] ok (0.0035s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_hinge ... 
[00:05:22] ok (0.0007s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_squared_hinge ... 
[00:05:22] ok (0.0003s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_log ... 
[00:05:22] ok (0.0004s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_squared_loss ... 
[00:05:22] ok (0.0003s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_huber ... 
[00:05:22] ok (0.0004s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_modified_huber ... 
[00:05:22] ok (0.0004s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_epsilon_insensitive ... 
[00:05:22] ok (0.0004s)
[00:05:22] sklearn.linear_model.tests.test_sgd.test_gradient_squared_epsilon_insensitive ... 
[00:05:22] ok (0.0005s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_coef ... 
[00:05:22] ok (0.0009s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_normalize_option ... 
[00:05:22] ok (0.0023s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_lasso_zero ... 
[00:05:22] ok (0.0016s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_list_input ... 
[00:05:22] ok (0.0051s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_toy_explicit_sparse_input ... 
[00:05:22] ok (0.0083s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_enet_not_as_toy_dataset ... 
[00:05:22] ok (0.0226s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_sparse_lasso_not_as_toy_dataset ... 
[00:05:22] ok (0.0048s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_enet_multitarget ... 
[00:05:22] ok (0.0118s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_path_parameters ... 
[00:05:22] ok (0.0602s)
[00:05:22] sklearn.linear_model.tests.test_sparse_coordinate_descent.test_same_output_sparse_dense_lasso_and_enet_cv ... 
[00:05:23] ok (0.3316s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_1d ... 
[00:05:23] ok (0.0011s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_modweiszfeld_step_2d ... 
[00:05:23] ok (0.0008s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_spatial_median_1d ... 
[00:05:23] ok (0.0005s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_spatial_median_2d ... 
[00:05:23] ok (0.0057s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d ... 
[00:05:23] ok (0.0181s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_theil_sen_1d_no_intercept ... 
[00:05:23] ok (0.0019s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_theil_sen_2d ... 
[00:05:23] ok (0.0574s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_calc_breakdown_point ... 
[00:05:23] ok (0.0002s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_checksubparams_negative_subpopulation ... 
[00:05:23] ok (0.0003s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_few_subsamples ... 
[00:05:23] ok (0.0004s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_checksubparams_too_many_subsamples ... 
[00:05:23] ok (0.0003s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_checksubparams_n_subsamples_if_less_samples_than_features ... 
[00:05:23] ok (0.0003s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_subpopulation ... 
[00:05:23] ok (0.5494s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_subsamples ... 
[00:05:23] ok (0.0082s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_verbosity ... 
[00:05:23] ok (0.0188s)
[00:05:23] sklearn.linear_model.tests.test_theil_sen.test_theil_sen_parallel ... 
[00:05:24] ok (0.1089s)
[00:05:24] sklearn.linear_model.tests.test_theil_sen.test_less_samples_than_features ... 
[00:05:24] ok (0.0021s)
[00:05:24] sklearn.manifold.tests.test_isomap.test_isomap_simple_grid ... 
[00:05:24] ok (0.0353s)
[00:05:24] sklearn.manifold.tests.test_isomap.test_isomap_reconstruction_error ... 
[00:05:24] ok (0.0386s)
[00:05:24] sklearn.manifold.tests.test_isomap.test_transform ... 
[00:05:24] ok (0.0318s)
[00:05:24] sklearn.manifold.tests.test_isomap.test_pipeline ... 
[00:05:24] ok (0.0099s)
[00:05:24] sklearn.manifold.tests.test_isomap.test_isomap_clone_bug ... 
[00:05:24] ok (0.0095s)
[00:05:24] sklearn.manifold.tests.test_locally_linear.test_barycenter_kneighbors_graph ... 
[00:05:24] ok (0.0021s)
[00:05:24] sklearn.manifold.tests.test_locally_linear.test_lle_simple_grid ... 
[00:05:24] ok (0.0154s)
[00:05:24] sklearn.manifold.tests.test_locally_linear.test_lle_manifold ... 
[00:05:25] ok (0.8374s)
[00:05:25] sklearn.manifold.tests.test_locally_linear.test_lle_init_parameters ... 
[00:05:25] ok (0.0006s)
[00:05:25] sklearn.manifold.tests.test_locally_linear.test_pipeline ... 
[00:05:25] ok (0.0288s)
[00:05:25] sklearn.manifold.tests.test_locally_linear.test_singular_matrix ... 
[00:05:25] ok (0.0050s)
[00:05:25] sklearn.manifold.tests.test_mds.test_smacof ... 
[00:05:25] ok (0.0007s)
[00:05:25] sklearn.manifold.tests.test_mds.test_smacof_error ... 
[00:05:25] ok (0.0006s)
[00:05:25] sklearn.manifold.tests.test_mds.test_MDS ... 
[00:05:27] ok (1.8347s)
[00:05:27] sklearn.manifold.tests.test_spectral_embedding.test_sparse_graph_connected_component ... 
[00:05:27] ok (0.1802s)
[00:05:27] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_two_components ... 
[00:05:27] ok (0.0162s)
[00:05:27] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_precomputed_affinity ... 
[00:05:27] ok (0.5308s)
[00:05:27] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_callable_affinity ... 
[00:05:28] ok (0.7249s)
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_amg_solver ... 
[00:05:28] SKIP: pyamg not available.
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_pipeline_spectral_clustering ... 
[00:05:28] ok (0.5754s)
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_eigensolver ... 
[00:05:28] ok (0.0003s)
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unknown_affinity ... 
[00:05:28] ok (0.0002s)
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_connectivity ... 
[00:05:28] ok (0.0020s)
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_deterministic ... 
[00:05:28] ok (0.0036s)
[00:05:28] sklearn.manifold.tests.test_spectral_embedding.test_spectral_embedding_unnormalized ... 
[00:05:28] ok (0.0020s)
[00:05:28] sklearn.manifold.tests.test_t_sne.test_gradient_descent_stops ... 
[00:05:28] ok (0.0016s)
[00:05:28] sklearn.manifold.tests.test_t_sne.test_binary_search ... 
[00:05:28] ok (0.0021s)
[00:05:28] sklearn.manifold.tests.test_t_sne.test_binary_search_neighbors ... 
[00:05:30] ok (1.9930s)
[00:05:30] sklearn.manifold.tests.test_t_sne.test_binary_perplexity_stability ... 
[00:05:31] ok (0.2915s)
[00:05:31] sklearn.manifold.tests.test_t_sne.test_gradient ... 
[00:05:31] ok (0.0500s)
[00:05:31] sklearn.manifold.tests.test_t_sne.test_trustworthiness ... 
[00:05:31] ok (0.0081s)
[00:05:31] sklearn.manifold.tests.test_t_sne.test_preserve_trustworthiness_approximately ... 
[00:05:33] ok (2.5363s)
[00:05:33] t-SNE should give a lower KL divergence with more iterations. ... 
[00:05:35] ok (1.5931s)
[00:05:35] sklearn.manifold.tests.test_t_sne.test_fit_csr_matrix ... 
[00:05:36] ok (1.3279s)
[00:05:36] sklearn.manifold.tests.test_t_sne.test_preserve_trustworthiness_approximately_with_precomputed_distances ... 
[00:05:37] ok (0.3025s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_early_exaggeration_too_small ... 
[00:05:37] ok (0.0005s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_too_few_iterations ... 
[00:05:37] ok (0.0004s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_non_square_precomputed_distances ... 
[00:05:37] ok (0.0003s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_init_not_available ... 
[00:05:37] ok (0.0003s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_distance_not_available ... 
[00:05:37] ok (0.0004s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_pca_initialization_not_compatible_with_precomputed_kernel ... 
[00:05:37] ok (0.0005s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_answer_gradient_two_points ... 
[00:05:37] ok (0.0010s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_answer_gradient_four_points ... 
[00:05:37] ok (0.0014s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_skip_num_points_gradient ... 
[00:05:37] ok (0.0011s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_verbose ... 
[00:05:37] ok (0.0143s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_chebyshev_metric ... 
[00:05:37] ok (0.0138s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_reduction_to_one_component ... 
[00:05:37] ok (0.0140s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_no_sparse_on_barnes_hut ... 
[00:05:37] ok (0.0009s)
[00:05:37] sklearn.manifold.tests.test_t_sne.test_64bit ... 
[00:05:38] C:\Python27\lib\site-packages\sklearn\manifold\t_sne.py:59: RuntimeWarning: underflow encountered in divide
[00:05:38]   P = np.maximum(squareform(P) / sum_P, MACHINE_EPSILON)
[00:05:38] ok (1.3766s)
[00:05:38] sklearn.manifold.tests.test_t_sne.test_barnes_hut_angle ... 
[00:05:38] ok (0.0446s)
[00:05:38] sklearn.manifold.tests.test_t_sne.test_quadtree_similar_point ... 
[00:05:38] ok (0.0006s)
[00:05:38] sklearn.manifold.tests.test_t_sne.test_index_offset ... 
[00:05:38] ok (0.0002s)
[00:05:38] sklearn.metrics.cluster.tests.test_bicluster.test_jaccard ... 
[00:05:38] ok (0.0002s)
[00:05:38] sklearn.metrics.cluster.tests.test_bicluster.test_consensus_score ... 
[00:05:38] ok (0.0027s)
[00:05:38] Different number of biclusters in A and B ... 
[00:05:38] ok (0.0007s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_error_messages_on_wrong_input ... 
[00:05:38] ok (0.0004s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_perfect_matches ... 
[00:05:38] ok (0.0102s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_homogeneous_but_not_complete_labeling ... 
[00:05:38] ok (0.0005s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_complete_but_not_homogeneous_labeling ... 
[00:05:38] ok (0.0005s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_not_complete_and_not_homogeneous_labeling ... 
[00:05:38] ok (0.0005s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_non_consicutive_labels ... 
[00:05:38] ok (0.0013s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_adjustment_for_chance ... 
[00:05:38] ok (0.0603s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_adjusted_mutual_info_score ... 
[00:05:38] ok (0.0052s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_expected_mutual_info_overflow ... 
[00:05:38] ok (0.0056s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_entropy ... 
[00:05:38] ok (0.0002s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_contingency_matrix ... 
[00:05:38] ok (0.0010s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_exactly_zero_info_score ... 
[00:05:38] ok (0.0581s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_v_measure_and_mutual_information ... 
[00:05:38] ok (0.0142s)
[00:05:38] sklearn.metrics.cluster.tests.test_supervised.test_max_n_classes ... 
[00:05:38] ok (0.0016s)
[00:05:38] sklearn.metrics.cluster.tests.test_unsupervised.test_silhouette ... 
[00:05:38] ok (0.0083s)
[00:05:38] sklearn.metrics.cluster.tests.test_unsupervised.test_no_nan ... 
[00:05:38] ok (0.0005s)
[00:05:38] sklearn.metrics.cluster.tests.test_unsupervised.test_correct_labelsize ... 
[00:05:38] ok (0.0023s)
[00:05:38] sklearn.metrics.cluster.tests.test_unsupervised.test_non_encoded_labels ... 
[00:05:38] ok (0.0034s)
[00:05:38] sklearn.metrics.cluster.tests.test_unsupervised.test_non_numpy_labels ... 
[00:05:38] ok (0.0037s)
[00:05:38] sklearn.metrics.tests.test_classification.test_multilabel_accuracy_score_subset_accuracy ... 
[00:05:38] ok (0.0047s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_binary ... 
[00:05:38] ok (0.0485s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f_binary_single_class ... 
[00:05:38] ok (0.0019s)
[00:05:38] sklearn.metrics.tests.test_classification.test_average_precision_score_score_non_binary_class ... 
[00:05:38] ok (0.0002s)
[00:05:38] sklearn.metrics.tests.test_classification.test_average_precision_score_duplicate_values ... 
[00:05:38] ok (0.0005s)
[00:05:38] sklearn.metrics.tests.test_classification.test_average_precision_score_tied_values ... 
[00:05:38] ok (0.0004s)
[00:05:38] sklearn.metrics.tests.test_classification.test_confusion_matrix_binary ... 
[00:05:38] ok (0.0252s)
[00:05:38] sklearn.metrics.tests.test_classification.test_cohen_kappa ... 
[00:05:38] ok (0.0041s)
[00:05:38] sklearn.metrics.tests.test_classification.test_matthews_corrcoef_nan ... 
[00:05:38] ok (0.0024s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_1 ... 
[00:05:38] ok (0.0132s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multilabel_2 ... 
[00:05:38] ok (0.0126s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_with_an_empty_prediction ... 
[00:05:38] ok (0.0127s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f_extra_labels ... 
[00:05:38] ok (0.0194s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f_ignored_labels ... 
[00:05:38] ok (0.0218s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_fscore_support_errors ... 
[00:05:38] ok (0.0275s)
[00:05:38] sklearn.metrics.tests.test_classification.test_matthews_corrcoef_against_numpy_corrcoef ... 
[00:05:38] ok (0.0006s)
[00:05:38] sklearn.metrics.tests.test_classification.test_matthews_corrcoef ... 
[00:05:38] ok (0.0068s)
[00:05:38] sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass ... 
[00:05:39] ok (0.0711s)
[00:05:39] sklearn.metrics.tests.test_classification.test_precision_refcall_f1_score_multilabel_unordered_labels ... 
[00:05:39] ok (0.0120s)
[00:05:39] sklearn.metrics.tests.test_classification.test_precision_recall_f1_score_multiclass_pos_label_none ... 
[00:05:39] ok (0.0009s)
[00:05:39] sklearn.metrics.tests.test_classification.test_zero_precision_recall ... 
[00:05:39] ok (0.0017s)
[00:05:39] sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass ... 
[00:05:39] ok (0.0651s)
[00:05:39] Test confusion matrix - case with sample_weight ... 
[00:05:39] ok (0.0666s)
[00:05:39] sklearn.metrics.tests.test_classification.test_confusion_matrix_multiclass_subset_labels ... 
[00:05:39] ok (0.0619s)
[00:05:39] sklearn.metrics.tests.test_classification.test_classification_report_multiclass ... 
[00:05:39] ok (0.0749s)
[00:05:39] sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_digits ... 
[00:05:39] ok (0.0629s)
[00:05:39] sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_string_label ... 
[00:05:39] ok (0.0622s)
[00:05:39] sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_unicode_label ... 
[00:05:39] ok (0.0619s)
[00:05:39] sklearn.metrics.tests.test_classification.test_classification_report_multiclass_with_long_string_label ... 
[00:05:39] ok (0.0650s)
[00:05:39] sklearn.metrics.tests.test_classification.test_multilabel_classification_report ... 
[00:05:39] ok (0.3483s)
[00:05:39] sklearn.metrics.tests.test_classification.test_multilabel_zero_one_loss_subset ... 
[00:05:39] ok (0.0053s)
[00:05:39] sklearn.metrics.tests.test_classification.test_multilabel_hamming_loss ... 
[00:05:39] ok (0.0113s)
[00:05:39] sklearn.metrics.tests.test_classification.test_multilabel_jaccard_similarity_score ... 
[00:05:39] ok (0.0102s)
[00:05:39] sklearn.metrics.tests.test_classification.test_precision_recall_f1_no_labels ... 
[00:05:39] ok (0.0351s)
[00:05:39] sklearn.metrics.tests.test_classification.test_prf_warnings ... 
[00:05:40] ok (0.0655s)
[00:05:40] sklearn.metrics.tests.test_classification.test_recall_warnings ... 
[00:05:40] ok (0.0059s)
[00:05:40] sklearn.metrics.tests.test_classification.test_precision_warnings ... 
[00:05:40] ok (0.0061s)
[00:05:40] sklearn.metrics.tests.test_classification.test_fscore_warnings ... 
[00:05:40] ok (0.0066s)
[00:05:40] sklearn.metrics.tests.test_classification.test_prf_average_compat ... 
[00:05:40] ok (0.0437s)
[00:05:40] sklearn.metrics.tests.test_classification.test__check_targets ... 
[00:05:40] ok (0.0255s)
[00:05:40] sklearn.metrics.tests.test_classification.test_hinge_loss_binary ... 
[00:05:40] ok (0.0016s)
[00:05:40] sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass ... 
[00:05:40] ok (0.0006s)
[00:05:40] sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_missing_labels_with_labels_none ... 
[00:05:40] ok (0.0003s)
[00:05:40] sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_with_missing_labels ... 
[00:05:40] ok (0.0007s)
[00:05:40] sklearn.metrics.tests.test_classification.test_hinge_loss_multiclass_invariance_lists ... 
[00:05:40] ok (0.0006s)
[00:05:40] sklearn.metrics.tests.test_classification.test_log_loss ... 
[00:05:40] ok (0.0064s)
[00:05:40] sklearn.metrics.tests.test_classification.test_log_loss_pandas_input ... 
[00:05:40] ok (0.0024s)
[00:05:40] sklearn.metrics.tests.test_classification.test_brier_score_loss ... 
[00:05:40] ok (0.0037s)
[00:05:40] sklearn.metrics.tests.test_common.test_format_invariance_with_1d_vectors ... 
[00:05:40] ok (0.2673s)
[00:05:40] sklearn.metrics.tests.test_common.test_invariance_string_vs_numbers_labels ... 
[00:05:40] ok (0.0678s)
[00:05:40] sklearn.metrics.tests.test_common.test_multilabel_representation_invariance ... 
[00:05:40] ok (0.3522s)
[00:05:40] sklearn.metrics.tests.test_common.test_sample_order_invariance ... 
[00:05:40] ok (0.0380s)
[00:05:40] sklearn.metrics.tests.test_common.test_sample_order_invariance_multilabel_and_multioutput ... 
[00:05:41] ok (0.2240s)
[00:05:41] sklearn.metrics.tests.test_common.test_symmetry ... 
[00:05:41] ok (0.0289s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('f1_score',) ... 
[00:05:41] ok (0.0038s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('precision_score',) ... 
[00:05:41] ok (0.0038s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('f2_score',) ... 
[00:05:41] ok (0.0034s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_f2_score',) ... 
[00:05:41] ok (0.0036s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_f0.5_score',) ... 
[00:05:41] ok (0.0035s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('jaccard_similarity_score',) ... 
[00:05:41] ok (0.0023s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_recall_score',) ... 
[00:05:41] ok (0.0036s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('unnormalized_accuracy_score',) ... 
[00:05:41] ok (0.0023s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_f0.5_score',) ... ok (0.0033s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('explained_variance_score',) ... ok (0.0023s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('confusion_matrix',) ... ok (0.0028s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('mean_absolute_error',) ... ok (0.0022s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_precision_score',) ... ok (0.0036s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_f0.5_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('mean_squared_error',) ... ok (0.0022s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('unnormalized_zero_one_loss',) ... ok (0.0020s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('unnormalized_jaccard_similarity_score',) ... ok (0.0019s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_recall_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common
[00:05:41] .test_single_sample('median_absolute_error',) ... ok (0.0024s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_f1_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_f2_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('f0.5_score',) ... ok (0.0030s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_f2_score',) ... ok (0.0032s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('r2_score',) ... ok (0.0023s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('zero_one_loss',) ... ok (0.0020s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_f1_score',) ... ok (0.0032s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_precision_score',) ... ok (0.0033s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('cohen_kappa_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('accuracy_score',) ... ok (0.0022s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('m
[00:05:41] acro_precision_score',) ... ok (0.0032s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('recall_score',) ... ok (0.0032s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_f1_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_recall_score',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('hamming_loss',) ... ok (0.0025s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('mean_absolute_error',) ... ok (0.0031s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('mean_squared_error',) ... ok (0.0033s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('r2_score',) ... ok (0.0037s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('explained_variance_score',) ... ok (0.0073s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('accuracy_score',) ... ok (0.0265s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('unnormalized_accuracy_score',) ... ok (0.0113s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('ha
[00:05:41] mming_loss',) ... 
[00:05:41] ok (0.0149s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('jaccard_similarity_score',) ... 
[00:05:41] ok (0.0161s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('unnormalized_jaccard_similarity_score',) ... 
[00:05:41] ok (0.0140s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('zero_one_loss',) ... 
[00:05:41] ok (0.0118s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('unnormalized_zero_one_loss',) ... 
[00:05:41] ok (0.0121s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('precision_score',) ... 
[00:05:41] ok (0.0174s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('recall_score',) ... 
[00:05:41] ok (0.0167s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('f1_score',) ... 
[00:05:41] ok (0.0163s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('f2_score',) ... 
[00:05:41] ok (0.0166s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('f0.5_score',) ... 
[00:05:41] ok (0.0166s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_f0.5_score',) ... 
[00:05:41] ok (0.0170s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_f1_score',) ... 
[00:05:41] ok (0.0192s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_f2_score',) ... 
[00:05:41] ok (0.0180s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_precision_score',) ... 
[00:05:41] ok (0.0168s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('weighted_recall_score',) ... 
[00:05:41] ok (0.0168s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_f0.5_score',) ... 
[00:05:41] ok (0.0169s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_f1_score',) ... 
[00:05:41] ok (0.0176s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_f2_score',) ... 
[00:05:41] ok (0.0173s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_precision_score',) ... 
[00:05:41] ok (0.0174s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('micro_recall_score',) ... 
[00:05:41] ok (0.0175s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_f0.5_score',) ... 
[00:05:41] ok (0.0168s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_f1_score',) ... 
[00:05:41] ok (0.0171s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_f2_score',) ... ok (0.0182s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_precision_score',) ... 
[00:05:41] ok (0.0189s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('macro_recall_score',) ... 
[00:05:41] ok (0.0164s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('samples_f0.5_score',) ... 
[00:05:41] ok (0.0164s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('samples_f1_score',) ... 
[00:05:41] ok (0.0166s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('samples_f2_score',) ... 
[00:05:41] ok (0.0171s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('samples_precision_score',) ... 
[00:05:41] ok (0.0167s)
[00:05:41] sklearn.metrics.tests.test_common.test_single_sample('samples_recall_score',) ... 
[00:05:41] ok (0.0170s)
[00:05:41] sklearn.metrics.tests.test_common.test_multioutput_number_of_output_differ ... 
[00:05:41] ok (0.0004s)
[00:05:41] sklearn.metrics.tests.test_common.test_multioutput_regression_invariance_to_dimension_shuffling ... 
[00:05:41] ok (0.0033s)
[00:05:41] sklearn.metrics.tests.test_common.test_raise_value_error_multilabel_sequences ... 
[00:05:41] ok (0.0081s)
[00:05:41] sklearn.metrics.tests.test_common.test_normalize_option_binary_classification ... 
[00:05:41] ok (0.0008s)
[00:05:41] sklearn.metrics.tests.test_common.test_normalize_option_multiclasss_classification ... 
[00:05:41] ok (0.0008s)
[00:05:41] sklearn.metrics.tests.test_common.test_normalize_option_multilabel_classification ... 
[00:05:42] ok (0.3907s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multiclass('precision_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... 
[00:05:42] ok (0.0170s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multiclass('recall_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... 
[00:05:42] ok (0.0188s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multiclass('f1_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... 
[00:05:42] ok (0.0165s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multiclass('f2_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... 
[00:05:42] ok (0.0160s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multiclass('f0.5_score', array([0, 1, 0, 1, 1, 2, 0, 2, 0, 0, 0, 2, 1, 2, 2, 0, 1, 1, 1, 1, 0, 1, 0, ... 
[00:05:42] ok (0.0164s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('precision_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0267s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('recall_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0256s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('f1_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0257s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('f2_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0263s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('f0.5_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0274s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('roc_auc_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0323s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel('average_precision_score', array([[0, 1, 0, 0, 1], ... 
[00:05:42] ok (0.0310s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('precision_score', array([[ 0.,  0.,  0.], ... 
[00:05:42] ok (0.0236s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('recall_score', array([[ 0.,  0.,  0.], ... 
[00:05:42] ok (0.0238s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('f1_score', array([[ 0.,  0.,  0.], ... 
[00:05:42] ok (0.0234s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('f2_score', array([[ 0.,  0.,  0.], ... 
[00:05:42] ok (0.0235s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_zeroes('f0.5_score', array([[ 0.,  0.,  0.], ... 
[00:05:42] ok (0.0239s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('precision_score', array([[ 1.,  1.,  1.], ... 
[00:05:42] ok (0.0321s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('recall_score', array([[ 1.,  1.,  1.], ... 
[00:05:42] ok (0.0321s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('f1_score', array([[ 1.,  1.,  1.], ... 
[00:05:42] ok (0.0311s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('f2_score', array([[ 1.,  1.,  1.], ... 
[00:05:42] ok (0.0315s)
[00:05:42] sklearn.metrics.tests.test_common.test_averaging_multilabel_all_ones('f0.5_score', array([[ 1.,  1.,  1.], ... 
[00:05:43] ok (0.0316s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x0D913270>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0085s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x0D913370>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0078s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x0E3E1720>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0079s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x0E3E19C0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0078s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x0E3E1780>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0083s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x0D9131B0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0048s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x0E3E1A20>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0077s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x0E3E1690>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0043s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x0E3E1960>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0073s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('explained_variance_score', <function explained_variance_score at 0x0D934DF0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0055s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_absolute_error', <function mean_absolute_error at 0x0D934D30>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0045s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x0E3E1810>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0077s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('hinge_loss', <function hinge_loss at 0x0D9134B0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0100s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x0E3E1870>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0084s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_squared_error', <function mean_squared_error at 0x0D934D70>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0048s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x0E3E16F0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0043s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('matthews_corrcoef_score', <function matthews_corrcoef at 0x0D9131F0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0066s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <
[00:05:43] functools.partial object at 0x0E3E16C0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0045s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x0E3E1840>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0084s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x0E3E18A0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0082s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x0E3E17E0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0083s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x0E3E1750>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0077s)
[00:05:43] sklearn.met
[00:05:43] rics.tests.test_common.test_sample_weight_invariance('log_loss', <function log_loss at 0x0D913470>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0110s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x0E3E18D0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0081s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('r2_score', <functools.partial object at 0x0E3E1660>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0071s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_log_loss', <functools.partial object at 0x0E3E1B40>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... ok (0.0154s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x0D913230>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0,
[00:05:43]  0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0048s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x0E3E17B0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0081s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x0E3E1900>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0078s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x0D9130F0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0046s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x0E3E19F0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0079s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x0D9133B0>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0079s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x0E3E1990>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0074s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('brier_score_loss', <function brier_score_loss at 0x0D913530>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0091s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x0E3E1930>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0082s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('hamming_loss', <function hamming_loss at 0x0D913430>, array([0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 1, ... 
[00:05:43] ok (0.0058s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x0D913270>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0077s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x0D913370>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0079s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x0E3E1720>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0081s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x0E3E19C0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0075s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x0E3E1780>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0077s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x0D9131B0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0047s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x0E3E1A20>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0075s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x0E3E1690>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0045s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x0E3E1960>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0080s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('explained_variance_score', <function explained_variance_score at 0x0D934DF0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0060s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_absolute_error', <function mean_absolute_error at 0x0D934D30>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0052s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x0E3E1810>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0074s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('hinge_loss', <function hinge_loss at 0x0D9134B0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0148s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x0E3E1870>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0078s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_squared_error', <function mean_squared_error at 0x0D934D70>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0046s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x0E3E16F0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0047s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <functools.partial object at 0x0E3E16C0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0044s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x0E3E1840>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0079s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x0E3E18A0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0076s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x0E3E17E0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0077s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x0E3E1750>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0085s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('log_loss', <function log_loss at 0x0D913470>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0194s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x0E3E18D0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0078s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('r2_score', <functools.partial object at 0x0E3E1660>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0055s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_log_loss', <functools.partial object at 0x0E3E1B40>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0172s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x0D913230>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0049s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x0E3E17B0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0074s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x0E3E1900>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0076s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x0D9130F0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0051s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x0E3E19F0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0074s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x0D9133B0>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0081s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x0E3E1990>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0078s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x0E3E1930>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0085s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('hamming_loss', <function hamming_loss at 0x0D913430>, array([4, 0, 3, 3, 3, 1, 3, 2, 4, 0, 0, 4, 2, 1, 0, 1, 1, 0, 1, 4, 3, 0, 3, ... 
[00:05:43] ok (0.0061s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('accuracy_score', <function accuracy_score at 0x0D9130F0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0142s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_accuracy_score', <functools.partial object at 0x0E3E1690>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0123s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('hamming_loss', <function hamming_loss at 0x0D913430>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0163s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('jaccard_similarity_score', <function jaccard_similarity_score at 0x0D9131B0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0158s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_jaccard_similarity_score', <functools.partial object at 0x0E3E16C0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0133s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('zero_one_loss', <function zero_one_loss at 0x0D913230>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0139s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_zero_one_loss', <functools.partial object at 0x0E3E16F0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0198s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('precision_score', <function precision_score at 0x0D913370>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0267s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('recall_score', <function recall_score at 0x0D9133B0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0185s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f1_score', <function f1_score at 0x0D913270>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0185s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f2_score', <functools.partial object at 0x0E3E1720>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0188s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('f0.5_score', <functools.partial object at 0x0E3E1750>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0181s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f0.5_score', <functools.partial object at 0x0E3E1780>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0180s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f1_score', <functools.partial object at 0x0E3E17B0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:43] ok (0.0178s)
[00:05:43] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_f2_score', <functools.partial object at 0x0E3E17E0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0178s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_precision_score', <functools.partial object at 0x0E3E1810>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0178s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_recall_score', <functools.partial object at 0x0E3E1840>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0182s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f0.5_score', <functools.partial object at 0x0E3E1870>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0176s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f1_score', <functools.partial object at 0x0E3E18A0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0180s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_f2_score', <functools.partial object at 0x0E3E18D0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0178s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_precision_score', <functools.partial object at 0x0E3E1900>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0181s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_recall_score', <functools.partial object at 0x0E3E1930>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0176s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f0.5_score', <functools.partial object at 0x0E3E1960>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0181s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f1_score', <functools.partial object at 0x0E3E1990>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0184s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_f2_score', <functools.partial object at 0x0E3E19C0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0177s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_precision_score', <functools.partial object at 0x0E3E19F0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0189s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_recall_score', <functools.partial object at 0x0E3E1A20>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0180s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f0.5_score', <functools.partial object at 0x0E3E1A50>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0188s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f1_score', <functools.partial object at 0x0E3E1A80>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0182s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_f2_score', <functools.partial object at 0x0E3E1AB0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0180s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_precision_score', <functools.partial object at 0x0E3E1AE0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0177s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_recall_score', <functools.partial object at 0x0E3E1B10>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0181s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('log_loss', <function log_loss at 0x0D913470>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0169s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('unnormalized_log_loss', <functools.partial object at 0x0E3E1B40>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0145s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('roc_auc_score', <function roc_auc_score at 0x0D895730>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0696s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_roc_auc', <functools.partial object at 0x0E3E1B70>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:44] ok (0.0730s)
[00:05:44] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_roc_auc', <functools.partial object at 0x0E3E1BA0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:45] ok (0.8252s)
[00:05:45] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_roc_auc', <functools.partial object at 0x0E3E1BD0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:45] ok (0.0141s)
[00:05:45] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_roc_auc', <functools.partial object at 0x0E3E1C00>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:45] ok (0.0701s)
[00:05:45] sklearn.metrics.tests.test_common.test_sample_weight_invariance('average_precision_score', <function average_precision_score at 0x0D8956F0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:45] ok (0.0602s)
[00:05:45] sklearn.metrics.tests.test_common.test_sample_weight_invariance('weighted_average_precision_score', <functools.partial object at 0x0E3E1C30>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:45] ok (0.0630s)
[00:05:45] sklearn.metrics.tests.test_common.test_sample_weight_invariance('samples_average_precision_score', <functools.partial object at 0x0E3E1C60>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.8209s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('micro_average_precision_score', <functools.partial object at 0x0E3E1C90>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0164s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('macro_average_precision_score', <functools.partial object at 0x0E3E1CC0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0837s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('coverage_error', <function coverage_error at 0x0D895870>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0116s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('label_ranking_loss', <function label_ranking_loss at 0x0D8958B0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0850s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_absolute_error', <function mean_absolute_error at 0x0D934D30>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0064s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('mean_squared_error', <function mean_squared_error at 0x0D934D70>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0086s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('r2_score', <functools.partial object at 0x0E3E1660>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0078s)
[00:05:46] sklearn.metrics.tests.test_common.test_sample_weight_invariance('explained_variance_score', <function explained_variance_score at 0x0D934DF0>, array([[0, 1, 0, ..., 0, 0, 0], ... 
[00:05:46] ok (0.0094s)
[00:05:46] sklearn.metrics.tests.test_common.test_no_averaging_labels ... 
[00:05:46] C:\Python27\lib\site-packages\sklearn\metrics\classification.py:1122: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples.
[00:05:46]   'precision', 'predicted', average, warn_for)
[00:05:46] C:\Python27\lib\site-packages\sklearn\metrics\classification.py:1124: UndefinedMetricWarning: Recall is ill-defined and being set to 0.0 in labels with no true samples.
[00:05:46]   'recall', 'true', average, warn_for)
[00:05:46] C:\Python27\lib\site-packages\sklearn\metrics\classification.py:1122: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no predicted samples.
[00:05:46]   'precision', 'predicted', average, warn_for)
[00:05:46] C:\Python27\lib\site-packages\sklearn\metrics\classification.py:1124: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no true samples.
[00:05:46]   'recall', 'true', average, warn_for)
[00:05:46] ok (0.0229s)
[00:05:46] sklearn.metrics.tests.test_pairwise.test_pairwise_distances ... 
[00:05:46] ok (0.0100s)
[00:05:46] sklearn.metrics.tests.test_pairwise.test_pairwise_precomputed ... 
[00:05:46] ok (0.0010s)
[00:05:46] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x0D934670>, 'euclidean', {}) ... 
[00:05:50] ok (4.2220s)
[00:05:50] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x0D934670>, <function wminkowski at 0x0D92C730>, {'p': 1, 'w': array([ 1.,  2.,  3.,  4.])}) ... 
[00:05:53] ok (3.0307s)
[00:05:53] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x0D934670>, 'wminkowski', {'p': 1, 'w': array([ 1.,  2.,  3.,  4.])}) ... 
[00:05:55] ok (1.4841s)
[00:05:55] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_kernels at 0x0D9346F0>, 'polynomial', {'degree': 1}) ... 
[00:05:59] ok (3.7332s)
[00:05:59] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_kernels at 0x0D9346F0>, <function callable_rbf_kernel at 0x0E3EA4F0>, {'gamma': 0.1}) ... 
[00:06:04] ok (4.9261s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_pairwise_callable_nonstrict_metric ... 
[00:06:04] ok (0.0004s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_pairwise_kernels ... 
[00:06:04] ok (0.0215s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_pairwise_kernels_filter_param ... 
[00:06:04] ok (0.0007s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_paired_distances ... 
[00:06:04] ok (0.0092s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_pairwise_distances_argmin_min ... 
[00:06:04] ok (0.0130s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_euclidean_distances ... 
[00:06:04] ok (0.0026s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_paired_euclidean_distances ... 
[00:06:04] ok (0.0003s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_paired_manhattan_distances ... 
[00:06:04] ok (0.0003s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_chi_square_kernel ... 
[00:06:04] ok (0.0058s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_kernel_symmetry ... 
[00:06:04] ok (0.0019s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_kernel_sparse ... 
[00:06:04] ok (0.0044s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_linear_kernel ... 
[00:06:04] ok (0.0004s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_rbf_kernel ... 
[00:06:04] ok (0.0004s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_laplacian_kernel ... 
[00:06:04] ok (0.0004s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_cosine_similarity_sparse_output ... 
[00:06:04] ok (0.0021s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_cosine_similarity ... 
[00:06:04] ok (0.0044s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_dense_matrices ... 
[00:06:04] ok (0.0003s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_XB_returned ... 
[00:06:04] ok (0.0005s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_different_dimensions ... 
[00:06:04] ok (0.0003s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_invalid_dimensions ... 
[00:06:04] ok (0.0003s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_sparse_arrays ... 
[00:06:04] ok (0.0014s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_tuple_input ... 
[00:06:04] ok (0.0004s)
[00:06:04] sklearn.metrics.tests.test_pairwise.test_check_preserve_type ... 
[00:06:04] ok (0.0004s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve ... 
[00:06:04] ok (0.0279s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_end_points ... 
[00:06:04] ok (0.0007s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_returns_consistency ... 
[00:06:04] ok (0.0268s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_nonrepeating_thresholds ... 
[00:06:04] ok (0.5501s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_multi ... 
[00:06:04] ok (0.0586s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_confidence ... 
[00:06:04] ok (0.0277s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_hard ... 
[00:06:04] ok (0.0259s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_one_label ... 
[00:06:04] ok (0.0045s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_toydata ... 
[00:06:04] ok (0.0167s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_roc_curve_drop_intermediate ... 
[00:06:04] ok (0.0009s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_auc ... 
[00:06:04] ok (0.0011s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_auc_duplicate_values ... 
[00:06:04] ok (0.0007s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_auc_errors ... 
[00:06:04] ok (0.0009s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_auc_score_non_binary_class ... 
[00:06:04] ok (0.0021s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_precision_recall_curve ... 
[00:06:04] ok (0.0275s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_precision_recall_curve_pos_label ... 
[00:06:04] ok (0.0582s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_precision_recall_curve_errors ... 
[00:06:04] ok (0.0003s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_precision_recall_curve_toydata ... 
[00:06:04] ok (0.0143s)
[00:06:04] sklearn.metrics.tests.test_ranking.test_score_scale_invariance ... 
[00:06:05] ok (0.0252s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>,) ... 
[00:06:05] ok (0.0158s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>,) ... 
[00:06:05] ok (0.0623s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>,) ... 
[00:06:05] ok (0.0556s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>,) ... 
[00:06:05] ok (0.0055s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>,) ... 
[00:06:05] ok (0.0016s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x0E3F5870>,) ... 
[00:06:05] ok (0.0068s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x0E3F5870>,) ... 
[00:06:05] ok (0.0282s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x0E3F5870>,) ... 
[00:06:05] ok (0.0279s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function _my_lrap at 0x0E3F5870>,) ... 
[00:06:05] ok (0.0019s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>,) ... 
[00:06:05] ok (0.0013s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 2, 1, 0) ... 
[00:06:05] ok (0.0022s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 5, 1, 0) ... 
[00:06:05] ok (0.0025s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 10, 1, 0) ... 
[00:06:05] ok (0.0023s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 2, 2, 0) ... 
[00:06:05] ok (0.0024s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 5, 2, 0) ... 
[00:06:05] ok (0.0062s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 10, 2, 0) ... 
[00:06:05] ok (0.0027s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 2, 8, 0) ... ok (0.0050s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 5, 8, 0) ... ok (0.0073s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 10, 8, 0) ... ok (0.0069s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 2, 20, 0) ... 
[00:06:05] ok (0.0074s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 5, 20, 0) ... 
[00:06:05] ok (0.0076s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_avp(<function label_ranking_average_precision_score at 0x0D895830>, 10, 20, 0) ... 
[00:06:05] ok (0.0073s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_coverage_error ... 
[00:06:05] ok (0.0141s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_coverage_tie_handling ... 
[00:06:05] ok (0.0059s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_label_ranking_loss ... 
[00:06:05] ok (0.0102s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_ranking_appropriate_input_shape ... 
[00:06:05] ok (0.0011s)
[00:06:05] sklearn.metrics.tests.test_ranking.test_ranking_loss_ties_handling ... 
[00:06:05] ok (0.0039s)
[00:06:05] sklearn.metrics.tests.test_regression.test_regression_metrics ... 
[00:06:05] ok (0.0011s)
[00:06:05] sklearn.metrics.tests.test_regression.test_multioutput_regression ... 
[00:06:05] ok (0.0008s)
[00:06:05] sklearn.metrics.tests.test_regression.test_regression_metrics_at_limits ... 
[00:06:05] ok (0.0013s)
[00:06:05] sklearn.metrics.tests.test_regression.test__check_reg_targets ... 
[00:06:05] ok (0.0026s)
[00:06:05] sklearn.metrics.tests.test_regression.test_regression_multioutput_array ... 
[00:06:05] ok (0.0034s)
[00:06:05] sklearn.metrics.tests.test_regression.test_regression_custom_weights ... 
[00:06:05] ok (0.0011s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_all_scorers_repr ... 
[00:06:05] ok (0.0002s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_check_scoring ... 
[00:06:05] ok (0.0011s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_check_scoring_gridsearchcv ... 
[00:06:05] ok (0.0009s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_make_scorer ... 
[00:06:05] ok (0.0001s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_classification_scores ... 
[00:06:05] ok (0.0138s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_regression_scorers ... 
[00:06:05] ok (0.0129s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_thresholded_scorers ... 
[00:06:05] ok (0.0065s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_thresholded_scorers_multilabel_indicator_data ... 
[00:06:05] ok (0.0621s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_unsupervised_scorers ... 
[00:06:05] ok (0.0174s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_raises_on_score_list ... 
[00:06:05] ok (0.0098s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_sample_weight ... 
[00:06:05] ok (0.0466s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('f1',) ... 
[00:06:05] ok (0.0026s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('f1_weighted',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('f1_samples',) ... 
[00:06:05] ok (0.0028s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('recall_samples',) ... 
[00:06:05] ok (0.0030s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('recall_micro',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('adjusted_rand_score',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('recall_macro',) ... 
[00:06:05] ok (0.0023s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('mean_absolute_error',) ... 
[00:06:05] ok (0.0019s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('precision_macro',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('precision_weighted',) ... 
[00:06:05] ok (0.0022s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('f1_macro',) ... 
[00:06:05] ok (0.0022s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('recall_weighted',) ... 
[00:06:05] ok (0.0023s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('accuracy',) ... 
[00:06:05] ok (0.0020s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('precision_samples',) ... 
[00:06:05] ok (0.0029s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('median_absolute_error',) ... 
[00:06:05] ok (0.0018s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('precision',) ... 
[00:06:05] ok (0.0022s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('log_loss',) ... 
[00:06:05] ok (0.0025s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('precision_micro',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('average_precision',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('roc_auc',) ... 
[00:06:05] ok (0.0020s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('r2',) ... 
[00:06:05] ok (0.0027s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('recall',) ... 
[00:06:05] ok (0.0022s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('mean_squared_error',) ... 
[00:06:05] ok (0.0018s)
[00:06:05] sklearn.metrics.tests.test_score_objects.test_scorer_memmap_input('f1_micro',) ... 
[00:06:05] ok (0.0021s)
[00:06:05] test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... 
[00:06:05] ok (0.0033s)
[00:06:05] test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... 
[00:06:05] ok (0.0034s)
[00:06:05] test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... 
[00:06:05] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:05]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:05] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:05]   v = np.exp(v - out)
[00:06:05] ok (0.0620s)
[00:06:05] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... 
[00:06:05] ok (0.0276s)
[00:06:05] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithDiagCovars) ... 
[00:06:05] ok (0.0218s)
[00:06:05] test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... 
[00:06:05] ok (0.0032s)
[00:06:05] test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... 
[00:06:05] ok (0.0043s)
[00:06:05] test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... 
[00:06:05] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:05]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:05] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:05]   v = np.exp(v - out)
[00:06:05] ok (0.1022s)
[00:06:05] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... 
[00:06:05] ok (0.0246s)
[00:06:05] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithFullCovars) ... 
[00:06:05] ok (0.0242s)
[00:06:05] test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... 
[00:06:05] ok (0.0039s)
[00:06:05] test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... 
[00:06:05] ok (0.0036s)
[00:06:05] test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... 
[00:06:05] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:05]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:05] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:05]   v = np.exp(v - out)
[00:06:05] ok (0.0618s)
[00:06:05] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... 
[00:06:05] ok (0.0214s)
[00:06:05] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithSphericalCovars) ... 
[00:06:05] ok (0.0218s)
[00:06:05] test_eval (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... 
[00:06:05] ok (0.0035s)
[00:06:05] test_sample (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... 
[00:06:05] ok (0.0042s)
[00:06:05] test_train (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... 
[00:06:06] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:06]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:06] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:06]   v = np.exp(v - out)
[00:06:06] ok (0.0802s)
[00:06:06] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... 
[00:06:06] ok (0.0252s)
[00:06:06] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestDPGMMWithTiedCovars) ... 
[00:06:06] ok (0.0233s)
[00:06:06] test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... 
[00:06:06] ok (0.0030s)
[00:06:06] test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... 
[00:06:06] ok (0.0035s)
[00:06:06] test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... 
[00:06:06] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:06]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:06] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:06]   v = np.exp(v - out)
[00:06:06] ok (0.0584s)
[00:06:06] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... 
[00:06:06] ok (0.0211s)
[00:06:06] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithDiagCovars) ... 
[00:06:06] ok (0.0203s)
[00:06:06] test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... 
[00:06:06] ok (0.0031s)
[00:06:06] test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... 
[00:06:06] ok (0.0043s)
[00:06:06] test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... 
[00:06:06] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:06]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:06] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:06]   v = np.exp(v - out)
[00:06:06] ok (0.1094s)
[00:06:06] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... 
[00:06:06] ok (0.0271s)
[00:06:06] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithFullCovars) ... 
[00:06:06] ok (0.0359s)
[00:06:06] test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... 
[00:06:06] ok (0.0033s)
[00:06:06] test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... 
[00:06:06] ok (0.0034s)
[00:06:06] test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... 
[00:06:06] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:06]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:06] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:06]   v = np.exp(v - out)
[00:06:06] ok (0.0512s)
[00:06:06] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... 
[00:06:06] ok (0.0210s)
[00:06:06] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithSphericalCovars) ... 
[00:06:06] ok (0.0216s)
[00:06:06] test_eval (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... 
[00:06:06] ok (0.0033s)
[00:06:06] test_sample (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... 
[00:06:06] ok (0.0044s)
[00:06:06] test_train (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... 
[00:06:06] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:06]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:06] C:\Python27\lib\site-packages\sklearn\mixture\dpgmm.py:40: RuntimeWarning: underflow encountered in exp
[00:06:06]   v = np.exp(v - out)
[00:06:06] ok (0.0626s)
[00:06:06] test_train_1d (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... 
[00:06:06] ok (0.0233s)
[00:06:06] test_train_degenerate (sklearn.mixture.tests.test_dpgmm.TestVBGMMWithTiedCovars) ... 
[00:06:06] ok (0.0240s)
[00:06:06] sklearn.mixture.tests.test_dpgmm.test_class_weights ... 
[00:06:06] ok (0.1237s)
[00:06:06] sklearn.mixture.tests.test_dpgmm.test_verbose_boolean ... 
[00:06:07] ok (0.4216s)
[00:06:07] sklearn.mixture.tests.test_dpgmm.test_verbose_first_level ... 
[00:06:07] ok (0.2204s)
[00:06:07] sklearn.mixture.tests.test_dpgmm.test_verbose_second_level ... 
[00:06:07] ok (0.2158s)
[00:06:07] sklearn.mixture.tests.test_dpgmm.test_log_normalize ... 
[00:06:07] ok (0.0003s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_attributes ... 
[00:06:07] ok (0.0069s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_check_X ... 
[00:06:07] ok (0.0004s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_check_weights ... 
[00:06:07] ok (0.0053s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_check_means ... 
[00:06:07] ok (0.0057s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_check_precisions ... 
[00:06:07] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:07]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:07] C:\Python27\lib\site-packages\sklearn\mixture\gaussian_mixture.py:642: RuntimeWarning: underflow encountered in exp
[00:06:07]   return np.mean(log_prob_norm), np.exp(log_resp)
[00:06:07] C:\Python27\lib\site-packages\sklearn\mixture\gaussian_mixture.py:165: RuntimeWarning: underflow encountered in multiply
[00:06:07]   covariances[k] = np.dot(resp[:, k] * diff.T, diff) / nk[k]
[00:06:07] ok (0.0233s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_full ... 
[00:06:07] ok (0.0020s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_tied ... 
[00:06:07] ok (0.0010s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_suffstat_sk_diag ... 
[00:06:07] ok (0.0009s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_suffstat_sk_spherical ... 
[00:06:07] ok (0.0005s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_log_probabilities ... 
[00:06:07] ok (0.0050s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_estimate_log_prob_resp ... 
[00:06:07] ok (0.0238s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_predict_predict_proba ... 
[00:06:07] ok (0.0172s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit ... 
[00:06:07] ok (0.1709s)
[00:06:07] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_best_params ... 
[00:06:08] ok (0.1848s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_fit_convergence_warning ... 
[00:06:08] ok (0.0252s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_multiple_init ... 
[00:06:08] ok (0.1015s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_n_parameters ... 
[00:06:08] ok (0.0146s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_bic_1d_1component ... 
[00:06:08] ok (0.0055s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_aic_bic ... 
[00:06:08] ok (0.0262s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_gaussian_mixture_verbose ... 
[00:06:08] ok (0.0197s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_warm_start ... 
[00:06:08] ok (0.0268s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_score ... 
[00:06:08] ok (0.0155s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_score_samples ... 
[00:06:08] ok (0.0107s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_monotonic_likelihood ... 
[00:06:08] ok (0.5820s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_regularisation ... 
[00:06:08] ok (0.0397s)
[00:06:08] sklearn.mixture.tests.test_gaussian_mixture.test_property ... 
[00:06:08] ok (0.0407s)
[00:06:08] test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... 
[00:06:08] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:08]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:08] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:08]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:08] ok (0.0062s)
[00:06:08] test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... 
[00:06:08] ok (0.0048s)
[00:06:08] test_train (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... 
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] ok (0.0605s)
[00:06:09] test_train_1d (sklearn.mixture.tests.test_gmm.T
[00:06:09] estGMMWithDiagonalCovars) ... ok (0.0235s)
[00:06:09] test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithDiagonalCovars) ... 
[00:06:09] ok (0.0199s)
[00:06:09] test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... 
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] ok (0.0060s)
[00:06:09] test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... 
[00:06:09] ok (0.0057s)
[00:06:09] test_train (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... 
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] ok (0.0871s)
[00:06:09] test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... 
[00:06:09] ok (0.0228s)
[00:06:09] test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithFullCovars) ... 
[00:06:09] ok (0.0201s)
[00:06:09] test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... 
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] ok (0.0042s)
[00:06:09] test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... 
[00:06:09] ok (0.0036s)
[00:06:09] test_train (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... 
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: R
[00:06:09] untimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] ok (0.0553s)
[00:06:09] test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... 
[00:06:09] ok (0.0162s)
[00:06:09] test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithSphericalCovars) ... 
[00:06:09] ok (0.0198s)
[00:06:09] test_eval (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... 
[00:06:09] C:\Python27\lib\site-packages\sklearn\utils\extmath.py:419: RuntimeWarning: underflow encountered in exp
[00:06:09]   out = np.log(np.sum(np.exp(arr - vmax), axis=0))
[00:06:09] C:\Python27\lib\site-packages\sklearn\mixture\gmm.py:328: RuntimeWarning: underflow encountered in exp
[00:06:09]   responsibilities = np.exp(lpr - logprob[:, np.newaxis])
[00:06:09] ok (0.0052s)
[00:06:09] test_sample (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... 
[00:06:09] ok (0.0045s)
[00:06:09] test_train (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... 
[00:06:09] ok (0.0797s)
[00:06:09] test_train_1d (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... 
[00:06:09] ok (0.0170s)
[00:06:09] test_train_degenerate (sklearn.mixture.tests.test_gmm.TestGMMWithTiedCovars) ... 
[00:06:09] ok (0.0221s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_sample_gaussian ... 
[00:06:09] ok (0.0011s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_lmvnpdf_diag ... 
[00:06:09] ok (0.0007s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_lmvnpdf_spherical ... 
[00:06:09] ok (0.0007s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_lmvnpdf_full ... 
[00:06:09] ok (0.0011s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_lvmpdf_full_cv_non_positive_definite ... 
[00:06:09] ok (0.0003s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_1d_1component ... 
[00:06:09] ok (0.0224s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_GMM_attributes ... 
[00:06:09] ok (0.0027s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_aic ... 
[00:06:09] ok (0.0759s)
[00:06:09] test that gmm.fit_predict is equivalent to gmm.fit + gmm.predict ... 
[00:06:09] ok (0.1023s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_multiple_init ... 
[00:06:09] ok (0.1148s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_n_parameters ... 
[00:06:09] ok (0.0512s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_verbose_first_level ... 
[00:06:09] ok (0.0243s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_verbose_second_level ... 
[00:06:09] ok (0.0225s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_positive_definite_covars('full',) ... 
[00:06:09] ok (0.0165s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_positive_definite_covars('tied',) ... 
[00:06:09] ok (0.0165s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_positive_definite_covars('diag',) ... 
[00:06:09] ok (0.0150s)
[00:06:09] sklearn.mixture.tests.test_gmm.test_positive_definite_covars('spherical',) ... 
[00:06:09] ok (0.0138s)
[00:06:09] sklearn.model_selection.tests.test_search.test_parameter_grid ... 
[00:06:09] ok (0.0007s)
[00:06:09] sklearn.model_selection.tests.test_search.test_grid_search ... 
[00:06:09] [Parallel(n_jobs=1)]: Done   9 out of   9 | elapsed:    0.0s finished
[00:06:09] ok (0.0017s)
[00:06:09] sklearn.model_selection.tests.test_search.test_grid_search_score_method ... 
[00:06:09] ok (0.0662s)
[00:06:09] sklearn.model_selection.tests.test_search.test_grid_search_labels ... 
[00:06:10] ok (0.1147s)
[00:06:10] sklearn.model_selection.tests.test_search.test_trivial_grid_scores ... 
[00:06:10] ok (0.0017s)
[00:06:10] sklearn.model_selection.tests.test_search.test_no_refit ... 
[00:06:10] ok (0.0023s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_error ... 
[00:06:10] ok (0.0026s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_iid ... 
[00:06:10] ok (0.0316s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_one_grid_point ... 
[00:06:10] ok (0.0454s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_bad_param_grid ... 
[00:06:10] ok (0.0003s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_no_score ... 
[00:06:10] ok (0.0934s)
[00:06:10] sklearn.model_selection.tests.test_search.test_pandas_input ... 
[00:06:10] ok (0.0390s)
[00:06:10] sklearn.model_selection.tests.test_search.test_refit ... 
[00:06:10] ok (0.0122s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_sparse ... 
[00:06:10] ok (0.0770s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_sparse_scoring ... 
[00:06:10] ok (0.1256s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_precomputed_kernel ... 
[00:06:10] ok (0.0391s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_precomputed_kernel_error_nonsquare ... 
[00:06:10] ok (0.0041s)
[00:06:10] sklearn.model_selection.tests.test_search.test_grid_search_precomputed_kernel_error_kernel_function ... 
[00:06:10] ok (0.0062s)
[00:06:10] sklearn.model_selection.tests.test_search.test_gridsearch_nd ... 
[00:06:10] ok (0.0158s)
[00:06:10] sklearn.model_selection.tests.test_search.test_X_as_list ... 
[00:06:10] ok (0.0104s)
[00:06:10] sklearn.model_selection.tests.test_search.test_y_as_list ... 
[00:06:10] ok (0.0119s)
[00:06:10] sklearn.model_selection.tests.test_search.test_unsupervised_grid_search ... 
[00:06:11] ok (0.4500s)
[00:06:11] sklearn.model_selection.tests.test_search.test_gridsearch_no_predict ... 
[00:06:11] ok (0.0180s)
[00:06:11] sklearn.model_selection.tests.test_search.test_param_sampler ... 
[00:06:11] ok (0.0039s)
[00:06:11] sklearn.model_selection.tests.test_search.test_randomized_search_grid_scores ... 
[00:06:11] ok (0.7192s)
[00:06:11] sklearn.model_selection.tests.test_search.test_grid_search_score_consistency ... 
[00:06:11] ok (0.1037s)
[00:06:11] sklearn.model_selection.tests.test_search.test_pickle ... 
[00:06:11] ok (0.0053s)
[00:06:11] sklearn.model_selection.tests.test_search.test_grid_search_with_multioutput_data ... 
[00:06:12] ok (0.2210s)
[00:06:12] sklearn.model_selection.tests.test_search.test_predict_proba_disabled ... 
[00:06:12] ok (0.0078s)
[00:06:12] sklearn.model_selection.tests.test_search.test_grid_search_allows_nans ... 
[00:06:12] ok (0.0195s)
[00:06:12] sklearn.model_selection.tests.test_search.test_grid_search_failing_classifier ... 
[00:06:12] ok (0.0214s)
[00:06:12] sklearn.model_selection.tests.test_search.test_grid_search_failing_classifier_raise ... 
[00:06:12] ok (0.0071s)
[00:06:12] sklearn.model_selection.tests.test_search.test_parameters_sampler_replacement ... 
[00:06:12] ok (0.0036s)
[00:06:12] sklearn.model_selection.tests.test_split.test_kfold_valueerrors ... 
[00:06:12] ok (0.0036s)
[00:06:12] sklearn.model_selection.tests.test_split.test_kfold_indices ... 
[00:06:12] ok (0.0005s)
[00:06:12] sklearn.model_selection.tests.test_split.test_kfold_no_shuffle ... 
[00:06:12] ok (0.0009s)
[00:06:12] sklearn.model_selection.tests.test_split.test_stratified_kfold_no_shuffle ... 
[00:06:12] ok (0.0016s)
[00:06:12] sklearn.model_selection.tests.test_split.test_stratified_kfold_ratios ... 
[00:06:12] ok (0.0060s)
[00:06:12] sklearn.model_selection.tests.test_split.test_cross_validator_with_default_params ... 
[00:06:12] ok (0.0168s)
[00:06:12] sklearn.model_selection.tests.test_split.train_test_split_pandas ... ok (0.0036s)
[00:06:12] sklearn.model_selection.tests.test_split.test_kfold_balance ... ok (0.0017s)
[00:06:12] sklearn.model_selection.tests.test_split.test_stratifiedkfold_balance ... ok (0.0230s)
[00:06:12] sklearn.model_selection.tests.test_split.test_shuffle_kfold ... ok (0.0013s)
[00:06:12] sklearn.model_selection.tests.test_split.test_shuffle_kfold_stratifiedkfold_reproducibility ... ok (0.0114s)
[00:06:12] sklearn.model_selection.tests.test_split.test_shuffle_stratifiedkfold ... ok (0.0020s)
[00:06:12] sklearn.model_selection.tests.test_split.test_kfold_can_detect_dependent_samples_on_digits ... 
[00:06:12] ok (0.6158s)
[00:06:12] sklearn.model_selection.tests.test_split.test_shuffle_split ... 
[00:06:12] ok (0.0036s)
[00:06:12] sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_init ... 
[00:06:12] ok (0.0007s)
[00:06:12] sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_iter ... 
[00:06:12] ok (0.0176s)
[00:06:12] sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_even ... 
[00:06:13] ok (0.1271s)
[00:06:13] sklearn.model_selection.tests.test_split.test_stratified_shuffle_split_overlap_train_test_bug ... 
[00:06:13] ok (0.0008s)
[00:06:13] sklearn.model_selection.tests.test_split.test_predefinedsplit_with_kfold_split ... 
[00:06:13] ok (0.0006s)
[00:06:13] sklearn.model_selection.tests.test_split.test_label_shuffle_split ... 
[00:06:13] ok (0.0071s)
[00:06:13] sklearn.model_selection.tests.test_split.test_leave_label_out_changing_labels ... 
[00:06:13] ok (0.0013s)
[00:06:13] sklearn.model_selection.tests.test_split.test_train_test_split_errors ... 
[00:06:13] ok (0.0008s)
[00:06:13] sklearn.model_selection.tests.test_split.test_train_test_split ... 
[00:06:13] ok (0.0028s)
[00:06:13] sklearn.model_selection.tests.test_split.train_test_split_mock_pandas ... 
[00:06:13] ok (0.0003s)
[00:06:13] sklearn.model_selection.tests.test_split.test_shufflesplit_errors ... 
[00:06:13] ok (0.0004s)
[00:06:13] sklearn.model_selection.tests.test_split.test_shufflesplit_reproducible ... 
[00:06:13] ok (0.0004s)
[00:06:13] sklearn.model_selection.tests.test_split.test_safe_split_with_precomputed_kernel ... 
[00:06:13] ok (0.0023s)
[00:06:13] sklearn.model_selection.tests.test_split.test_train_test_split_allow_nans ... 
[00:06:13] ok (0.0005s)
[00:06:13] sklearn.model_selection.tests.test_split.test_check_cv ... 
[00:06:13] ok (0.0076s)
[00:06:13] sklearn.model_selection.tests.test_split.test_cv_iterable_wrapper ... 
[00:06:13] ok (0.0012s)
[00:06:13] sklearn.model_selection.tests.test_split.test_label_kfold ... 
[00:06:13] ok (0.0164s)
[00:06:13] sklearn.model_selection.tests.test_split.test_nested_cv ... 
[00:06:15] ok (2.5755s)
[00:06:15] sklearn.model_selection.tests.test_split.test_build_repr ... 
[00:06:15] ok (0.0004s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score ... 
[00:06:15] ok (0.1952s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_predict_labels ... 
[00:06:15] ok (0.0016s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_pandas ... 
[00:06:15] ok (0.0044s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_mask ... 
[00:06:15] ok (0.0253s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_precomputed ... 
[00:06:15] ok (0.0203s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_fit_params ... 
[00:06:15] ok (0.0029s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_score_func ... 
[00:06:15] ok (0.0009s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_errors ... 
[00:06:15] ok (0.0002s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_classification ... 
[00:06:15] ok (0.0366s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_cross_val_score_with_score_func_regression ... 
[00:06:15] ok (0.0344s)
[00:06:15] sklearn.model_selection.tests.test_validation.test_permutation_score ... 
[00:06:16] ok (0.8425s)
[00:06:16] sklearn.model_selection.tests.test_validation.test_permutation_test_score_allow_nans ... 
[00:06:17] ok (0.4171s)
[00:06:17] sklearn.model_selection.tests.test_validation.test_cross_val_score_allow_nans ... 
[00:06:17] ok (0.0089s)
[00:06:17] sklearn.model_selection.tests.test_validation.test_cross_val_score_multilabel ... 
[00:06:17] ok (0.0547s)
[00:06:17] sklearn.model_selection.tests.test_validation.test_cross_val_predict ... 
[00:06:18] ok (0.9520s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_cross_val_predict_input_types ... 
[00:06:18] ok (0.0393s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_cross_val_predict_pandas ... 
[00:06:18] ok (0.0032s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_cross_val_score_sparse_fit_params ... ok (0.0038s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve ... ok (0.0127s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_unsupervised ... ok (0.0123s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_verbose ... [Parallel(n_jobs=1)]: Done  15 out of  15 | elapsed:    0.0s finished
[00:06:18] ok (0.0068s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_not_possible ... 
[00:06:18] ok (0.0003s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning ... 
[00:06:18] ok (0.0035s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_incremental_learning_unsupervised ... 
[00:06:18] ok (0.0032s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_batch_and_incremental_learning_are_equal ... 
[00:06:18] ok (0.0384s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_n_sample_range_out_of_bounds ... 
[00:06:18] ok (0.0014s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_remove_duplicate_sample_sizes ... 
[00:06:18] ok (0.0050s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_learning_curve_with_boolean_indices ... 
[00:06:18] ok (0.0125s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_validation_curve ... 
[00:06:18] ok (0.0056s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_check_is_permutation ... 
[00:06:18] ok (0.0001s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_cross_val_predict_sparse_prediction ... 
[00:06:18] ok (0.1595s)
[00:06:18] sklearn.model_selection.tests.test_validation.test_cross_val_predict_with_method ... 
[00:06:19] ok (1.3923s)
[00:06:19] sklearn.model_selection.tests.test_validation.test_score_memmap ... 
[00:06:19] ERROR
[00:06:19] sklearn.neighbors.tests.test_approximate.test_neighbors_accuracy_with_n_candidates ... 
[00:06:20] ok (0.0960s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_neighbors_accuracy_with_n_estimators ... 
[00:06:20] C:\Python27\lib\site-packages\sklearn\neighbors\approximate.py:289: UserWarning: Number of candidates is not sufficient to retrieve 5 neighbors with min_hash_match = 4. Candidates are filled up uniformly from unselected indices.
[00:06:20]   " indices." % (n_neighbors, self.min_hash_match))
[00:06:20] ok (0.4109s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_radius_neighbors ... 
[00:06:20] ok (0.2501s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_distances ... 
[00:06:20] ok (0.0261s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_fit ... 
[00:06:20] ok (0.0038s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_partial_fit ... 
[00:06:20] ok (0.0121s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_kneighbors ... 
[00:06:20] C:\Python27\lib\site-packages\sklearn\neighbors\approximate.py:289: UserWarning: Number of candidates is not sufficient to retrieve 5 neighbors with min_hash_match = 0. Candidates are filled up uniformly from unselected indices.
[00:06:20]   " indices." % (n_neighbors, self.min_hash_match))
[00:06:20] ok (0.0450s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_radius_neighbors_boundary_handling ... 
[00:06:20] ok (0.0197s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_hash_functions ... 
[00:06:20] ok (0.0041s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_candidates ... 
[00:06:20] C:\Python27\lib\site-packages\sklearn\neighbors\approximate.py:289: UserWarning: Number of candidates is not sufficient to retrieve 3 neighbors with min_hash_match = 32. Candidates are filled up uniformly from unselected indices.
[00:06:20]   " indices." % (n_neighbors, self.min_hash_match))
[00:06:20] C:\Python27\lib\site-packages\sklearn\neighbors\approximate.py:289: UserWarning: Number of candidates is not sufficient to retrieve 5 neighbors with min_hash_match = 31. Candidates are filled up uniformly from unselected indices.
[00:06:20]   " indices." % (n_neighbors, self.min_hash_match))
[00:06:20] ok (0.0192s)
[00:06:20] sklearn.neighbors.tests.test_approximate.test_graphs ... 
[00:06:21] ok (0.4596s)
[00:06:21] sklearn.neighbors.tests.test_approximate.test_sparse_input ... 
[00:06:21] ok (0.2555s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'chebyshev', {}) ... 
[00:06:21] ok (0.0020s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'chebyshev', {}) ... 
[00:06:21] ok (0.0011s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'chebyshev', {}) ... 
[00:06:21] ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'chebyshev', {}) ... 
[00:06:21] ok (0.0009s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'chebyshev', {}) ... 
[00:06:21] ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'chebyshev', {}) ... 
[00:06:21] ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'chebyshev', {}) ... 
[00:06:21] ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'chebyshev', {}) ... 
[00:06:21] ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'chebyshev', {}) ... 
[00:06:21] ok (0.0009s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'chebyshev', {}) ... 
[00:06:21] ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'chebyshev', {}) ... 
[00:06:21] ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'chebyshev', {}) ... 
[00:06:21] ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0014s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0014s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0012s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0012s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0016s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0014s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0065s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0013s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0016s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0014s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0013s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'minkowski', {'p': 3}) ... 
[00:06:21] ok (0.0013s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0033s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0025s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0025s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0020s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0025s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0027s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'seuclidean', {'V': array([ 0.81492681,  0.09372526,  0.28118244])}) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0029s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0020s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0023s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'mahalanobis', {'V': array([[ 0.99687626,  0.73035488,  0.27570925], ... ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'euclidean', {}) ... ok (0.0010s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'euclidean', {}) ... ok (0.0009s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'euclidean', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'euclidean', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'euclidean', {}) ... ok (0.0009s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'euclidean', {}) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'euclidean', {}) ... ok (0.0006s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, Fal
[00:06:21] se, 3, 'euclidean', {}) ... ok (0.0006s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'euclidean', {}) ... ok (0.0012s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'euclidean', {}) ... ok (0.0009s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'euclidean', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'euclidean', {}) ... ok (0.0006s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.te
[00:06:21] st_ball_tree.test_ball_tree_query(False, False, 1, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0024s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0027s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0031s)
[00:06:21] sklearn.neighbors.tests.
[00:06:21] test_ball_tree.test_ball_tree_query(True, False, 5, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0024s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'wminkowski', {'p': 3, 'w': array([ 0.08512997,  0.60716463,  0.9012089 ])}) ... ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 1, 'manhattan', {}) ... ok (0.0009s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 1, 'manhattan', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 1, 'manhattan', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 1, 'manhattan', {}) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 3, 'manhattan', {}
[00:06:21] ) ... ok (0.0010s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 3, 'manhattan', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 3, 'manhattan', {}) ... ok (0.0006s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 3, 'manhattan', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, True, 5, 'manhattan', {}) ... ok (0.0010s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(True, False, 5, 'manhattan', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, True, 5, 'manhattan', {}) ... ok (0.0006s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query(False, False, 5, 'manhattan', {}) ... ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('matching',) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('jaccard',) ... ok (0.0009s)
[00:06:21] sklearn.neigh
[00:06:21] bors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('dice',) ... ok (0.0010s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('kulsinski',) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('rogerstanimoto',) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('russellrao',) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('sokalmichener',) ... ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_boolean_metrics('sokalsneath',) ... 
[00:06:21] ok (0.0011s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_discrete_metrics('hamming',) ... 
[00:06:21] ok (0.0008s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_discrete_metrics('canberra',) ... 
[00:06:21] ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_discrete_metrics('braycurtis',) ... 
[00:06:21] ok (0.0007s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius ... 
[00:06:21] ok (0.0297s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_query_radius_distance ... 
[00:06:21] ok (0.0318s)
[00:06:21] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_ball_tree.py:144: RuntimeWarning: underflow encountered in exp
[00:06:21]   return norm * np.exp(-0.5 * (d * d) / (h * h)).sum(-1)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 0, True) ... 
[00:06:21] ok (0.0023s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 0, False) ... 
[00:06:21] ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 0, True) ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 0, False) ... 
[00:06:21] ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0017s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0018s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0017s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.01, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0017s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 0, True) ... 
[00:06:21] ok (0.0041s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 0, False) ... 
[00:06:21] ok (0.0041s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 0, True) ... 
[00:06:21] ok (0.0037s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 0, False) ... 
[00:06:21] ok (0.0040s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0027s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 0.1, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0025s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 0, True) ... 
[00:06:21] ok (0.0040s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 0, False) ... 
[00:06:21] ok (0.0042s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 0, True) ... 
[00:06:21] ok (0.0041s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 0, False) ... 
[00:06:21] ok (0.0042s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0027s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('gaussian', 1, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0028s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 0, True) ... 
[00:06:21] ok (0.0024s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 0, False) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 0, True) ... 
[00:06:21] ok (0.0023s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 0, False) ... 
[00:06:21] ok (0.0025s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0022s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0022s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.01, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 0, True) ... 
[00:06:21] ok (0.0023s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 0, False) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 0, True) ... 
[00:06:21] ok (0.0024s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 0, False) ... 
[00:06:21] ok (0.0029s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0023s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0025s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0024s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 0.1, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0023s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 0, True) ... 
[00:06:21] ok (0.0039s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 0, False) ... 
[00:06:21] ok (0.0038s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 0, True) ... 
[00:06:21] ok (0.0039s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 0, False) ... 
[00:06:21] ok (0.0034s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0035s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0030s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0029s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('tophat', 1, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0026s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 0, True) ... 
[00:06:21] ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 0, False) ... 
[00:06:21] ok (0.0022s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 0, True) ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 0, False) ... 
[00:06:21] ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, True) ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, False) ... 
[00:06:21] ok (0.0021s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, True) ... 
[00:06:21] ok (0.0019s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, False) ... 
[00:06:21] ok (0.0022s)
[00:06:21] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 0, True) ... 
[00:06:22] ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 0, False) ... 
[00:06:22] ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 0, True) ... 
[00:06:22] ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 0, False) ... 
[00:06:22] ok (0.0026s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0026s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0029s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 0, True) ... 
[00:06:22] ok (0.0047s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 0, False) ... 
[00:06:22] ok (0.0043s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 0, True) ... 
[00:06:22] ok (0.0043s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 0, False) ... 
[00:06:22] ok (0.0046s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0039s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0038s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0036s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('epanechnikov', 1, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0038s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 0, True) ... 
[00:06:22] ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 0, False) ... 
[00:06:22] ok (0.0026s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 0, True) ... 
[00:06:22] ok (0.0023s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 0, False) ... 
[00:06:22] ok (0.0023s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0013s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0014s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0014s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.01, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0014s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 0, True) ... 
[00:06:22] ok (0.0032s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 0, False) ... 
[00:06:22] ok (0.0033s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 0, True) ... 
[00:06:22] ok (0.0032s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 0, False) ... 
[00:06:22] ok (0.0033s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0020s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0021s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 0.1, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 0, True) ... 
[00:06:22] ok (0.0033s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 0, False) ... 
[00:06:22] ok (0.0033s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 0, True) ... 
[00:06:22] ok (0.0033s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 0, False) ... 
[00:06:22] ok (0.0035s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0021s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0020s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0021s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('exponential', 1, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0023s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 0, True) ... 
[00:06:22] ok (0.0020s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 0, False) ... 
[00:06:22] ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 0, True) ... 
[00:06:22] ok (0.0019s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 0, False) ... 
[00:06:22] ok (0.0020s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0020s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0019s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.01, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0019s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 0, True) ... 
[00:06:22] ok (0.0027s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 0, False) ... 
[00:06:22] ok (0.0026s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 0, True) ... 
[00:06:22] ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 0, False) ... 
[00:06:22] ok (0.0028s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 1e-05, True) ... 
[00:06:22] ok (0.0030s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 1e-06, 1e-05, False) ... 
[00:06:22] ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 1e-05, True) ... 
[00:06:22] ok (0.0026s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 0.1, 0.01, 1e-05, False) ... 
[00:06:22] ok (0.0027s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 0, True) ... 
[00:06:22] ok (0.0041s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 0, False) ... 
[00:06:22] ok (0.0046s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 0, True) ... 
[00:06:22] ok (0.0042s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 0, False) ... ok (0.0047s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 1e-05, True) ... ok (0.0035s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 1e-06, 1e-05, False) ... ok (0.0036s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 1e-05, True) ... ok (0.0034s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('linear', 1, 0.01, 1e-05, False) ... ok (0.0035s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 0, True) ... ok (0.0019s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 0, False) ... ok (0.0020s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 0, True) ... ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 0, False) ... ok (0.0023s)
[00:06:22] sklearn.neighbors.tests.test_ball_tre
[00:06:22] e.test_ball_tree_kde('cosine', 0.01, 1e-06, 1e-05, True) ... ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 1e-06, 1e-05, False) ... ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 1e-05, True) ... ok (0.0022s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.01, 0.01, 1e-05, False) ... ok (0.0019s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 0, True) ... ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 0, False) ... ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 0, True) ... ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 0, False) ... ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1e-06, 1e-05, True) ... ok (0.0023s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 1
[00:06:22] e-06, 1e-05, False) ... ok (0.0024s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 1e-05, True) ... ok (0.0025s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 0.1, 0.01, 1e-05, False) ... ok (0.0023s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 0, True) ... ok (0.0049s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 0, False) ... ok (0.0057s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 0, True) ... ok (0.0060s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 0, False) ... ok (0.0055s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 1e-05, True) ... ok (0.0049s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 1e-06, 1e-05, False) ... ok (0.0045s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 1e-05, True) ... ok (0.0050s)
[00:06:22] sklearn.neighbors.
[00:06:22] tests.test_ball_tree.test_ball_tree_kde('cosine', 1, 0.01, 1e-05, False) ... ok (0.0038s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_gaussian_kde ... C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_ball_tree.py:199: RuntimeWarning: underflow encountered in exp
[00:06:22]   dens_bt = bt.kernel_density(x_out[:, None], h) / n_samples
[00:06:22] C:\Python27\lib\site-packages\scipy\stats\kde.py:221: RuntimeWarning: underflow encountered in exp
[00:06:22]   result[i] = sum(exp(-energy), axis=0)
[00:06:22] ok (0.0191s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... ok (0.0029s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... ok (0.0026s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle(0,) ... ok (0.0075s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pickle(1,) ... ok (0.0068s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_ball_tree_pick
[00:06:22] le(2,) ... ok (0.0067s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_neighbors_heap ... ok (0.0027s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_node_heap ... ok (0.0008s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_simultaneous_sort ... ok (0.0015s)
[00:06:22] sklearn.neighbors.tests.test_ball_tree.test_query_haversine ... 
[00:06:22] ok (0.0030s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('chebyshev', {}, array([[ 0.53861588,  0.45094267,  0.28419442,  0.41701564,  0.69508182, ... 
[00:06:22] ok (0.0278s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('euclidean', {}, array([[ 0.67507694,  0.64211239,  0.37730269,  0.63475751,  0.9096805 , ... 
[00:06:22] ok (0.0292s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('wminkowski', {'p': 1, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.51149072,  0.42978945,  0.28691315,  0.31414856,  0.67822857, ... 
[00:06:22] ok (0.0370s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('wminkowski', {'p': 1.5, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.35478506,  0.34649572,  0.21080154,  0.22142038,  0.53671639, ... 
[00:06:22] ok (0.0375s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('wminkowski', {'p': 3, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.26214981,  0.3151016 ,  0.16585854,  0.16045352,  0.48619498, ... 
[00:06:22] ok (0.0368s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('canberra', {}, array([[ 1.45964409,  1.25116805,  0.56385105,  1.46151151,  2.11940325, ... 
[00:06:22] ok (0.0386s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('hamming', {}, array([[ 1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:06:22] ok (0.0245s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 1}, array([[ 1.21796151,  0.99804582,  0.64796144,  1.09320258,  1.49914561, ... 
[00:06:22] ok (0.0388s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 1.5}, array([[ 0.8092389 ,  0.73433834,  0.44607985,  0.75978393,  1.06004733, ... 
[00:06:22] ok (0.0405s)
[00:06:22] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 2}, array([[ 0.67507694,  0.64211239,  0.37730269,  0.63475751,  0.9096805 , ... 
[00:06:23] ok (0.0307s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('minkowski', {'p': 3}, array([[ 0.58384805,  0.56795898,  0.32594322,  0.53204405,  0.79637583, ... 
[00:06:23] ok (0.0212s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('cityblock', {}, array([[ 1.21796151,  0.99804582,  0.64796144,  1.09320258,  1.49914561, ... 
[00:06:23] ok (0.0302s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('seuclidean', {'V': array([ 0.22741463,  0.25435648,  0.05802916,  0.43441663])}, array([[ 2.37482514,  1.1721197 ,  1.26879784,  1.66071271,  1.85983097, ... 
[00:06:23] ok (0.0379s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('mahalanobis', {'VI': array([[ 0.80314541,  0.98494408,  0.59389881,  1.16113843], ... 
[00:06:23] ok (0.0386s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('braycurtis', {}, array([[ 0.31225657,  0.25850558,  0.13215958,  0.29289755,  0.38919585, ... 
[00:06:23] ok (0.0238s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('matching', array([[ 0.75,  0.5 ,  0.25,  0.75,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 , ... 
[00:06:23] ok (0.0350s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('jaccard', array([[ 0.75      ,  0.5       ,  0.25      ,  0.75      ,  0.5       , ... 
[00:06:23] ok (0.0362s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('dice', array([[ 0.6       ,  0.33333333,  0.14285714,  0.6       ,  0.33333333, ... 
[00:06:23] ok (0.0367s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('kulsinski', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... 
[00:06:23] ok (0.0373s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('rogerstanimoto', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... 
[00:06:23] ok (0.0375s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('russellrao', array([[ 0.75,  0.5 ,  0.25,  0.75,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 , ... 
[00:06:23] ok (0.0375s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('sokalmichener', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... 
[00:06:23] ok (0.0190s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_cdist('sokalsneath', array([[ 0.85714286,  0.66666667,  0.4       ,  0.85714286,  0.66666667, ... 
[00:06:23] ok (0.0190s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('chebyshev', {}, array([[ 0.        ,  0.34688982,  0.41484926,  0.53172732,  0.52859511, ... 
[00:06:23] ok (0.0152s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('euclidean', {}, array([[ 0.        ,  0.40997835,  0.5640201 ,  0.73274389,  0.65549553, ... 
[00:06:23] ok (0.0156s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('wminkowski', {'p': 1, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.        ,  0.21197555,  0.43461091,  0.43558715,  0.37123525, ... 
[00:06:23] ok (0.0162s)
[00:06:23] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('wminkowski', {'p': 1.5, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.        ,  0.13471566,  0.31498027,  0.30704769,  0.24525516, ... 
[00:06:24] ok (0.0156s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('wminkowski', {'p': 3, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}, array([[ 0.        ,  0.08691326,  0.24582898,  0.2276954 ,  0.1766636 , ... 
[00:06:24] ok (0.0165s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('canberra', {}, array([[ 0.        ,  0.57984003,  0.72664541,  1.65888213,  1.36160847, ... 
[00:06:24] ok (0.0150s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('hamming', {}, array([[ 0.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1.,  1., ... 
[00:06:24] ok (0.0260s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 1}, array([[ 0.        ,  0.70651994,  0.95154703,  1.21911953,  1.14654793, ... 
[00:06:24] ok (0.0142s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 1.5}, array([[ 0.        ,  0.48135148,  0.66512238,  0.85934453,  0.77585798, ... 
[00:06:24] ok (0.0146s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 2}, array([[ 0.        ,  0.40997835,  0.5640201 ,  0.73274389,  0.65549553, ... 
[00:06:24] ok (0.0144s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('minkowski', {'p': 3}, array([[ 0.        ,  0.36478684,  0.48581161,  0.63461015,  0.57396051, ... 
[00:06:24] ok (0.0150s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('cityblock', {}, array([[ 0.        ,  0.70651994,  0.95154703,  1.21911953,  1.14654793, ... 
[00:06:24] ok (0.0145s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('seuclidean', {'V': array([ 0.22741463,  0.25435648,  0.05802916,  0.43441663])}, array([[ 0.        ,  0.91374016,  1.34363768,  2.35165824,  1.43398969, ... 
[00:06:24] ok (0.0148s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('mahalanobis', {'VI': array([[ 0.80314541,  0.98494408,  0.59389881,  1.16113843], ... 
[00:06:24] ok (0.0158s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('braycurtis', {}, array([[ 0.        ,  0.14686859,  0.1873355 ,  0.30002036,  0.23338654, ... 
[00:06:24] ok (0.0146s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('matching', array([[ 0.  ,  0.5 ,  0.25,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 ,  0.5 , ... 
[00:06:24] ok (0.0152s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('jaccard', array([[ 0.        ,  0.5       ,  0.25      ,  0.5       ,  0.25      , ... 
[00:06:24] ok (0.0150s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('dice', array([[ 0.        ,  0.33333333,  0.14285714,  0.33333333,  0.14285714, ... 
[00:06:24] ok (0.0349s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('kulsinski', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... 
[00:06:24] ok (0.0277s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('rogerstanimoto', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... 
[00:06:24] ok (0.0289s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('russellrao', array([[ 0.  ,  0.5 ,  0.25,  0.5 ,  0.25,  0.25,  0.5 ,  0.5 ,  0.5 , ... 
[00:06:24] ok (0.0221s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('sokalmichener', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... 
[00:06:24] ok (0.0216s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pdist('sokalsneath', array([[ 0.        ,  0.66666667,  0.4       ,  0.66666667,  0.4       , ... 
[00:06:24] ok (0.0314s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('chebyshev', {}) ... 
[00:06:24] ok (0.0015s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('euclidean', {}) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('wminkowski', {'p': 1, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}) ... 
[00:06:24] ok (0.0034s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('wminkowski', {'p': 1.5, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}) ... 
[00:06:24] ok (0.0034s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('wminkowski', {'p': 3, 'w': array([ 0.31179588,  0.69634349,  0.37775184,  0.17960368])}) ... 
[00:06:24] ok (0.0034s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('canberra', {}) ... 
[00:06:24] ok (0.0011s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('hamming', {}) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('minkowski', {'p': 1}) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('minkowski', {'p': 1.5}) ... 
[00:06:24] ok (0.0015s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('minkowski', {'p': 2}) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('cityblock', {}) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('seuclidean', {'V': array([ 0.22741463,  0.25435648,  0.05802916,  0.43441663])}) ... 
[00:06:24] ok (0.0022s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('mahalanobis', {'VI': array([[ 0.80314541,  0.98494408,  0.59389881,  1.16113843], ... 
[00:06:24] ok (0.0031s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('braycurtis', {}) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('matching',) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('jaccard',) ... 
[00:06:24] ok (0.0014s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('dice',) ... 
[00:06:24] ok (0.0014s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('kulsinski',) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('rogerstanimoto',) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('russellrao',) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('sokalmichener',) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.TestMetrics.test_pickle('sokalsneath',) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.test_haversine_metric ... 
[00:06:24] ok (0.0016s)
[00:06:24] sklearn.neighbors.tests.test_dist_metrics.test_pyfunc_metric ... 
[00:06:24] ok (0.0025s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'chebyshev', {}) ... 
[00:06:24] ok (0.0014s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'chebyshev', {}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'chebyshev', {}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'chebyshev', {}) ... 
[00:06:24] ok (0.0006s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'chebyshev', {}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'chebyshev', {}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'chebyshev', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'chebyshev', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'chebyshev', {}) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'chebyshev', {}) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'chebyshev', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'chebyshev', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'euclidean', {}) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'euclidean', {}) ... 
[00:06:24] ok (0.0011s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'euclidean', {}) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'euclidean', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'euclidean', {}) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'euclidean', {}) ... 
[00:06:24] ok (0.0011s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'euclidean', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'euclidean', {}) ... 
[00:06:24] ok (0.0006s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'euclidean', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'euclidean', {}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'euclidean', {}) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'euclidean', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'manhattan', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'manhattan', {}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'manhattan', {}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'manhattan', {}) ... 
[00:06:24] ok (0.0006s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'manhattan', {}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'manhattan', {}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'manhattan', {}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'manhattan', {}) ... 
[00:06:24] ok (0.0006s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'manhattan', {}) ... 
[00:06:24] ok (0.0011s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'manhattan', {}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'manhattan', {}) ... 
[00:06:24] ok (0.0011s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'manhattan', {}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 1, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 1, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 1, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 1, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 3, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 3, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 3, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 3, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0007s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, True, 5, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0010s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(True, False, 5, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0009s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, True, 5, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query(False, False, 5, 'minkowski', {'p': 3}) ... 
[00:06:24] ok (0.0008s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius ... 
[00:06:24] ok (0.0299s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_query_radius_distance ... 
[00:06:24] ok (0.0329s)
[00:06:24] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_kd_tree.py:95: RuntimeWarning: underflow encountered in exp
[00:06:24]   return norm * np.exp(-0.5 * (d * d) / (h * h)).sum(-1)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 0, True) ... 
[00:06:24] ok (0.0019s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 0, False) ... 
[00:06:24] ok (0.0017s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 0, True) ... 
[00:06:24] ok (0.0016s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 0, False) ... 
[00:06:24] ok (0.0019s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 1e-05, True) ... 
[00:06:24] ok (0.0013s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 1e-06, 1e-05, False) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 1e-05, True) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.01, 0.01, 1e-05, False) ... 
[00:06:24] ok (0.0012s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 0, True) ... 
[00:06:24] ok (0.0037s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 0, False) ... 
[00:06:24] ok (0.0044s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 0, True) ... 
[00:06:24] ok (0.0033s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 0, False) ... 
[00:06:24] ok (0.0034s)
[00:06:24] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 1e-06, 1e-05, False) ... ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 1e-05, True) ... ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 0.1, 0.01, 1e-05, False) ... ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 0, True) ... ok (0.0038s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 0, False) ... ok (0.0039s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 0, True) ... ok (0.0035s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 0, False) ... ok (0.0041s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 1e-05, True) ... ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 1e-06, 1e-05, False) ... ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('g
[00:06:25] aussian', 1, 0.01, 1e-05, True) ... ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('gaussian', 1, 0.01, 1e-05, False) ... ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 0, True) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 0, False) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 0, True) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 0, False) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 1e-05, True) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 1e-06, 1e-05, False) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 1e-05, True) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.01, 0.01, 1e-05, False) ... ok (0.0018s)
[00:06:25] sklearn.neighbors.t
[00:06:25] ests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 0, True) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 0, False) ... ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 0, True) ... ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 0, False) ... ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 1e-05, True) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 1e-06, 1e-05, False) ... ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 1e-05, True) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 0.1, 0.01, 1e-05, False) ... ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 0, True) ... ok (0.0041s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 0, False) ... ok (0.0035s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 0, True) ... ok (0.0041s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 0, False) ... ok (0.0033s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 1e-05, True) ... ok (0.0033s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 1e-06, 1e-05, False) ... ok (0.0030s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 1e-05, True) ... ok (0.0034s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('tophat', 1, 0.01, 1e-05, False) ... ok (0.0029s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 0, True) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 0, False) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 0, True) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.0
[00:06:25] 1, 0.01, 0, False) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, True) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 1e-06, 1e-05, False) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, True) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.01, 0.01, 1e-05, False) ... ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 0, True) ... ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 0, False) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 0, True) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 0, False) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, True) 
[00:06:25] ... ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 1e-06, 1e-05, False) ... ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, True) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 0.1, 0.01, 1e-05, False) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 0, True) ... ok (0.0043s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 0, False) ... ok (0.0047s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 0, True) ... ok (0.0048s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 0, False) ... ok (0.0047s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 1e-05, True) ... ok (0.0039s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 1e-06, 1e-05, False) ... ok (0.0038s)
[00:06:25] sklearn.neighbor
[00:06:25] s.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 1e-05, True) ... ok (0.0038s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('epanechnikov', 1, 0.01, 1e-05, False) ... ok (0.0038s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 0, True) ... ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 0, False) ... ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 0, True) ... ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 0, False) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 1e-05, True) ... ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 1e-06, 1e-05, False) ... ok (0.0015s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.01, 0.01, 1e-05, True) ... ok (0.0013s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd
[00:06:25] _tree_kde('exponential', 0.01, 0.01, 1e-05, False) ... ok (0.0013s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 0, True) ... 
[00:06:25] ok (0.0048s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 0, False) ... 
[00:06:25] ok (0.0037s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 0, True) ... 
[00:06:25] ok (0.0037s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 0, False) ... 
[00:06:25] ok (0.0041s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0028s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 0.1, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 0, True) ... 
[00:06:25] ok (0.0035s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 0, False) ... 
[00:06:25] ok (0.0039s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 0, True) ... 
[00:06:25] ok (0.0035s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 0, False) ... 
[00:06:25] ok (0.0037s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('exponential', 1, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 0, True) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 0, False) ... 
[00:06:25] ok (0.0018s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 0, True) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 0, False) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.01, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 0, True) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 0, False) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 0, True) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 0, False) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 0.1, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 0, True) ... 
[00:06:25] ok (0.0046s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 0, False) ... 
[00:06:25] ok (0.0047s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 0, True) ... 
[00:06:25] ok (0.0045s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 0, False) ... 
[00:06:25] ok (0.0047s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0190s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0051s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0040s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('linear', 1, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0038s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 0, True) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 0, False) ... 
[00:06:25] ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 0, True) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 0, False) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.01, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 0, True) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 0, False) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 0, True) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 0, False) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 0.1, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 0, True) ... 
[00:06:25] ok (0.0060s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 0, False) ... 
[00:06:25] ok (0.0061s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 0, True) ... 
[00:06:25] ok (0.0057s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 0, False) ... 
[00:06:25] ok (0.0050s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 1e-05, True) ... 
[00:06:25] ok (0.0044s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 1e-06, 1e-05, False) ... 
[00:06:25] ok (0.0043s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 1e-05, True) ... 
[00:06:25] ok (0.0043s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_kde('cosine', 1, 0.01, 1e-05, False) ... 
[00:06:25] ok (0.0041s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_gaussian_kde ... 
[00:06:25] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_kd_tree.py:149: RuntimeWarning: underflow encountered in exp
[00:06:25]   dens_kdt = kdt.kernel_density(x_out[:, None], h) / n_samples
[00:06:25] ok (0.0154s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_two_point(array([ 0.        ,  0.11111111,  0.22222222,  0.33333333,  0.44444444, ... 
[00:06:25] ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle(0,) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle(1,) ... 
[00:06:25] ok (0.0017s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_kd_tree_pickle(2,) ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_neighbors_heap ... 
[00:06:25] ok (0.0016s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_node_heap ... 
[00:06:25] ok (0.0005s)
[00:06:25] sklearn.neighbors.tests.test_kd_tree.test_simultaneous_sort ... 
[00:06:25] ok (0.0010s)
[00:06:25] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_kde.py:17: RuntimeWarning: underflow encountered in exp
[00:06:25]   return norm * np.exp(-0.5 * (d * d) / (h * h)).sum(-1)
[00:06:25] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_kde.py:17: RuntimeWarning: underflow encountered in multiply
[00:06:25]   return norm * np.exp(-0.5 * (d * d) / (h * h)).sum(-1)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 0) ... 
[00:06:25] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_kde.py:46: RuntimeWarning: underflow encountered in exp
[00:06:25]   assert_allclose(np.exp(log_dens), dens_true,
[00:06:25] C:\Python27\lib\site-packages\numpy\core\numeric.py:2222: RuntimeWarning: underflow encountered in multiply
[00:06:25]   r = all(less_equal(abs(x - y), atol + rtol * abs(y)))
[00:06:25] C:\Python27\lib\site-packages\sklearn\neighbors\tests\test_kde.py:48: RuntimeWarning: underflow encountered in exp
[00:06:25]   assert_allclose(np.exp(kde.score(Y)),
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0031s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0031s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0028s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0031s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0034s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0034s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 0) ... 
[00:06:25] ok (0.0031s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 0) ... 
[00:06:25] ok (0.0032s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0030s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0028s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('gaussian', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0029s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 0) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 1e-05) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 1e-06, 1e-05) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 1e-05) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 0.1, 0.01, 1e-05) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 0) ... ok (0.0050s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 0) ... ok (0.0049s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 0) ... ok (0.0048s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 0) ... ok (0.0049s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 1e-06, 1e-05) ... ok (0.0051s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_
[00:06:25] density('tophat', 1, 1e-06, 1e-05) ... ok (0.0048s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0057s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('tophat', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0048s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0051s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0051s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 0) ... 
[00:06:25] ok (0.0052s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 0) ... 
[00:06:25] ok (0.0051s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0054s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0054s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0052s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('epanechnikov', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0052s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0029s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0033s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0033s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0032s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0032s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0030s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0028s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0035s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0034s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 0) ... 
[00:06:25] ok (0.0029s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 0) ... 
[00:06:25] ok (0.0028s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0029s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0030s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0025s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('exponential', 1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.01, 0.01, 1e-05) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 0) ... 
[00:06:25] ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 0) ... 
[00:06:25] ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 1e-06, 1e-05) ... 
[00:06:25] ok (0.0026s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 0.1, 0.01, 1e-05) ... 
[00:06:25] ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0054s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 0) ... 
[00:06:25] ok (0.0050s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 0) ... ok (0.0049s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 0) ... ok (0.0052s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 1e-05) ... ok (0.0048s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 1e-06, 1e-05) ... ok (0.0049s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 1e-05) ... ok (0.0050s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('linear', 1, 0.01, 1e-05) ... ok (0.0050s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 0) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 0) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 0) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 0) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_den
[00:06:25] sity('cosine', 0.01, 1e-06, 1e-05) ... ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 1e-06, 1e-05) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 1e-05) ... ok (0.0020s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.01, 0.01, 1e-05) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 0) ... ok (0.0021s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 0) ... ok (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 0) ... ok (0.0024s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 0) ... ok (0.0027s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 1e-05) ... ok (0.0028s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 1e-06, 1e-05) ... ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 1e-05) ... ok 
[00:06:25] (0.0022s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 0.1, 0.01, 1e-05) ... ok (0.0023s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 0) ... ok (0.0060s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 0) ... ok (0.0069s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 0) ... ok (0.0054s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 0) ... ok (0.0061s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 1e-05) ... ok (0.0064s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 1e-06, 1e-05) ... ok (0.0058s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 1e-05) ... ok (0.0058s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density('cosine', 1, 0.01, 1e-05) ... ok (0.0053s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kernel_density_sampling ... ok (0.0033s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kde_algorithm_metric_choice ... 
[00:06:25] ok (0.0044s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kde_score ... ok (0.0001s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kde_badargs ... ok (0.0001s)
[00:06:25] sklearn.neighbors.tests.test_kde.test_kde_pipeline_gridsearch ... 
[00:06:25] ok (0.0933s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_classification_toy ... 
[00:06:25] ok (0.0068s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_precomputed ... 
[00:06:25] C:\Python27\lib\site-packages\sklearn\neighbors\nearest_centroid.py:138: UserWarning: Averaging for metrics other than euclidean and manhattan not supported. The average is set to be the mean.
[00:06:25]   warnings.warn("Averaging for metrics other than "
[00:06:25] ok (0.0009s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_iris ... 
[00:06:25] ok (0.0013s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_iris_shrinkage ... 
[00:06:25] ok (0.0039s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_pickle ... 
[00:06:25] ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_shrinkage_threshold_decoded_y ... 
[00:06:25] ok (0.0011s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_predict_translated_data ... 
[00:06:25] ok (0.0015s)
[00:06:25] sklearn.neighbors.tests.test_nearest_centroid.test_manhattan_metric ... 
[00:06:25] ok (0.0019s)
[00:06:25] sklearn.neighbors.tests.test_neighbors.test_unsupervised_kneighbors ... 
[00:06:26] ok (0.0185s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_unsupervised_inputs ... 
[00:06:26] ok (0.0024s)
[00:06:26] Tests unsupervised NearestNeighbors with a distance matrix. ... 
[00:06:26] ok (0.0115s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_precomputed_cross_validation ... 
[00:06:26] ok (0.0679s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_unsupervised_radius_neighbors ... 
[00:06:26] ok (0.0163s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier ... 
[00:06:26] ok (0.0224s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_float_labels ... 
[00:06:26] ok (0.0016s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_predict_proba ... 
[00:06:26] ok (0.0019s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier ... 
[00:06:26] ok (0.0673s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_when_no_neighbors ... 
[00:06:26] ok (0.0383s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_outlier_labeling ... 
[00:06:26] ok (0.0190s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_classifier_zero_distance ... 
[00:06:26] ok (0.0148s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_neighbors_regressors_zero_distance ... 
[00:06:26] ok (0.0122s)
[00:06:26] Test whether points lying on boundary are handled consistently ... 
[00:06:26] ok (0.0014s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsClassifier_multioutput ... 
[00:06:26] ok (0.3370s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_classifier_sparse ... 
[00:06:26] ok (0.0721s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_KNeighborsClassifier_multioutput ... 
[00:06:26] ok (0.1072s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor ... 
[00:06:26] ok (0.0070s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_KNeighborsRegressor_multioutput_uniform_weight ... 
[00:06:26] ok (0.0092s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_multioutput ... 
[00:06:26] ok (0.0070s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_regressor ... 
[00:06:26] ok (0.0098s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput_with_uniform_weight ... 
[00:06:26] ok (0.0103s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_RadiusNeighborsRegressor_multioutput ... 
[00:06:26] ok (0.0099s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_regressor_sparse ... 
[00:06:26] ok (0.0522s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_neighbors_iris ... 
[00:06:26] ok (0.0200s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_neighbors_digits ... 
[00:06:26] ok (0.0294s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph ... 
[00:06:26] ok (0.0108s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_kneighbors_graph_sparse ... 
[00:06:26] ok (0.0286s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph ... 
[00:06:26] ok (0.0042s)
[00:06:26] sklearn.neighbors.tests.test_neighbors.test_radius_neighbors_graph_sparse ... 
[00:06:27] ok (0.0281s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_neighbors_badargs ... 
[00:06:27] ok (0.0097s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_neighbors_metrics ... 
[00:06:27] ok (0.0122s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_callable_metric ... 
[00:06:27] ok (0.0067s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_metric_params_interface ... ok (0.0016s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_predict_sparse_ball_kd_tree ... ok (0.0013s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_non_euclidean_kneighbors ... ok (0.0141s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_train_is_not_query ... ok (0.0079s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_X_None ... ok (0.0087s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_k_and_radius_neighbors_duplicates ... ok (0.0124s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_include_self_neighbors_graph ... ok (0.0078s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel('ball_tree',) ... 
[00:06:27] ok (0.4221s)
[00:06:27] sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel('brute',) ... 
[00:06:31] ok (3.9844s)
[00:06:31] sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel('kd_tree',) ... 
[00:06:31] ok (0.4220s)
[00:06:31] sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel('auto',) ... 
[00:06:32] ok (0.4213s)
[00:06:32] sklearn.neighbors.tests.test_neighbors.test_dtype_convert ... 
[00:06:32] ok (0.0019s)
[00:06:32] sklearn.neural_network.tests.test_mlp.test_alpha ... 
[00:06:32] C:\Python27\lib\site-packages\sklearn\neural_network\multilayer_perceptron.py:560: ConvergenceWarning: Stochastic Optimizer: Maximum iterations reached and the optimization hasn't converged yet.
[00:06:32]   % (), ConvergenceWarning)
[00:06:32] ok (0.2265s)
[00:06:32] sklearn.neural_network.tests.test_mlp.test_fit ... 
[00:06:32] ok (0.0039s)
[00:06:32] sklearn.neural_network.tests.test_mlp.test_gradient ... 
[00:06:33] ok (0.4300s)
[00:06:33] sklearn.neural_network.tests.test_mlp.test_lbfgs_classification ... 
[00:06:33] ok (0.1893s)
[00:06:33] sklearn.neural_network.tests.test_mlp.test_lbfgs_regression ... 
[00:06:33] ok (0.4984s)
[00:06:33] sklearn.neural_network.tests.test_mlp.test_learning_rate_warmstart ... 
[00:06:33] ok (0.0054s)
[00:06:33] sklearn.neural_network.tests.test_mlp.test_multilabel_classification ... 
[00:06:34] ok (0.2822s)
[00:06:34] sklearn.neural_network.tests.test_mlp.test_multioutput_regression ... 
[00:06:34] ok (0.2906s)
[00:06:34] sklearn.neural_network.tests.test_mlp.test_partial_fit_classes_error ... 
[00:06:34] ok (0.0018s)
[00:06:34] sklearn.neural_network.tests.test_mlp.test_partial_fit_classification ... 
[00:06:35] ok (0.7759s)
[00:06:35] sklearn.neural_network.tests.test_mlp.test_partial_fit_regression ... 
[00:06:35] ok (0.4487s)
[00:06:35] sklearn.neural_network.tests.test_mlp.test_partial_fit_errors ... 
[00:06:35] ok (0.0011s)
[00:06:35] sklearn.neural_network.tests.test_mlp.test_params_errors ... 
[00:06:35] ok (0.0003s)
[00:06:35] sklearn.neural_network.tests.test_mlp.test_predict_proba_binary ... 
[00:06:35] ok (0.0937s)
[00:06:35] sklearn.neural_network.tests.test_mlp.test_predict_proba_multi ... 
[00:06:35] ok (0.0819s)
[00:06:35] sklearn.neural_network.tests.test_mlp.test_sparse_matrices ... 
[00:06:36] ok (0.3278s)
[00:06:36] sklearn.neural_network.tests.test_mlp.test_tolerance ... 
[00:06:36] ok (0.0022s)
[00:06:36] sklearn.neural_network.tests.test_mlp.test_verbose_sgd ... 
[00:06:36] ok (0.0023s)
[00:06:36] sklearn.neural_network.tests.test_mlp.test_early_stopping ... 
[00:06:36] ok (0.0059s)
[00:06:36] sklearn.neural_network.tests.test_mlp.test_adaptive_learning_rate ... 
[00:06:36] ok (0.0064s)
[00:06:36] sklearn.neural_network.tests.test_rbm.test_fit ... 
[00:06:36] ok (0.5643s)
[00:06:36] sklearn.neural_network.tests.test_rbm.test_partial_fit ... 
[00:06:36] ok (0.3737s)
[00:06:36] sklearn.neural_network.tests.test_rbm.test_transform ... 
[00:06:36] ok (0.0157s)
[00:06:36] sklearn.neural_network.tests.test_rbm.test_small_sparse ... 
[00:06:37] ok (0.0130s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_small_sparse_partial_fit ... 
[00:06:37] ok (0.0105s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_sample_hiddens ... 
[00:06:37] ok (0.0123s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_fit_gibbs ... 
[00:06:37] ok (0.0036s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_fit_gibbs_sparse ... 
[00:06:37] ok (0.0239s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_gibbs_smoke ... 
[00:06:37] ok (0.5259s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_score_samples ... 
[00:06:37] ok (0.0076s)
[00:06:37] sklearn.neural_network.tests.test_rbm.test_rbm_verbose ... 
[00:06:38] ok (0.4787s)
[00:06:38] sklearn.neural_network.tests.test_rbm.test_sparse_and_verbose ... 
[00:06:38] ok (0.0025s)
[00:06:38] sklearn.neural_network.tests.test_stochastic_optimizers.test_base_optimizer ... 
[00:06:38] ok (0.0001s)
[00:06:38] sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_no_momentum ... 
[00:06:38] ok (0.0017s)
[00:06:38] sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_momentum ... 
[00:06:38] ok (0.0011s)
[00:06:38] sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_trigger_stopping ... 
[00:06:38] ok (0.0002s)
[00:06:38] sklearn.neural_network.tests.test_stochastic_optimizers.test_sgd_optimizer_nesterovs_momentum ... 
[00:06:38] ok (0.0013s)
[00:06:38] sklearn.neural_network.tests.test_stochastic_optimizers.test_adam_optimizer ... 
[00:06:38] ok (0.0046s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_polynomial_features ... 
[00:06:38] ok (0.0017s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_polynomial_feature_names ... 
[00:06:38] ok (0.0007s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_standard_scaler_1d ... 
[00:06:38] ok (0.0045s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scale_1d ... 
[00:06:38] ok (0.0012s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scaler_2d_arrays ... 
[00:06:38] ok (0.0024s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_handle_zeros_in_scale ... 
[00:06:38] ok (0.0018s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_minmax_scaler_partial_fit ... 
[00:06:38] ok (0.1771s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_deprecation_minmax_scaler ... 
[00:06:38] C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:70: DeprecationWarning: Function data_range is deprecated; Attribute data_range will be removed in 0.19. Use ``data_range_`` instead
[00:06:38]   warnings.warn(msg, category=DeprecationWarning)
[00:06:38] C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:70: DeprecationWarning: Function data_min is deprecated; Attribute data_min will be removed in 0.19. Use ``data_min_`` instead
[00:06:38]   warnings.warn(msg, category=DeprecationWarning)
[00:06:38] ok (0.0054s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit ... 
[00:06:38] ok (0.2206s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_standard_scaler_partial_fit_numerical_stability ... 
[00:06:38] ok (0.0771s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_partial_fit_sparse_input ... 
[00:06:38] ok (0.0014s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_standard_scaler_trasform_with_partial_fit ... 
[00:06:38] C:\Python27\lib\site-packages\sklearn\preprocessing\tests\test_data.py:479: RuntimeWarning: underflow encountered in nextafter
[00:06:38]   epsilon = np.nextafter(0, 1)
[00:06:38] ok (0.1097s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_min_max_scaler_iris ... 
[00:06:38] ok (0.0026s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_min_max_scaler_zero_variance_features ... 
[00:06:38] ok (0.0015s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_minmax_scale_axis1 ... 
[00:06:38] ok (0.0006s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_min_max_scaler_1d ... 
[00:06:38] ok (0.0028s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scaler_without_centering ... 
[00:06:38] ok (0.0045s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scaler_int ... 
[00:06:38] ok (0.0127s)
[00:06:38] Test numerical stability of scaling ... 
[00:06:38] SKIP: Test skipped on 32bit platforms.
[00:06:38] sklearn.preprocessing.tests.test_data.test_scaler_without_copy ... 
[00:06:38] ok (0.0016s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scale_sparse_with_mean_raise_exception ... 
[00:06:38] ok (0.0018s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scale_input_finiteness_validation ... 
[00:06:38] ok (0.0004s)
[00:06:38] Test robust scaling of 2d array along first axis ... 
[00:06:38] ok (0.0009s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_robust_scaler_transform_one_row_csr ... 
[00:06:38] ok (0.0013s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_robust_scaler_iris ... 
[00:06:38] ok (0.0010s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_scale_function_without_centering ... 
[00:06:38] ok (0.0028s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_robust_scale_axis1 ... 
[00:06:38] ok (0.0008s)
[00:06:38] Check RobustScaler on toy data with zero variance features ... 
[00:06:38] ok (0.0008s)
[00:06:38] Check MaxAbsScaler on toy data with zero variance features ... 
[00:06:38] ok (0.0037s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_maxabs_scaler_large_negative_value ... 
[00:06:38] ok (0.0004s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_maxabs_scaler_transform_one_row_csr ... 
[00:06:38] ok (0.0018s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_warning_scaling_integers ... 
[00:06:38] ok (0.0070s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_maxabs_scaler_1d ... 
[00:06:38] ok (0.0024s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_maxabs_scaler_partial_fit ... 
[00:06:38] ok (0.2508s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_normalizer_l1 ... 
[00:06:38] ok (0.0044s)
[00:06:38] sklearn.preprocessing.tests.test_data.test_normalizer_l2 ... 
[00:06:39] ok (0.0051s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_normalizer_max ... 
[00:06:39] ok (0.0053s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_normalize ... 
[00:06:39] ok (0.0029s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_binarizer ... 
[00:06:39] ok (0.0034s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_center_kernel ... 
[00:06:39] ok (0.0007s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_fit_transform ... 
[00:06:39] ok (0.0010s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_deprecation_standard_scaler ... 
[00:06:39] ok (0.0022s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_add_dummy_feature ... 
[00:06:39] ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_add_dummy_feature_coo ... 
[00:06:39] ok (0.0004s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csc ... 
[00:06:39] ok (0.0006s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_add_dummy_feature_csr ... 
[00:06:39] ok (0.0009s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_one_hot_encoder_sparse ... 
[00:06:39] ok (0.0044s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_one_hot_encoder_dense ... 
[00:06:39] ok (0.0011s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_transform_selected ... 
[00:06:39] ok (0.0073s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_one_hot_encoder_categorical_features ... 
[00:06:39] ok (0.0082s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_one_hot_encoder_unknown_transform ... ok (0.0035s)
[00:06:39] sklearn.preprocessing.tests.test_data.test_fit_cold_start ... ok (0.0009s)
[00:06:39] sklearn.preprocessing.tests.test_function_transformer.test_delegate_to_func ... ok (0.0009s)
[00:06:39] sklearn.preprocessing.tests.test_function_transformer.test_np_log ... ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_function_transformer.test_kw_arg ... ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_update ... ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_function_transformer.test_kw_arg_reset ... ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_function_transformer.test_inverse_transform ... ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_shape ... C:\Python27\lib\site-packages\numpy\ma\core.py:790: RuntimeWarning: underflow encountered in multiply
[00:06:39]   return umath.absolute(a) * self.tolerance >= umath.absolute(b)
[00:06:39] ok (0.0093s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test
[00:06:39] _imputation_mean_median_only_zero ... C:\Python27\lib\site-packages\numpy\ma\core.py:790: RuntimeWarning: invalid value encountered in absolute
[00:06:39]   return umath.absolute(a) * self.tolerance >= umath.absolute(b)
[00:06:39] C:\Python27\lib\site-packages\numpy\ma\core.py:790: RuntimeWarning: invalid value encountered in greater_equal
[00:06:39]   return umath.absolute(a) * self.tolerance >= umath.absolute(b)
[00:06:39] C:\Python27\lib\site-packages\sklearn\utils\sparsefuncs.py:421: RuntimeWarning: invalid value encountered in less
[00:06:39]   n_negative = np.count_nonzero(data < 0)
[00:06:39] ok (0.0082s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_mean_median ... 
[00:06:39] C:\Python27\lib\site-packages\numpy\core\_methods.py:59: RuntimeWarning: Mean of empty slice.
[00:06:39]   warnings.warn("Mean of empty slice.", RuntimeWarning)
[00:06:39] C:\Python27\lib\site-packages\numpy\core\_methods.py:71: RuntimeWarning: invalid value encountered in double_scalars
[00:06:39]   ret = ret.dtype.type(ret / rcount)
[00:06:39] ok (0.0390s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_median_special_cases ... 
[00:06:39] ok (0.0045s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_most_frequent ... 
[00:06:39] ok (0.0114s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_pipeline_grid_search ... 
[00:06:39] ok (0.4369s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_pickle ... 
[00:06:39] ok (0.0633s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_imputation_copy ... 
[00:06:39] ok (0.0077s)
[00:06:39] sklearn.preprocessing.tests.test_imputation.test_indicator_features ... 
[00:06:39] ok (0.0269s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarizer ... 
[00:06:39] ok (0.0019s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarizer_unseen_labels ... 
[00:06:39] ok (0.0009s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarizer_set_label_encoding ... 
[00:06:39] ok (0.0012s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_encoder ... 
[00:06:39] ok (0.0009s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_encoder_fit_transform ... 
[00:06:39] ok (0.0003s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_encoder_errors ... 
[00:06:39] ok (0.0005s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_sparse_output_multilabel_binarizer ... 
[00:06:39] ok (0.0056s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer ... 
[00:06:39] ok (0.0031s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_empty_sample ... 
[00:06:39] ok (0.0005s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_unknown_class ... 
[00:06:39] ok (0.0002s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_given_classes ... 
[00:06:39] ok (0.0014s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_same_length_sequence ... 
[00:06:39] ok (0.0010s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarizer_errors ... 
[00:06:39] ok (0.0030s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_integer_labels ... 
[00:06:39] ok (0.0027s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_non_unique ... 
[00:06:39] ok (0.0004s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_multilabel_binarizer_inverse_validation ... 
[00:06:39] ok (0.0008s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_with_class_order ... 
[00:06:39] ok (0.0011s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_binary([0, 1, 0], [0, 1], 2, -1, array([[-1], ... 
[00:06:39] ok (0.0016s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_binary([0, 1, 0], [0, 1], 3, 0, array([[0], ... 
[00:06:39] ok (0.0028s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multiclass([0, 1, 2], [0, 1, 2], 2, 0, array([[ 2.,  0.,  0.], ... 
[00:06:39] ok (0.0035s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel(array([[0, 1, 0], ... 
[00:06:39] ok (0.0039s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel(<3x3 sparse matrix of type '<type 'numpy.int32'>' ... 
[00:06:39] ok (0.0035s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel(<3x3 sparse matrix of type '<type 'numpy.int32'>' ... 
[00:06:39] ok (0.0038s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel(<3x3 sparse matrix of type '<type 'numpy.int32'>' ... 
[00:06:39] ok (0.0031s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel(<3x3 sparse matrix of type '<type 'numpy.int32'>' ... 
[00:06:39] ok (0.0064s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_label_binarize_multilabel(<3x3 sparse matrix of type '<type 'numpy.int32'>' ... 
[00:06:39] ok (0.0050s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_invalid_input_label_binarize ... 
[00:06:39] ok (0.0001s)
[00:06:39] sklearn.preprocessing.tests.test_label.test_inverse_binarize_multiclass ... 
[00:06:39] ok (0.0008s)
[00:06:39] sklearn.semi_supervised.tests.test_label_propagation.test_fit_transduction ... 
[00:06:39] ok (0.0034s)
[00:06:39] sklearn.semi_supervised.tests.test_label_propagation.test_distribution ... 
[00:06:39] ok (0.0038s)
[00:06:39] sklearn.semi_supervised.tests.test_label_propagation.test_predict ... 
[00:06:39] ok (0.0044s)
[00:06:39] sklearn.semi_supervised.tests.test_label_propagation.test_predict_proba ... 
[00:06:39] ok (0.0053s)
[00:06:39] Test l1_min_c loss='squared_hinge' dense multi-class no-intercept ... 
[00:06:39] ok (0.0013s)
[00:06:39] Test l1_min_c loss='squared_hinge' dense multi-class fit-intercept ... 
[00:06:39] ok (0.0012s)
[00:06:39] Test l1_min_c loss='squared_hinge' dense two-classes no-intercept ... 
[00:06:39] ok (0.0011s)
[00:06:39] Test l1_min_c loss='squared_hinge' dense two-classes fit-intercept ... 
[00:06:39] ok (0.0011s)
[00:06:39] Test l1_min_c loss='squared_hinge' sparse multi-class no-intercept ... 
[00:06:39] ok (0.0014s)
[00:06:39] Test l1_min_c loss='squared_hinge' sparse multi-class fit-intercept ... 
[00:06:39] ok (0.0015s)
[00:06:39] Test l1_min_c loss='squared_hinge' sparse two-classes no-intercept ... 
[00:06:39] ok (0.0013s)
[00:06:39] Test l1_min_c loss='squared_hinge' sparse two-classes fit-intercept ... 
[00:06:39] ok (0.0013s)
[00:06:39] Test l1_min_c loss='log' dense multi-class no-intercept ... 
[00:06:39] ok (0.0011s)
[00:06:39] Test l1_min_c loss='log' dense multi-class fit-intercept ... 
[00:06:39] ok (0.0011s)
[00:06:39] Test l1_min_c loss='log' dense two-classes no-intercept ... 
[00:06:39] ok (0.0011s)
[00:06:39] Test l1_min_c loss='log' dense two-classes fit-intercept ... 
[00:06:39] ok (0.0011s)
[00:06:39] Test l1_min_c loss='log' sparse multi-class no-intercept ... 
[00:06:39] ok (0.0016s)
[00:06:39] Test l1_min_c loss='log' sparse multi-class fit-intercept ... 
[00:06:39] ok (0.0015s)
[00:06:39] Test l1_min_c loss='log' sparse two-classes no-intercept ... 
[00:06:39] ok (0.0014s)
[00:06:39] Test l1_min_c loss='log' sparse two-classes fit-intercept ... 
[00:06:39] ok (0.0015s)
[00:06:39] sklearn.svm.tests.test_bounds.test_l2_deprecation ... 
[00:06:39] ok (0.0028s)
[00:06:39] sklearn.svm.tests.test_bounds.test_ill_posed_min_c ... 
[00:06:39] ok (0.0006s)
[00:06:39] sklearn.svm.tests.test_bounds.test_unsupported_loss ... 
[00:06:39] ok (0.0001s)
[00:06:39] Check that sparse SVC gives the same result as SVC ... 
[00:06:40] ok (0.2997s)
[00:06:40] sklearn.svm.tests.test_sparse.test_unsorted_indices ... 
[00:06:40] ok (0.1543s)
[00:06:40] sklearn.svm.tests.test_sparse.test_svc_with_custom_kernel ... 
[00:06:40] ok (0.0025s)
[00:06:40] sklearn.svm.tests.test_sparse.test_svc_iris ... 
[00:06:40] ok (0.0192s)
[00:06:40] sklearn.svm.tests.test_sparse.test_sparse_decision_function ... 
[00:06:40] ok (0.0052s)
[00:06:40] sklearn.svm.tests.test_sparse.test_error ... 
[00:06:40] ok (0.0023s)
[00:06:40] sklearn.svm.tests.test_sparse.test_linearsvc ... 
[00:06:40] ok (0.0026s)
[00:06:40] sklearn.svm.tests.test_sparse.test_linearsvc_iris ... 
[00:06:40] ok (0.0236s)
[00:06:40] sklearn.svm.tests.test_sparse.test_weight ... 
[00:06:40] ok (0.0227s)
[00:06:40] sklearn.svm.tests.test_sparse.test_sample_weights ... 
[00:06:40] ok (0.0021s)
[00:06:40] sklearn.svm.tests.test_sparse.test_sparse_liblinear_intercept_handling ... 
[00:06:40] ok (0.0014s)
[00:06:40] Check that sparse OneClassSVM gives the same result as dense OneClassSVM ... 
[00:06:40] ok (0.0761s)
[00:06:40] sklearn.svm.tests.test_sparse.test_sparse_realdata ... 
[00:06:40] ok (0.0025s)
[00:06:40] sklearn.svm.tests.test_sparse.test_sparse_svc_clone_with_callable_kernel ... 
[00:06:40] ok (0.0039s)
[00:06:40] sklearn.svm.tests.test_sparse.test_timeout ... 
[00:06:40] ok (0.0029s)
[00:06:40] sklearn.svm.tests.test_sparse.test_consistent_proba ... C:\Python27\lib\site-packages\sklearn\svm\base.py:220: ConvergenceWarning: Solver terminated early (max_iter=1).  Consider pre-processing your data with StandardScaler or MinMaxScaler.
[00:06:40]   % self.max_iter, ConvergenceWarning)
[00:06:40] ok (0.0015s)
[00:06:40] sklearn.svm.tests.test_svm.test_libsvm_parameters ... ok (0.0008s)
[00:06:40] sklearn.svm.tests.test_svm.test_libsvm_iris ... ok (0.0045s)
[00:06:40] sklearn.svm.tests.test_svm.test_precomputed ... ok (0.0178s)
[00:06:40] sklearn.svm.tests.test_svm.test_svr ... ok (0.0492s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvr ... 
[00:06:40] ok (0.0329s)
[00:06:40] sklearn.svm.tests.test_svm.test_svr_errors ... 
[00:06:40] ok (0.0004s)
[00:06:40] sklearn.svm.tests.test_svm.test_oneclass ... 
[00:06:40] ok (0.0009s)
[00:06:40] sklearn.svm.tests.test_svm.test_oneclass_decision_function ... 
[00:06:40] ok (0.0013s)
[00:06:40] sklearn.svm.tests.test_svm.test_tweak_params ... 
[00:06:40] ok (0.0008s)
[00:06:40] sklearn.svm.tests.test_svm.test_probability ... 
[00:06:40] ok (0.0132s)
[00:06:40] sklearn.svm.tests.test_svm.test_decision_function ... 
[00:06:40] ok (0.0035s)
[00:06:40] sklearn.svm.tests.test_svm.test_decision_function_shape ... 
[00:06:40] ok (0.0061s)
[00:06:40] sklearn.svm.tests.test_svm.test_consistent_proba ... 
[00:06:40] ok (0.0030s)
[00:06:40] sklearn.svm.tests.test_svm.test_single_sample_1d ... 
[00:06:40] ok (0.0024s)
[00:06:40] sklearn.svm.tests.test_svm.test_svr_predict ... 
[00:06:40] ok (0.0037s)
[00:06:40] sklearn.svm.tests.test_svm.test_weight ... 
[00:06:40] ok (0.0076s)
[00:06:40] sklearn.svm.tests.test_svm.test_sample_weights ... 
[00:06:40] ok (0.0022s)
[00:06:40] sklearn.svm.tests.test_svm.test_auto_weight ... 
[00:06:40] C:\Python27\lib\site-packages\sklearn\metrics\classification.py:1122: UndefinedMetricWarning: F-score is ill-defined and being set to 0.0 in labels with no predicted samples.
[00:06:40]   'precision', 'predicted', average, warn_for)
[00:06:40] ok (0.0333s)
[00:06:40] sklearn.svm.tests.test_svm.test_bad_input ... 
[00:06:40] ok (0.0039s)
[00:06:40] sklearn.svm.tests.test_svm.test_sparse_precomputed ... 
[00:06:40] ok (0.0004s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvc_parameters ... 
[00:06:40] ok (0.0112s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvx_loss_penalty_deprecations ... 
[00:06:40] ok (0.0071s)
[00:06:40] sklearn.svm.tests.test_svm.test_linear_svx_uppercase_loss_penality_raises_error ... 
[00:06:40] ok (0.0005s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvc ... 
[00:06:40] ok (0.0019s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvc_crammer_singer ... 
[00:06:40] ok (0.0486s)
[00:06:40] sklearn.svm.tests.test_svm.test_crammer_singer_binary ... 
[00:06:40] ok (0.0254s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvc_iris ... 
[00:06:40] ok (0.0109s)
[00:06:40] sklearn.svm.tests.test_svm.test_dense_liblinear_intercept_handling ... 
[00:06:40] ok (0.0014s)
[00:06:40] sklearn.svm.tests.test_svm.test_liblinear_set_coef ... 
[00:06:40] ok (0.0112s)
[00:06:40] sklearn.svm.tests.test_svm.test_immutable_coef_property ... 
[00:06:40] ok (0.0112s)
[00:06:40] sklearn.svm.tests.test_svm.test_linearsvc_verbose ... 
[00:06:40] ok (0.0006s)
[00:06:40] sklearn.svm.tests.test_svm.test_svc_clone_with_callable_kernel ... 
[00:06:40] ok (0.0072s)
[00:06:40] sklearn.svm.tests.test_svm.test_svc_bad_kernel ... 
[00:06:40] ok (0.0004s)
[00:06:40] sklearn.svm.tests.test_svm.test_timeout ... 
[00:06:40] ok (0.0023s)
[00:06:40] sklearn.svm.tests.test_svm.test_unfitted ... 
[00:06:40] ok (0.0005s)
[00:06:40] sklearn.svm.tests.test_svm.test_linear_svc_convergence_warnings ... 
[00:06:40] [LibLinear]
[00:06:40] optimization finished, #iter = 2
[00:06:40] 
[00:06:40] WARNING: reaching max number of iterations
[00:06:40] Using -s 2 may be faster (also see FAQ)
[00:06:40] 
[00:06:40] Objective value = -0.208761
[00:06:40] nSV = 4
[00:06:40] ok (0.0021s)
[00:06:40] sklearn.svm.tests.test_svm.test_svr_coef_sign ... 
[00:06:40] ok (0.0014s)
[00:06:40] sklearn.svm.tests.test_svm.test_linear_svc_intercept_scaling ... 
[00:06:40] ok (0.0005s)
[00:06:40] sklearn.svm.tests.test_svm.test_lsvc_intercept_scaling_zero ... 
[00:06:40] ok (0.0003s)
[00:06:40] sklearn.svm.tests.test_svm.test_hasattr_predict_proba ... 
[00:06:40] ok (0.0037s)
[00:06:40] sklearn.svm.tests.test_svm.test_decision_function_shape_two_class ... 
[00:06:40] ok (0.0210s)
[00:06:40] sklearn.tree.tests.test_export.test_graphviz_toy ... 
[00:06:40] ok (0.0068s)
[00:06:40] sklearn.tree.tests.test_export.test_graphviz_errors ... 
[00:06:40] ok (0.0010s)
[00:06:40] sklearn.tree.tests.test_export.test_friedman_mse_in_graphviz ... 
[00:06:40] ok (0.0028s)
[00:06:40] sklearn.tree.tests.test_tree.test_classification_toy ... 
[00:06:40] ok (0.0024s)
[00:06:40] sklearn.tree.tests.test_tree.test_weighted_classification_toy ... 
[00:06:40] ok (0.0023s)
[00:06:40] sklearn.tree.tests.test_tree.test_regression_toy ... 
[00:06:40] ok (0.0024s)
[00:06:40] sklearn.tree.tests.test_tree.test_xor ... 
[00:06:40] ok (0.0033s)
[00:06:40] sklearn.tree.tests.test_tree.test_iris ... 
[00:06:40] ok (0.0068s)
[00:06:40] sklearn.tree.tests.test_tree.test_boston ... 
[00:06:40] ok (0.0235s)
[00:06:40] sklearn.tree.tests.test_tree.test_probability ... 
[00:06:40] C:\Python27\lib\site-packages\sklearn\tree\tree.py:768: RuntimeWarning: divide by zero encountered in log
[00:06:40]   return np.log(proba)
[00:06:40] ok (0.0037s)
[00:06:40] sklearn.tree.tests.test_tree.test_arrayrepr ... 
[00:06:40] ok (0.1575s)
[00:06:40] sklearn.tree.tests.test_tree.test_pure_set ... 
[00:06:40] ok (0.0026s)
[00:06:40] sklearn.tree.tests.test_tree.test_1d_input ... 
[00:06:40] ok (0.0019s)
[00:06:40] sklearn.tree.tests.test_tree.test_numerical_stability ... 
[00:06:40] ok (0.0019s)
[00:06:40] sklearn.tree.tests.test_tree.test_importances ... 
[00:06:41] ok (0.0593s)
[00:06:41] sklearn.tree.tests.test_tree.test_importances_raises ... 
[00:06:41] ok (0.0002s)
[00:06:41] sklearn.tree.tests.test_tree.test_importances_gini_equal_mse ... 
[00:06:41] ok (0.0304s)
[00:06:41] sklearn.tree.tests.test_tree.test_max_features ... 
[00:06:41] ok (0.0320s)
[00:06:41] sklearn.tree.tests.test_tree.test_error ... 
[00:06:41] ok (0.0159s)
[00:06:41] Test min_samples_split parameter ... 
[00:06:41] ok (0.0074s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_samples_leaf ... 
[00:06:41] ok (0.0073s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('Presort-DecisionTreeRegressor', 'iris') ... 
[00:06:41] ok (0.0036s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeRegressor', 'iris') ... 
[00:06:41] ok (0.0028s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeRegressor', 'iris') ... 
[00:06:41] ok (0.0035s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeClassifier', 'iris') ... 
[00:06:41] ok (0.0041s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('Presort-DecisionTreeClassifier', 'iris') ... 
[00:06:41] ok (0.0048s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeClassifier', 'iris') ... 
[00:06:41] ok (0.0048s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeClassifier', 'multilabel', True) ... 
[00:06:41] ok (0.0084s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('DecisionTreeRegressor', 'multilabel', True) ... 
[00:06:41] ok (0.0053s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeClassifier', 'multilabel', True) ... 
[00:06:41] ok (0.0069s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_fraction_leaf('ExtraTreeRegressor', 'multilabel', True) ... 
[00:06:41] ok (0.0051s)
[00:06:41] sklearn.tree.tests.test_tree.test_pickle ... 
[00:06:41] ok (0.0491s)
[00:06:41] sklearn.tree.tests.test_tree.test_multioutput ... 
[00:06:41] C:\Python27\lib\site-packages\sklearn\tree\tree.py:772: RuntimeWarning: divide by zero encountered in log
[00:06:41]   proba[k] = np.log(proba[k])
[00:06:41] ok (0.0036s)
[00:06:41] sklearn.tree.tests.test_tree.test_classes_shape ... 
[00:06:41] ok (0.0023s)
[00:06:41] sklearn.tree.tests.test_tree.test_unbalanced_iris ... 
[00:06:41] ok (0.0020s)
[00:06:41] sklearn.tree.tests.test_tree.test_memory_layout ... 
[00:06:41] ok (0.0383s)
[00:06:41] sklearn.tree.tests.test_tree.test_sample_weight ... 
[00:06:41] ok (0.0019s)
[00:06:41] sklearn.tree.tests.test_tree.test_sample_weight_invalid ... 
[00:06:41] ok (0.0011s)
[00:06:41] sklearn.tree.tests.test_tree.test_class_weights('ExtraTreeClassifier',) ... 
[00:06:41] ok (0.0052s)
[00:06:41] sklearn.tree.tests.test_tree.test_class_weights('Presort-DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0054s)
[00:06:41] sklearn.tree.tests.test_tree.test_class_weights('DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0054s)
[00:06:41] sklearn.tree.tests.test_tree.test_class_weight_errors('ExtraTreeClassifier',) ... 
[00:06:41] ok (0.0010s)
[00:06:41] sklearn.tree.tests.test_tree.test_class_weight_errors('Presort-DecisionTreeClassifier',) ... ok (0.0010s)
[00:06:41] sklearn.tree.tests.test_tree.test_class_weight_errors('DecisionTreeClassifier',) ... ok (0.0008s)
[00:06:41] sklearn.tree.tests.test_tree.test_max_leaf_nodes ... ok (0.0056s)
[00:06:41] sklearn.tree.tests.test_tree.test_max_leaf_nodes_max_depth ... ok (0.0022s)
[00:06:41] sklearn.tree.tests.test_tree.test_arrays_persist ... ok (0.0017s)
[00:06:41] sklearn.tree.tests.test_tree.test_only_constant_features ... ok (0.0012s)
[00:06:41] sklearn.tree.tests.test_tree.test_with_only_one_non_constant_features ... ok (0.0031s)
[00:06:41] sklearn.tree.tests.test_tree.test_big_input ... ok (0.0002s)
[00:06:41] sklearn.tree.tests.test_tree.test_realloc ... ok (0.0001s)
[00:06:41] sklearn.tree.tests.test_tree.test_huge_allocations ... ok (0.0005s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'clf_small', None) ... C:\Python27\lib\site-packages\sklearn\tree\tree.py:768: RuntimeWarning: divide by zero encountered in log
[00:06:41]   return np.log(proba)
[00:06:41] ok (0.0152s)
[00:06:41] 
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'toy', None) ... ok (0.0143s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'digits', 3) ... ok (0.0457s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'multilabel', None) ... ok (0.0200s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'sparse-pos', None) ... ok (0.0149s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'sparse-neg', None) ... ok (0.0149s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'sparse-mix', None) ... ok (0.0161s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeClassifier', 'zeros', None) ... 
[00:06:41] ok (0.0136s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'clf_small', None) ... 
[00:06:41] ok (0.0075s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'toy', None) ... 
[00:06:41] ok (0.0073s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'digits', 3) ... 
[00:06:41] ok (0.0245s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'multilabel', None) ... 
[00:06:41] ok (0.0086s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'sparse-pos', None) ... 
[00:06:41] ok (0.0078s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'sparse-neg', None) ... 
[00:06:41] ok (0.0075s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'sparse-mix', None) ... 
[00:06:41] ok (0.0081s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'zeros', None) ... 
[00:06:41] ok (0.0067s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'clf_small', None) ... 
[00:06:41] ok (0.0155s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'toy', None) ... 
[00:06:41] ok (0.0149s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'digits', 3) ... 
[00:06:41] ok (0.0331s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'multilabel', None) ... 
[00:06:41] ok (0.0204s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'sparse-pos', None) ... 
[00:06:41] ok (0.0149s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'sparse-neg', None) ... 
[00:06:41] ok (0.0151s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'sparse-mix', None) ... 
[00:06:41] ok (0.0166s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeClassifier', 'zeros', None) ... 
[00:06:41] ok (0.0123s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'clf_small', None) ... 
[00:06:41] ok (0.0073s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'toy', None) ... 
[00:06:41] ok (0.0073s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'digits', 3) ... 
[00:06:41] ok (0.0171s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'multilabel', None) ... 
[00:06:41] ok (0.0085s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'sparse-pos', None) ... 
[00:06:41] ok (0.0084s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'sparse-neg', None) ... 
[00:06:41] ok (0.0074s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'sparse-mix', None) ... 
[00:06:41] ok (0.0084s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'zeros', None) ... 
[00:06:41] ok (0.0067s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'boston', 2) ... 
[00:06:41] ok (0.0084s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('ExtraTreeRegressor', 'reg_small', 2) ... 
[00:06:41] ok (0.0072s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'boston', 2) ... 
[00:06:41] ok (0.0093s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_input('DecisionTreeRegressor', 'reg_small', 2) ... 
[00:06:41] ok (0.0077s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'sparse-pos') ... 
[00:06:41] ok (0.0058s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'sparse-neg') ... 
[00:06:41] ok (0.0056s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'sparse-mix') ... 
[00:06:41] ok (0.0072s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeClassifier', 'zeros') ... 
[00:06:41] ok (0.0056s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'sparse-pos') ... 
[00:06:41] ok (0.0056s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'sparse-neg') ... 
[00:06:41] ok (0.0054s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'sparse-mix') ... 
[00:06:41] ok (0.0063s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('DecisionTreeRegressor', 'zeros') ... 
[00:06:41] ok (0.0053s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'sparse-pos') ... 
[00:06:41] ok (0.0059s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'sparse-neg') ... 
[00:06:41] ok (0.0066s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'sparse-mix') ... 
[00:06:41] ok (0.0072s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeClassifier', 'zeros') ... 
[00:06:41] ok (0.0057s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'sparse-pos') ... 
[00:06:41] ok (0.0049s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'sparse-neg') ... 
[00:06:41] ok (0.0051s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'sparse-mix') ... 
[00:06:41] ok (0.0062s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_parameters('ExtraTreeRegressor', 'zeros') ... 
[00:06:41] ok (0.0050s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'sparse-pos') ... 
[00:06:41] ok (0.0032s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'sparse-neg') ... 
[00:06:41] ok (0.0031s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'sparse-mix') ... 
[00:06:41] ok (0.0036s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeClassifier', 'zeros') ... 
[00:06:41] ok (0.0030s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'sparse-pos') ... 
[00:06:41] ok (0.0014s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'sparse-neg') ... 
[00:06:41] ok (0.0014s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'sparse-mix') ... 
[00:06:41] ok (0.0016s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('DecisionTreeRegressor', 'zeros') ... 
[00:06:41] ok (0.0013s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'sparse-pos') ... 
[00:06:41] ok (0.0033s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'sparse-neg') ... 
[00:06:41] ok (0.0034s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'sparse-mix') ... 
[00:06:41] ok (0.0039s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeClassifier', 'zeros') ... 
[00:06:41] ok (0.0029s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'sparse-pos') ... 
[00:06:41] ok (0.0014s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'sparse-neg') ... 
[00:06:41] ok (0.0013s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'sparse-mix') ... 
[00:06:41] ok (0.0018s)
[00:06:41] sklearn.tree.tests.test_tree.test_sparse_criterion('ExtraTreeRegressor', 'zeros') ... 
[00:06:41] ok (0.0013s)
[00:06:41] sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0121s)
[00:06:41] sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('DecisionTreeRegressor',) ... 
[00:06:41] ok (0.0104s)
[00:06:41] sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('ExtraTreeClassifier',) ... 
[00:06:41] ok (0.0128s)
[00:06:41] sklearn.tree.tests.test_tree.test_explicit_sparse_zeros('ExtraTreeRegressor',) ... 
[00:06:41] ok (0.0109s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('Presort-DecisionTreeRegressor',) ... 
[00:06:41] ok (0.0005s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('ExtraTreeRegressor',) ... 
[00:06:41] ok (0.0013s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('DecisionTreeRegressor',) ... 
[00:06:41] ok (0.0012s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('ExtraTreeClassifier',) ... 
[00:06:41] ok (0.0017s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('Presort-DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0007s)
[00:06:41] sklearn.tree.tests.test_tree.test_min_weight_leaf_split_level('DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0014s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('Presort-DecisionTreeRegressor',) ... 
[00:06:41] ok (0.0004s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('ExtraTreeRegressor',) ... 
[00:06:41] ok (0.0004s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('DecisionTreeRegressor',) ... 
[00:06:41] ok (0.0006s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('ExtraTreeClassifier',) ... 
[00:06:41] ok (0.0005s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('Presort-DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0006s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0006s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('DecisionTreeClassifier',) ... 
[00:06:41] ok (0.0008s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('DecisionTreeRegressor',) ... 
[00:06:41] ok (0.0008s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('ExtraTreeClassifier',) ... 
[00:06:41] ok (0.0007s)
[00:06:41] sklearn.tree.tests.test_tree.test_public_apply('ExtraTreeRegressor',) ... 
[00:06:42] ok (0.0010s)
[00:06:42] sklearn.tree.tests.test_tree.test_presort_sparse(DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None, ... 
[00:06:42] ok (0.0040s)
[00:06:42] sklearn.tree.tests.test_tree.test_presort_sparse(DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None, ... 
[00:06:42] ok (0.0035s)
[00:06:42] sklearn.tree.tests.test_tree.test_presort_sparse(DecisionTreeClassifier(class_weight=None, criterion='gini', max_depth=None, ... 
[00:06:42] ok (0.0039s)
[00:06:42] sklearn.tree.tests.test_tree.test_presort_sparse(DecisionTreeRegressor(criterion='mse', max_depth=None, max_features=None, ... 
[00:06:42] ok (0.0036s)
[00:06:42] sklearn.tree.tests.test_tree.test_presort_sparse(DecisionTreeRegressor(criterion='mse', max_depth=None, max_features=None, ... 
[00:06:42] ok (0.0051s)
[00:06:42] sklearn.tree.tests.test_tree.test_presort_sparse(DecisionTreeRegressor(criterion='mse', max_depth=None, max_features=None, ... ok (0.0035s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path_hardcoded ... ok (0.0008s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path('Presort-DecisionTreeRegressor',) ... ok (0.0010s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path('ExtraTreeRegressor',) ... ok (0.0009s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path('DecisionTreeRegressor',) ... ok (0.0009s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path('ExtraTreeClassifier',) ... ok (0.0011s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path('Presort-DecisionTreeClassifier',) ... ok (0.0011s)
[00:06:42] sklearn.tree.tests.test_tree.test_decision_path('DecisionTreeClassifier',) ... ok (0.0011s)
[00:06:42] sklearn.tree.tests.test_tree.test_no_sparse_y_support('Presort-DecisionTreeRegressor',) ... ok (0.0004s)
[00:06:42] sklearn.tree.tests.test_tree.test_no_sparse_y_support('ExtraTreeRegressor',) ... ok (0.0004s)
[00:06:42] sklearn.tree.tests.test_tre
[00:06:42] e.test_no_sparse_y_support('DecisionTreeRegressor',) ... ok (0.0005s)
[00:06:42] sklearn.tree.tests.test_tree.test_no_sparse_y_support('ExtraTreeClassifier',) ... ok (0.0004s)
[00:06:42] sklearn.tree.tests.test_tree.test_no_sparse_y_support('Presort-DecisionTreeClassifier',) ... ok (0.0004s)
[00:06:42] sklearn.tree.tests.test_tree.test_no_sparse_y_support('DecisionTreeClassifier',) ... ok (0.0004s)
[00:06:42] sklearn.utils.tests.test_bench.test_total_seconds ... ok (0.0001s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_class_weight ... ok (0.0027s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_class_weight_not_present ... ok (0.0003s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_class_weight_dict ... ok (0.0004s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_class_weight_invariance ... 
[00:06:42] ok (0.0035s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_class_weight_auto_negative ... 
[00:06:42] ok (0.0047s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_class_weight_auto_unordered ... 
[00:06:42] ok (0.0025s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_sample_weight ... 
[00:06:42] ok (0.0125s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_sample_weight_with_subsample ... 
[00:06:42] ok (0.0166s)
[00:06:42] sklearn.utils.tests.test_class_weight.test_compute_sample_weight_errors ... 
[00:06:42] ok (0.0002s)
[00:06:42] sklearn.utils.tests.test_estimator_checks.test_check_estimator ... 
[00:06:42] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:06:42]   warnings.warn('Objective did not converge, you might want'
[00:06:42] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:06:42]   warnings.warn('Objective did not converge, you might want'
[00:06:42] ok (0.6804s)
[00:06:42] sklearn.utils.tests.test_estimator_checks.test_check_estimators_unfitted ... 
[00:06:42] ok (0.0059s)
[00:06:42] sklearn.utils.tests.test_extmath.test_density ... 
[00:06:42] ok (0.0018s)
[00:06:42] sklearn.utils.tests.test_extmath.test_uniform_weights ... 
[00:06:42] ok (0.0048s)
[00:06:42] sklearn.utils.tests.test_extmath.test_random_weights ... 
[00:06:42] ok (0.0013s)
[00:06:42] sklearn.utils.tests.test_extmath.test_logsumexp ... 
[00:06:43] ok (0.2986s)
[00:06:43] sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank ... 
[00:06:43] ok (0.1752s)
[00:06:43] sklearn.utils.tests.test_extmath.test_norm_squared_norm ... 
[00:06:43] ok (0.0010s)
[00:06:43] sklearn.utils.tests.test_extmath.test_row_norms ... 
[00:06:43] ok (0.0049s)
[00:06:43] sklearn.utils.tests.test_extmath.test_randomized_svd_low_rank_with_noise ... 
[00:06:43] ok (0.0584s)
[00:06:43] sklearn.utils.tests.test_extmath.test_randomized_svd_infinite_rank ... 
[00:06:43] ok (0.0485s)
[00:06:43] sklearn.utils.tests.test_extmath.test_randomized_svd_transpose_consistency ... 
[00:06:43] ok (0.0384s)
[00:06:43] sklearn.utils.tests.test_extmath.test_randomized_svd_power_iteration_normalizer ... 
[00:06:43] ok (0.5640s)
[00:06:43] sklearn.utils.tests.test_extmath.test_svd_flip ... 
[00:06:43] ok (0.0021s)
[00:06:43] sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip ... 
[00:06:44] ok (0.0212s)
[00:06:44] sklearn.utils.tests.test_extmath.test_randomized_svd_sign_flip_with_transpose ... 
[00:06:44] ok (0.0019s)
[00:06:44] sklearn.utils.tests.test_extmath.test_cartesian ... 
[00:06:44] ok (0.0005s)
[00:06:44] sklearn.utils.tests.test_extmath.test_logistic_sigmoid ... 
[00:06:44] ok (0.0009s)
[00:06:44] sklearn.utils.tests.test_extmath.test_fast_dot ... 
[00:06:44] ok (0.0001s)
[00:06:44] sklearn.utils.tests.test_extmath.test_incremental_variance_update_formulas ... 
[00:06:44] ok (0.0012s)
[00:06:44] sklearn.utils.tests.test_extmath.test_incremental_variance_ddof ... 
[00:06:44] ok (0.0077s)
[00:06:44] sklearn.utils.tests.test_extmath.test_vector_sign_flip ... 
[00:06:44] ok (0.0003s)
[00:06:44] sklearn.utils.tests.test_extmath.test_softmax ... 
[00:06:44] ok (0.0003s)
[00:06:44] sklearn.utils.tests.test_extmath.test_incremental_variance_numerical_stability ... 
[00:06:44] SKIP: Test skipped on 32bit platforms.
[00:06:44] sklearn.utils.tests.test_fast_dict.test_int_float_dict ... 
[00:06:44] ok (0.0017s)
[00:06:44] sklearn.utils.tests.test_fast_dict.test_int_float_dict_argmin ... 
[00:06:44] ok (0.0002s)
[00:06:44] sklearn.utils.tests.test_fixes.test_expit ... 
[00:06:44] C:\Python27\lib\site-packages\sklearn\utils\tests\test_fixes.py:23: RuntimeWarning: underflow encountered in exp
[00:06:44]   assert_almost_equal(expit(1000.), 1. / (1. + np.exp(-1000.)), decimal=16)
[00:06:44] C:\Python27\lib\site-packages\sklearn\utils\tests\test_fixes.py:24: RuntimeWarning: underflow encountered in exp
[00:06:44]   assert_almost_equal(expit(-1000.), np.exp(-1000.) / (1. + np.exp(-1000.)),
[00:06:44] ok (0.0009s)
[00:06:44] sklearn.utils.tests.test_fixes.test_divide ... 
[00:06:44] ok (0.0002s)
[00:06:44] sklearn.utils.tests.test_fixes.test_astype_copy_memory ... 
[00:06:44] ok (0.0002s)
[00:06:44] sklearn.utils.tests.test_graph.test_graph_laplacian ... 
[00:06:44] ok (0.0098s)
[00:06:44] sklearn.utils.tests.test_linear_assignment.test_hungarian ... 
[00:06:44] ok (0.0026s)
[00:06:44] sklearn.utils.tests.test_metaestimators.test_delegated_docstring ... 
[00:06:44] ok (0.0001s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_unique_labels ... 
[00:06:44] ok (0.0018s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_unique_labels_non_specific ... 
[00:06:44] C:\Python27\lib\site-packages\numpy\core\arrayprint.py:641: DeprecationWarning: elementwise comparison failed; this will raise the error in the future.
[00:06:44]   max_str_len = max(len(str(maximum.reduce(data))),
[00:06:44] ok (0.0104s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_unique_labels_mixed_types ... 
[00:06:44] ok (0.0548s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_is_multilabel ... 
[00:06:44] ok (0.0640s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_check_classification_targets ... 
[00:06:44] ok (0.0026s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_type_of_target ... 
[00:06:44] ok (0.0194s)
[00:06:44] sklearn.utils.tests.test_multiclass.test_class_distribution ... 
[00:06:44] ok (0.0096s)
[00:06:44] sklearn.utils.tests.test_murmurhash.test_mmhash3_int ... 
[00:06:44] ok (0.0002s)
[00:06:44] sklearn.utils.tests.test_murmurhash.test_mmhash3_int_array ... 
[00:06:44] ok (0.0006s)
[00:06:44] sklearn.utils.tests.test_murmurhash.test_mmhash3_bytes ... 
[00:06:44] ok (0.0001s)
[00:06:44] sklearn.utils.tests.test_murmurhash.test_mmhash3_unicode ... 
[00:06:44] ok (0.0001s)
[00:06:44] sklearn.utils.tests.test_murmurhash.test_no_collision_on_byte_range ... 
[00:06:44] ok (0.0002s)
[00:06:44] sklearn.utils.tests.test_murmurhash.test_uniform_distribution ... 
[00:06:44] ok (0.1526s)
[00:06:44] sklearn.utils.tests.test_optimize.test_newton_cg ... 
[00:06:44] ok (0.0050s)
[00:06:44] sklearn.utils.tests.test_random.test_invalid_sample_without_replacement_algorithm ... 
[00:06:44] ok (0.0001s)
[00:06:44] sklearn.utils.tests.test_random.test_sample_without_replacement_algorithms ... 
[00:06:44] ok (0.2589s)
[00:06:44] sklearn.utils.tests.test_random.test_random_choice_csc ... 
[00:06:44] C:\Python27\lib\site-packages\sklearn\utils\random.py:280: RuntimeWarning: invalid value encountered in true_divide
[00:06:44]   np.sum(class_probability_nz))
[00:06:44] ok (0.0583s)
[00:06:44] sklearn.utils.tests.test_random.test_random_choice_csc_errors ... 
[00:06:44] ok (0.0005s)
[00:06:44] sklearn.utils.tests.test_seq_dataset.test_seq_dataset ... 
[00:06:44] ok (0.0089s)
[00:06:44] sklearn.utils.tests.test_seq_dataset.test_seq_dataset_shuffle ... 
[00:06:44] ok (0.0005s)
[00:06:44] sklearn.utils.tests.test_shortest_path.test_floyd_warshall ... 
[00:06:44] ok (0.0209s)
[00:06:44] sklearn.utils.tests.test_shortest_path.test_dijkstra ... 
[00:06:44] ok (0.0199s)
[00:06:44] sklearn.utils.tests.test_shortest_path.test_shortest_path ... 
[00:06:44] ok (0.1596s)
[00:06:44] sklearn.utils.tests.test_shortest_path.test_dijkstra_bug_fix ... 
[00:06:44] ok (0.0012s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis0 ... 
[00:06:44] ok (0.0068s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_mean_variance_axis1 ... 
[00:06:44] ok (0.0062s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_incr_mean_variance_axis ... 
[00:06:44] ok (0.0191s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_mean_variance_illegal_axis ... 
[00:06:44] ok (0.0009s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_densify_rows ... 
[00:06:44] ok (0.0022s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_inplace_column_scale ... 
[00:06:44] ok (0.0129s)
[00:06:44] sklearn.utils.tests.test_sparsefuncs.test_inplace_row_scale ... 
[00:06:45] ok (0.0121s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_row ... ok (0.0042s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_inplace_swap_column ... ok (0.0044s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_min_max_axis0 ... ok (0.0039s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_min_max_axis1 ... ok (0.0032s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_min_max_axis_errors ... ok (0.0010s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_count_nonzero ... ok (0.0026s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_csc_row_median ... ok (0.0041s)
[00:06:45] sklearn.utils.tests.test_sparsefuncs.test_inplace_normalize ... ok (0.0031s)
[00:06:45] sklearn.utils.tests.test_stats.test_cases([100], 'max', [1.0]) ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_stats.test_cases([100, 100, 100], 'max', [3.0, 3.0, 3.0]) ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_stats.test_cases([100, 300, 200], 'max', [1.0, 3.0, 2.0]) ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_stats.test_cases([100, 200, 300, 200], 'max', [1.0, 3.0, 4.0, 3.0]) ... ok (0.0002s)
[00:06:45] skle
[00:06:45] arn.utils.tests.test_stats.test_cases([100, 200, 300, 200, 100], 'max', [2.0, 4.0, 5.0, 4.0, 2.0]) ... ok (0.0002s)
[00:06:45] test_warn (sklearn.utils.tests.test_testing.TestWarns) ... ok (0.0056s)
[00:06:45] test_warn_wrong_warning (sklearn.utils.tests.test_testing.TestWarns) ... ok (0.0023s)
[00:06:45] sklearn.utils.tests.test_testing.test_assert_less ... ok (0.0001s)
[00:06:45] sklearn.utils.tests.test_testing.test_assert_greater ... ok (0.0001s)
[00:06:45] sklearn.utils.tests.test_testing.test_assert_less_equal ... ok (0.0001s)
[00:06:45] sklearn.utils.tests.test_testing.test_assert_greater_equal ... ok (0.0001s)
[00:06:45] sklearn.utils.tests.test_testing.test_set_random_state ... ok (0.0016s)
[00:06:45] sklearn.utils.tests.test_testing.test_assert_raise_message ... ok (0.0001s)
[00:06:45] sklearn.utils.tests.test_testing.test_ignore_warning ... ok (0.0767s)
[00:06:45] sklearn.utils.tests.test_utils.test_make_rng ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_utils.test_deprecated ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_utils.test_resample ... ok (0.0005s)
[00:06:45] sklearn.utils.tests.test_utils.test_safe_mask
[00:06:45]  ... ok (0.0008s)
[00:06:45] sklearn.utils.tests.test_utils.test_pinvh_simple_real ... ok (0.0006s)
[00:06:45] sklearn.utils.tests.test_utils.test_pinvh_nonpositive ... ok (0.0007s)
[00:06:45] sklearn.utils.tests.test_utils.test_pinvh_simple_complex ... ok (0.0009s)
[00:06:45] sklearn.utils.tests.test_utils.test_arpack_eigsh_initialization ... ok (0.0066s)
[00:06:45] sklearn.utils.tests.test_utils.test_column_or_1d ... ok (0.0006s)
[00:06:45] sklearn.utils.tests.test_utils.test_safe_indexing ... ok (0.0003s)
[00:06:45] sklearn.utils.tests.test_utils.test_safe_indexing_pandas ... SKIP: Pandas not found
[00:06:45] sklearn.utils.tests.test_utils.test_safe_indexing_mock_pandas ... ok (0.0003s)
[00:06:45] sklearn.utils.tests.test_utils.test_shuffle_on_ndim_equals_three ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_utils.test_shuffle_dont_convert_to_array ... ok (0.0015s)
[00:06:45] sklearn.utils.tests.test_utils.test_gen_even_slices ... ok (0.0005s)
[00:06:45] sklearn.utils.tests.test_validation.test_as_float_array ... ok (0.0013s)
[00:06:45] sklearn.utils.tests.test_validation.test_np_matrix ... ok (0.0005s)
[00:06:45] sklearn.utils.tests.test
[00:06:45] _validation.test_memmap ... ok (0.0013s)
[00:06:45] sklearn.utils.tests.test_validation.test_ordering ... ok (0.0008s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_array_pandas_dtype_object_conversion ... ok (0.0003s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_array_dtype_stability ... ok (0.0002s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_array_dtype_warning ... 
[00:06:45] ok (0.0366s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_array_min_samples_and_features_messages ... 
[00:06:45] ok (0.0027s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_array ... 
[00:06:45] C:\Python27\lib\site-packages\sklearn\utils\validation.py:394: DeprecationWarning: Passing 1d arrays as data is deprecated in 0.17 and will raise ValueError in 0.19. Reshape your data either using X.reshape(-1, 1) if your data has a single feature or X.reshape(1, -1) if it contains a single sample.
[00:06:45]   DeprecationWarning)
[00:06:45] ok (0.0402s)
[00:06:45] sklearn.utils.tests.test_validation.test_has_fit_parameter ... 
[00:06:45] ok (0.0009s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_symmetric ... 
[00:06:45] ok (0.0285s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_is_fitted ... 
[00:06:45] ok (0.0073s)
[00:06:45] sklearn.utils.tests.test_validation.test_check_consistent_length ... 
[00:06:45] ok (0.0018s)
[00:06:45] sklearn.tests.test_base.test_clone ... 
[00:06:45] ok (0.0013s)
[00:06:45] sklearn.tests.test_base.test_clone_2 ... 
[00:06:45] ok (0.0006s)
[00:06:45] sklearn.tests.test_base.test_clone_buggy ... 
[00:06:45] ok (0.0012s)
[00:06:45] sklearn.tests.test_base.test_clone_empty_array ... 
[00:06:45] ok (0.0015s)
[00:06:45] sklearn.tests.test_base.test_clone_nan ... 
[00:06:45] ok (0.0007s)
[00:06:45] sklearn.tests.test_base.test_repr ... 
[00:06:45] ok (0.0016s)
[00:06:45] sklearn.tests.test_base.test_str ... 
[00:06:45] ok (0.0005s)
[00:06:45] sklearn.tests.test_base.test_get_params ... 
[00:06:45] ok (0.0024s)
[00:06:45] sklearn.tests.test_base.test_get_params_deprecated ... 
[00:06:45] ok (0.0015s)
[00:06:45] sklearn.tests.test_base.test_is_classifier ... 
[00:06:45] ok (0.0002s)
[00:06:45] sklearn.tests.test_base.test_set_params ... 
[00:06:45] ok (0.0027s)
[00:06:45] sklearn.tests.test_base.test_score_sample_weight ... 
[00:06:45] ok (0.0116s)
[00:06:45] sklearn.tests.test_calibration.test_sample_weight_warning ... 
[00:06:45] ok (0.0617s)
[00:06:45] Test calibration for multiclass ... 
[00:06:45] ok (0.2617s)
[00:06:45] Test calibration for prefitted classifiers ... 
[00:06:45] ok (0.0293s)
[00:06:45] Test calibration values with Platt sigmoid model ... 
[00:06:45] ok (0.0031s)
[00:06:45] Check calibration_curve function ... 
[00:06:45] ok (0.0024s)
[00:06:45] Test that calibration can accept nan ... 
[00:06:45] ok (0.0169s)
[00:06:45] Test calibration objects with isotonic and sigmoid ... 
[00:06:45] ok (0.1995s)
[00:06:45] sklearn.tests.test_check_build.test_raise_build_error ... 
[00:06:45] ok (0.0003s)
[00:06:45] sklearn.tests.test_common.test_all_estimator_no_base_class ... 
[00:06:45] ok (0.0751s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:45] ok (0.0025s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:45] ok (0.0016s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:45] ok (0.0013s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... 
[00:06:45] ok (0.0012s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:45] ok (0.0017s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:45] ok (0.0018s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:45] ok (0.0020s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:45] ok (0.0021s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('BaseEnsemble', <class 'sklearn.ensemble.base.BaseEnsemble'>) ... 
[00:06:45] ok (0.0023s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:45] ok (0.0021s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:45] ok (0.0015s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:45] ok (0.0015s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:45] ok (0.0014s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:45] ok (0.0015s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:45] ok (0.0013s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:45] ok (0.0012s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:45] ok (0.0015s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:45] ok (0.0029s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:45] ok (0.0021s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:45] ok (0.0020s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:45] ok (0.0024s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:45] ok (0.0022s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:45] ok (0.0027s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... 
[00:06:45] ok (0.0011s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:45] ok (0.0020s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:45] ok (0.0019s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:45] ok (0.0024s)
[00:06:45] sklearn.tests.test_common.test_all_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:46] ok (0.0026s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:46] ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:46] ok (0.0024s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:46] ok (0.0008s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:46] ok (0.0025s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:46] ok (0.0011s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:46] ok (0.0011s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:46] ok (0.0027s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:46] ok (0.0027s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:46] ok (0.0014s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:46] ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:46] ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:46] ok (0.0002s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:06:46] ok (0.0022s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:06:46] ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok (0.0024s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... ok (0.0026s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok (0.0010s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0015s)
[00:06:46] sklearn.test
[00:06:46] s.test_common.test_all_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0024s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok (0.0025s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MLPClassifier', <class 'sklearn.neural_network.multilaye
[00:06:46] r_perceptron.MLPClassifier'>) ... ok (0.0032s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... ok (0.0032s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0008s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok (0.0013s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok (0.0011s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok (0.0009s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:06:46] ok (0.0028s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiOutputClassifier', <class 'sklearn.multioutput.MultiOutputClassifier'>) ... 
[00:06:46] ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiOutputEstimator', <class 'sklearn.multioutput.MultiOutputEstimator'>) ... 
[00:06:46] ok (0.0022s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiOutputRegressor', <class 'sklearn.multioutput.MultiOutputRegressor'>) ... 
[00:06:46] ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:06:46] ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:06:46] ok (0.0026s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:06:46] ok (0.0025s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:06:46] ok (0.0010s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:06:46] ok (0.0026s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:06:46] ok (0.0011s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:06:46] ok (0.0024s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OneVsOneClassifier', <class 'sklearn.multiclass.OneVsOneClassifier'>) ... 
[00:06:46] ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OneVsRestClassifier', <class 'sklearn.multiclass.OneVsRestClassifier'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('OutputCodeClassifier', <class 'sklearn.multiclass.OutputCodeClassifier'>) ... 
[00:06:46] ok (0.0026s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:06:46] ok (0.0010s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:06:46] ok (0.0022s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:06:46] ok (0.0029s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:06:46] ok (0.0025s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:06:46] ok (0.0013s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RFE', <class 'sklearn.feature_selection.rfe.RFE'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RFECV', <class 'sklearn.feature_selection.rfe.RFECV'>) ... 
[00:06:46] ok (0.0027s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:06:46] ok (0.0027s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:06:46] ok (0.0025s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:06:46] ok (0.0028s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:06:46] ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:06:46] ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... 
[00:06:46] ok (0.0011s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:06:46] ok (0.0029s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:06:46] ok (0.0025s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:06:46] ok (0.0028s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:06:46] ok (0.0022s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:06:46] ok (0.0009s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:06:46] ok (0.0009s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:06:46] ok (0.0009s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:06:46] ok (0.0010s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:06:46] ok (0.0016s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SpectralBiclustering', <class 'sklearn.cluster.bicluster.SpectralBiclustering'>) ... 
[00:06:46] ok (0.0021s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:06:46] ok (0.0024s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SpectralCoclustering', <class 'sklearn.cluster.bicluster.SpectralCoclustering'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:06:46] ok (0.0015s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:06:46] ok (0.0012s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:06:46] ok (0.0020s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... 
[00:06:46] ok (0.0009s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('_BaseRidgeCV', <class 'sklearn.linear_model.ridge._BaseRidgeCV'>) ... 
[00:06:46] ok (0.0018s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('_BinaryGaussianProcessClassifierLaplace', <class 'sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace'>) ... 
[00:06:46] ok (0.0017s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('_ConstantPredictor', <class 'sklearn.multiclass._ConstantPredictor'>) ... 
[00:06:46] ok (0.0002s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('_GMMBase', <class 'sklearn.mixture.gmm._GMMBase'>) ... 
[00:06:46] ok (0.0019s)
[00:06:46] sklearn.tests.test_common.test_all_estimators('_RidgeGCV', <class 'sklearn.linear_model.ridge._RidgeGCV'>) ... 
[00:06:46] ok (0.0022s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0204s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0059s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0112s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0037s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0031s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0144s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0081s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0047s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0088s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0080s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0671s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.1517s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0002s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0071s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0062s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0003s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0168s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0023s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0096s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0045s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0046s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0046s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:06:46] ok (0.0047s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0563s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0148s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0134s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0125s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0014s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0100s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0226s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0129s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.1004s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0097s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0235s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0038s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0252s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:46] ok (0.0002s)
[00:06:46] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0607s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0080s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0250s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0031s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0263s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0076s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0073s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0052s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:06:47] ok (0.0070s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0340s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0139s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0246s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0074s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0017s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0075s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0098s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0126s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0862s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0076s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0325s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0234s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0001s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0102s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0178s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0003s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0196s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0024s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0061s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0046s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0044s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0034s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:06:47] ok (0.0043s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... 
[00:06:47] ok (0.0040s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... 
[00:06:47] ok (0.0027s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... 
[00:06:47] ok (0.0008s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0007s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0005s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0027s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0012s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0013s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0039s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_a
[00:06:47] pproximation.AdditiveChi2Sampler'>) ... ok (0.0030s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0039s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0021s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0021s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0021s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... ok (0.0021s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0108s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0047s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0038s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0019s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0011s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0051s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0038s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0029s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0272s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0065s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0002s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0475s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0002s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0058s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0032s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0036s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0034s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:06:47] ok (0.0034s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0054s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0032s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0013s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0010s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0008s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0030s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0021s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0022s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0039s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0035s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0003s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0036s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0001s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0028s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0025s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0026s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0025s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:06:47] ok (0.0024s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0496s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0132s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0110s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0109s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0023s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0309s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0265s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:47] ok (0.0226s)
[00:06:47] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.2404s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0226s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0243s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0110s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0239s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0001s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0530s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0109s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0223s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0022s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0165s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0149s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0144s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0045s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:06:48] ok (0.0121s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0403s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0124s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0167s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0089s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0020s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0201s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0182s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0103s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.1041s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0178s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0315s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0325s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0002s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0106s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0187s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0003s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0244s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0026s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0142s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0116s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0128s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0049s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:06:48] ok (0.0124s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0113s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0045s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0026s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0022s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0015s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0058s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0039s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0034s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0074s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0053s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0046s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0045s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0001s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0058s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0034s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0002s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0043s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0021s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... 
[00:06:48] ok (0.0068s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok (0.0035s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok (0.0034s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok (0.0033s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok (0.0035s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0075s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0039s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0015s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'skl
[00:06:48] earn.naive_bayes.BernoulliNB'>) ... ok (0.0014s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0007s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0043s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0030s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0021s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0140s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0054s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0024s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0010s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0037s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0011s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0087s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0142s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0027s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0020s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0066s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0041s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0028s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0029s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... 
[00:06:48] ok (0.0029s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:48] ok (0.0264s)
[00:06:48] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0086s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0192s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0035s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0015s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0275s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0068s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0044s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.1276s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0156s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0210s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0418s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0006s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0059s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0040s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0033s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0034s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... 
[00:06:49] ok (0.0036s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0038s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0025s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0007s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0007s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0006s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0026s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0012s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0011s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0043s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0027s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0038s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0022s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0024s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0023s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... 
[00:06:49] ok (0.0022s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0089s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0047s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0032s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0013s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0008s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0059s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0026s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0021s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0165s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0067s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0041s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0083s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0001s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0021s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0053s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0018s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0067s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0024s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0027s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0026s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('Birch', <class 'sklearn.cluster.birch.Birch'>) ... 
[00:06:49] ok (0.0026s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0095s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0053s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0027s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0019s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0011s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0038s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0028s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0055s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0059s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0061s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] SKIP
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0001s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0031s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] C:\Python27\lib\site-packages\sklearn\cross_decomposition\pls_.py:293: UserWarning: Y residual constant at iteration 1
[00:06:49]   warnings.warn('Y residual constant at iteration %s' % k)
[00:06:49] ok (0.0036s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0003s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0019s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] SKIP: CCA is non deterministic on 32bit Python
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0001s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0072s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0037s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0033s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0030s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... 
[00:06:49] ok (0.0029s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.0703s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0212s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0215s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0153s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0006s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0229s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0250s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedC
[00:06:49] lassifierCV'>) ... 
[00:06:49] ok (0.0184s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.1564s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.0172s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.0197s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.0024s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.0352s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:49] ok (0.0001s)
[00:06:49] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0850s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0153s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0393s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0021s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0224s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0025s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0123s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0026s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... 
[00:06:50] ok (0.0025s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0060s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0040s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0024s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0012s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0005s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0038s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0024s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0021s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0165s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0042s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0002s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0038s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0002s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0030s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0028s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0029s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0030s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DBSCAN', <class 'sklearn.cluster.dbscan_.DBSCAN'>) ... 
[00:06:50] ok (0.0028s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0357s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0166s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0180s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0150s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0018s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0168s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0150s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0101s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0069s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0123s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0136s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0089s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0093s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0091s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... 
[00:06:50] ok (0.0093s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0084s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0038s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0012s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0017s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0015s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0043s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0033s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0059s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0125s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0057s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0033s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0009s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0041s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0001s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0092s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0052s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0019s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0043s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0086s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0032s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0036s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0031s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... 
[00:06:50] ok (0.0032s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0076s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0038s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0012s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0015s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0013s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0041s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... 
[00:06:50] ok (0.0030s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0027s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0099s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0047s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0065s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0073s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0001s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.002
[00:06:50] 3s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0026s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0002s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0035s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0018s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0067s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0030s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0030s)
[00:06:50] skle
[00:06:50] arn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0029s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0031s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:50] ok (0.1898s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:50] ok (0.0247s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:50] ok (0.1130s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:50] ok (0.0302s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:50] ok (0.0021s)
[00:06:50] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0814s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0228s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0195s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0082s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0275s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0978s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.1981s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0002s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0254s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0055s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0106s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0055s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... 
[00:06:51] ok (0.0057s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0107s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0045s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0020s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0024s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0018s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0052s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0044s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0036s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0170s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0054s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0040s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0045s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0001s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0048s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0036s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0003s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0044s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0018s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0077s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0038s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0041s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0045s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... 
[00:06:51] ok (0.0043s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.1345s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0334s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0656s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0315s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0023s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0689s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0651s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:51] ok (0.0332s)
[00:06:51] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.1810s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0375s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0715s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0759s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0002s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0380s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0628s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] C:\Python27\lib\site-packages\sklearn\linear_model\base.py:200: RuntimeWarning: invalid value encountered in subtract
[00:06:52]   y = y - y_offset
[00:06:52] ok (0.0018s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0691s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0021s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0371s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... 
[00:06:52] ok (0.0049s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok (0.0319s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok (0.0042s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok (0.0054s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0052s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0029s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0013s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance
[00:06:52] ', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0009s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0007s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0032s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0017s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0013s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0028s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_
[00:06:52] covariance_.EmpiricalCovariance'>) ... ok (0.0031s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0025s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0025s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0024s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0026s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('EmpiricalCovariance', <class 'sklearn.covariance.empirical_covariance_.EmpiricalCovariance'>) ... ok (0.0026s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0084s)
[00:06:52] sklearn.te
[00:06:52] sts.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0037s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0011s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0016s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0015s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0041s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0034s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0027s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimat
[00:06:52] ors('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0129s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0057s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0034s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0009s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0036s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0001s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0086s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0064s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0019s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0039s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0089s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0033s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0037s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0033s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... 
[00:06:52] ok (0.0035s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0074s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0038s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0010s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0016s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0013s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0040s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0030s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0026s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0098s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0047s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0044s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0044s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0001s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0023s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0026s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0003s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0029s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0019s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0064s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0033s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0031s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0030s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... 
[00:06:52] ok (0.0030s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0505s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0148s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0112s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0113s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0022s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0243s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0228s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:52] ok (0.0132s)
[00:06:52] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0881s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0204s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0230s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0108s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0246s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0001s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0667s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0060s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0234s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0021s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0429s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0203s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0132s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0132s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0121s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... 
[00:06:53] ok (0.0131s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0706s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0219s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0306s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0166s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0034s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0346s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0210s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0128s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0903s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0248s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0453s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0375s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0003s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0155s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0234s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0004s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0279s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0028s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0197s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0147s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0132s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0130s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... 
[00:06:53] ok (0.0127s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0153s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0072s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0047s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0029s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0018s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0107s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0056s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0038s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0066s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0069s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:53] ok (0.0074s)
[00:06:53] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0149s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0002s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0080s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0057s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0042s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0057s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... 
[00:06:54] ok (0.0056s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0156s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok (0.0062s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok (0.0061s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0034s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0018s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0092s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0061s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0040s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0063s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0059s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0073s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0141s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0001s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0060s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0041s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0042s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0040s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... 
[00:06:54] ok (0.0041s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0062s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0035s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0012s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0010s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0009s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0038s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0021s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0024s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0053s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0041s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0031s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0058s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0001s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0002s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0044s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0031s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0025s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0028s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FeatureAgglomeration', <class 'sklearn.cluster.hierarchical.FeatureAgglomeration'>) ... 
[00:06:54] ok (0.0028s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0050s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0029s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0007s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0009s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0008s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0030s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0018s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0017s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0039s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0034s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0022s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0045s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0027s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0025s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0026s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... 
[00:06:54] ok (0.0028s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0653s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0370s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0382s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0215s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0044s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0435s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0433s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0230s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0176s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0228s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0212s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0047s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0160s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0051s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... 
[00:06:54] ok (0.0042s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0359s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0102s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0087s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0065s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0028s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0115s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0119s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0088s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0135s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0107s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0135s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0083s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0087s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0083s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... 
[00:06:54] ok (0.0075s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0077s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0045s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0023s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0012s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0006s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0044s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0022s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0017s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0031s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0053s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0022s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0010s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0036s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0012s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0098s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0129s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0026s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0035s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0072s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0032s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0028s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0027s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... 
[00:06:54] ok (0.0029s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0157s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0056s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0044s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0031s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0018s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0089s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0057s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0060s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0137s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:54] ok (0.0455s)
[00:06:54] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0460s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok (0.0001s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok (0.0044s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok (0.0053s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... ok (0.0003s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0097s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0026s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0071s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0042s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0045s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0044s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... 
[00:06:55] ok (0.0043s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0857s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0213s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0311s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0185s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0030s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0222s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0107s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0212s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0079s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0153s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0460s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0012s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0629s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:55] ok (0.0008s)
[00:06:55] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.8069s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0296s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0394s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0028s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0300s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0037s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0085s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0041s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... 
[00:06:56] ok (0.0034s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0176s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0093s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0087s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0056s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0020s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0138s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0112s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0073s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0069s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0155s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0280s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0276s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0002s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0075s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0108s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0004s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0125s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0111s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0054s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0050s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0039s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... 
[00:06:56] ok (0.0052s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0080s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0063s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0022s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0024s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0012s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0051s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0032s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0026s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0095s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0059s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0040s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0070s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0010s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0064s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0043s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0046s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0042s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... 
[00:06:56] ok (0.0036s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:56] ok (0.0105s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:56] ok (0.0052s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:56] ok (0.0030s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:56] ok (0.0016s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:56] ok (0.0008s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... 
[00:06:56] ok (0.0095s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0030s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0022s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0343s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0054s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0063s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univaria
[00:06:56] te_selection.GenericUnivariateSelect'>) ... ok (0.0123s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0002s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0064s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0033s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0033s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0029s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GenericUnivariateSelect'
[00:06:56] , <class 'sklearn.feature_selection.univariate_selection.GenericUnivariateSelect'>) ... ok (0.0036s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok (0.0345s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0122s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0097s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0077s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0025s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0082s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0087s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0093s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0816s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0122s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0081s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0013s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0155s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:56] ok (0.0008s)
[00:06:56] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0371s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0059s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0161s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0024s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0177s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0043s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0051s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0043s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... 
[00:06:57] ok (0.0040s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0151s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0054s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0035s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0033s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0027s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0070s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0063s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0054s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0197s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0104s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0082s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0097s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0001s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0057s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0058s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0003s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0074s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0018s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0114s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0054s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0053s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0042s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... 
[00:06:57] ok (0.0050s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0119s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0044s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0057s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0039s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0013s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0078s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0042s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0029s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0061s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0215s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0041s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0030s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0029s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0029s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... 
[00:06:57] ok (0.0030s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.1123s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0341s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0688s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0225s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0016s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0426s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0424s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0200s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0076s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0291s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0239s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0042s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0036s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0041s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... 
[00:06:57] ok (0.0041s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... ok (0.0835s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0100s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0227s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0433s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0013s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0192s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0095s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:57] ok (0.0117s)
[00:06:57] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.1953s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0144s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0187s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0193s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0002s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0257s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0177s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0004s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0274s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0024s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0114s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0154s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0100s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0045s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('HuberRegressor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... 
[00:06:58] ok (0.0160s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0072s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0042s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0026s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0019s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0013s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0072s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0033s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0114s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0065s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0055s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0106s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0002s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0075s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0043s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0043s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0048s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... 
[00:06:58] ok (0.0044s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0090s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0061s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0020s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0017s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0012s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0082s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0033s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0029s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0055s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0071s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0055s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0108s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0002s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0076s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0041s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0043s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0041s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... 
[00:06:58] ok (0.0041s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0624s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0133s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0213s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0119s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0017s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0257s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0253s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0154s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.1183s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0258s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0268s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0184s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0173s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0035s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... 
[00:06:58] ok (0.0033s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... 
[00:06:58] ok (0.0138s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... 
[00:06:58] ok (0.0055s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... 
[00:06:58] ok (0.0065s)
[00:06:58] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... 
[00:06:59] ok (0.0025s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0010s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0110s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0042s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0033s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0040s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0113s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0083s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0169s)
[00:06:59] sklearn.tests.test_common.test_non_meta_es
[00:06:59] timators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0063s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0030s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0034s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0032s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0033s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0366s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0213s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] C:\Python27\lib\site-packages\sklearn\utils\validation.py:428: DataConversionWarning: Data with input dtype object was converted to float64.
[00:06:59]   warnings.warn(msg, _DataConversionWarning)
[00:06:59] ok (0.0155s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0082s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0035s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0257s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0139s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0093s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.1574s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0112s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0157s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0314s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0002s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0002s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0122s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0096s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0047s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0051s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0047s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... 
[00:06:59] ok (0.0049s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0120s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0052s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0023s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0014s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0011s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0062s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0024s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0024s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0271s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0085s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0053s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0018s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0047s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0164s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0080s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0047s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0100s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0031s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0031s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0030s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... 
[00:06:59] ok (0.0027s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0072s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0032s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0015s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0010s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0009s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0045s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0021s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0129s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0055s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0060s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0054s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0025s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0002s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0030s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0017s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0053s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0025s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0030s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KNeighborsRegressor', <class 'sklearn.neighbors.regression.KNeighborsRegressor'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0023s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0022s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0005s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0003s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0002s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0023s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0005s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0003s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0014s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0011s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0035s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0018s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0017s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... 
[00:06:59] ok (0.0018s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0052s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0034s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0009s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0011s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0009s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0036s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0024s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0021s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0041s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0044s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0025s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0028s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0027s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0106s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0044s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0022s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0018s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] SKIP: KernelPCA is non deterministic on 32bit Python
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0044s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... 
[00:06:59] ok (0.0037s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0132s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0061s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... SKIP: KernelPCA is non deterministic on 32bit Python
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... SKIP: KernelPCA is non deterministic on 32bit Python
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0056s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA
[00:06:59] '>) ... ok (0.0035s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0039s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0038s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0041s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0058s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0037s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0014s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0011s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.
[00:06:59] kernel_ridge.KernelRidge'>) ... ok (0.0008s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0039s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0021s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0139s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0037s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0050s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0051s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0024s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0019s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0002s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0022s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0017s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0046s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0028s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0026s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0028s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... 
[00:06:59] ok (0.0028s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0081s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0044s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0020s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0016s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0009s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0063s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0030s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0023s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0037s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0060s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0030s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0013s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0034s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0001s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0096s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0159s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0037s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0024s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0051s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0119s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0003s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0173s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0035s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0054s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0042s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... 
[00:06:59] ok (0.0044s)
[00:06:59] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0212s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0059s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\random_projection.py:376: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (10 < 32).The dimensionality of the problem will not be reduced.
[00:07:00]   DataDimensionalityWarning)
[00:07:00] ok (0.0052s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\random_projection.py:376: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (4 < 32).The dimensionality of the problem will not be reduced.
[00:07:00]   DataDimensionalityWarning)
[00:07:00] ok (0.0033s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0014s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0070s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0064s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\random_projection.py:376: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (2 < 32).The dimensionality of the problem will not be reduced.
[00:07:00]   DataDimensionalityWarning)
[00:07:00] ok (0.0043s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\random_projection.py:376: DataDimensionalityWarning: The number of components is higher than the number of features: n_features < n_components (10 < 32).The dimensionality of the problem will not be reduced.
[00:07:00]   DataDimensionalityWarning)
[00:07:00] ok (0.0207s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0088s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0049s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0051s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0050s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0051s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... 
[00:07:00] ok (0.0048s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0090s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0037s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0019s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\metrics\pairwise.py:818: RuntimeWarning: underflow encountered in exp
[00:07:00]   np.exp(K, K)    # exponentiate K in-place
[00:07:00] ok (0.0016s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0012s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0048s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0032s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\metrics\pairwise.py:818: RuntimeWarning: underflow encountered in exp
[00:07:00]   np.exp(K, K)    # exponentiate K in-place
[00:07:00] C:\Python27\lib\site-packages\sklearn\semi_supervised\label_propagation.py:358: RuntimeWarning: underflow encountered in divide
[00:07:00]   affinity_matrix /= normalizer[:, np.newaxis]
[00:07:00] ok (0.0031s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0059s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0059s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0043s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0022s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0064s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0002s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0355s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0053s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0022s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0068s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0030s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0037s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0044s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... 
[00:07:00] ok (0.0050s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0097s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0039s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0022s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\metrics\pairwise.py:818: RuntimeWarning: underflow encountered in exp
[00:07:00]   np.exp(K, K)    # exponentiate K in-place
[00:07:00] ok (0.0019s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0013s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0047s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0032s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] C:\Python27\lib\site-packages\sklearn\metrics\pairwise.py:818: RuntimeWarning: underflow encountered in exp
[00:07:00]   np.exp(K, K)    # exponentiate K in-place
[00:07:00] C:\Python27\lib\site-packages\sklearn\utils\graph.py:175: RuntimeWarning: underflow encountered in divide
[00:07:00]   lap /= w
[00:07:00] ok (0.0032s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0060s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0056s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0031s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0017s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0043s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0001s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0335s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... 
[00:07:00] ok (0.0053s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0020s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0068s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0030s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0031s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0033s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0029s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linea
[00:07:00] r_model.least_angle.Lars'>) ... ok (0.0091s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0038s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0047s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0019s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0010s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0052s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0033s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0029s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_an
[00:07:00] gle.Lars'>) ... ok (0.0040s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0049s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0073s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0069s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0001s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0045s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0034s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0002s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0075s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0018s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0069s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0030s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0029s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0029s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... 
[00:07:00] ok (0.0029s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0223s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0070s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0121s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0052s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0015s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0110s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0096s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0059s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0066s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0090s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0142s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0150s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0001s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0069s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0093s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0002s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0132s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0019s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0102s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0030s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0057s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0031s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... 
[00:07:00] ok (0.0031s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0102s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0044s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0017s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0021s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0018s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0049s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0038s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0034s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0158s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0058s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0039s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0045s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0005s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0046s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0033s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0002s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0041s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0017s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0068s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0038s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0038s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0037s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... 
[00:07:00] ok (0.0045s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:00] ok (0.1304s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:00] ok (0.0329s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:00] ok (0.0611s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:00] ok (0.0311s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:00] ok (0.0025s)
[00:07:00] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0654s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0637s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0320s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.1823s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0367s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0723s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0688s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0001s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0361s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0612s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] C:\Python27\lib\site-packages\sklearn\linear_model\base.py:200: RuntimeWarning: invalid value encountered in subtract
[00:07:01]   y = y - y_offset
[00:07:01] ok (0.0017s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0758s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0024s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0338s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0046s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0324s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0041s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... 
[00:07:01] ok (0.0050s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0088s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0039s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0019s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0019s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0015s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0046s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0034s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0035s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0070s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0053s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0050s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0045s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0001s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0048s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0026s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0002s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0037s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0019s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0068s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0035s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0033s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0033s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... 
[00:07:01] ok (0.0033s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0235s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0076s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0115s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0058s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0015s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0118s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0100s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0064s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0076s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0090s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0145s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0147s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0001s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0081s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0095s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0002s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0128s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:01] ok (0.0027s)
[00:07:01] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:02] ok (0.0107s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:02] ok (0.0035s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:02] ok (0.0058s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:02] ok (0.0035s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... 
[00:07:02] ok (0.0033s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0111s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0050s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0040s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0027s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0013s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0058s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0046s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0036s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0067s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0052s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0055s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0056s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0001s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0049s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0039s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0002s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0054s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0021s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0076s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0033s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0036s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0036s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... 
[00:07:02] ok (0.0034s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.1153s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0252s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0872s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0267s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0026s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0929s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0185s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0187s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.1709s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0321s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0758s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.1510s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0003s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0255s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0059s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0111s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:02] ok (0.0067s)
[00:07:02] sklearn.tests.test_common.test_non_meta_estimators('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... 
[00:07:03] ok (0.0066s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0056s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0030s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0013s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0011s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0007s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0034s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0019s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0021s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0030s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0036s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0029s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... 
[00:07:03] ok (0.0029s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok (0.0027s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok (0.0026s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok (0.0028s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0082s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0043s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0019s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis',
[00:07:03]  <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0014s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0010s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0060s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0031s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0025s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0038s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discr
[00:07:03] iminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0051s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0028s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0012s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0034s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0001s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0099s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.Linea
[00:07:03] rDiscriminantAnalysis'>) ... ok (0.0149s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0027s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0019s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0044s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0082s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0001s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'
[00:07:03] >) ... ok (0.0100s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0025s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0029s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0025s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0023s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0056s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0034s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimator
[00:07:03] s('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0014s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0010s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0007s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0042s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0181s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0039s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0030s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0024s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0007s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0045s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0002s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0021s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0018s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0130s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0028s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0026s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0027s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... 
[00:07:03] ok (0.0025s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0109s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0046s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0017s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0022s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0047s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0043s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0037s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0026s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0142s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0089s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0057s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0012s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0050s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0001s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0102s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0055s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0038s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0018s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0137s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0093s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0040s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0046s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0040s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... 
[00:07:03] ok (0.0037s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0105s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0044s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0019s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0023s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0047s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0045s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0032s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0168s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0057s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0045s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0051s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0001s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0050s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0035s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0010s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0046s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0018s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0074s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0038s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0045s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0039s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... 
[00:07:03] ok (0.0044s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0363s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0092s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0169s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0041s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0022s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] SKIP: LocallyLinearEmbedding is non deterministic on 32bit Python
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0093s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0054s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0076s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0169s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] SKIP: LocallyLinearEmbedding is non deterministic on 32bit Python
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] SKIP: LocallyLinearEmbedding is non deterministic on 32bit Python
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0002s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0089s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0037s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0054s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0038s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... 
[00:07:03] ok (0.0039s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0119s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0047s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0027s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0020s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0049s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0049s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0038s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0027s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0160s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0066s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0047s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0012s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0056s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0001s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0124s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0054s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0044s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.lo
[00:07:03] gistic.LogisticRegression'>) ... ok (0.0018s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0039s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0112s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0040s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0037s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0050s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... 
[00:07:03] ok (0.0038s)
[00:07:03] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:04] ok (0.5708s)
[00:07:04] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:04] ok (0.1360s)
[00:07:04] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:04] ok (0.1930s)
[00:07:04] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:04] ok (0.1857s)
[00:07:04] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:04] ok (0.0040s)
[00:07:04] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:04] ok (0.1210s)
[00:07:04] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:05] ok (0.1026s)
[00:07:05] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:05] ok (0.1754s)
[00:07:05] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:05] ok (0.1504s)
[00:07:05] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (2.6311s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.0553s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.0950s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.0031s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.3227s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.0002s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.4323s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:08] ok (0.0059s)
[00:07:08] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.3310s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.0024s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.2431s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.1843s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.0048s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.0520s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.0052s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:09] ok (0.0057s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0177s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0081s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0065s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0047s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0028s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0138s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0082s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0060s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0106s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0089s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0096s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0091s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:09] ok (0.0083s)
[00:07:09] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... 
[00:07:10] ok (0.0057s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok (0.0060s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.2240s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0524s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0731s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0433s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0040s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0991s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0809s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:10] ok (0.0435s)
[00:07:10] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:11] ok (0.8749s)
[00:07:11] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:11] ok (0.0602s)
[00:07:11] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:11] ok (0.0808s)
[00:07:11] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:11] ok (0.0422s)
[00:07:11] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:11] ok (0.1076s)
[00:07:11] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:11] ok (0.0048s)
[00:07:11] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.4950s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0153s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0895s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0035s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0788s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0533s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0583s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0066s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... 
[00:07:12] ok (0.0331s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0553s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0464s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.1015s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0444s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0064s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0369s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0730s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:12] ok (0.0388s)
[00:07:12] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:13] ok (0.7310s)
[00:07:13] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:13] ok (0.0237s)
[00:07:13] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:13] ok (0.1890s)
[00:07:13] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.1900s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0036s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0313s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0772s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0004s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.1156s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0023s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0124s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0080s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0107s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0053s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... 
[00:07:14] ok (0.0073s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0038s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0028s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0006s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0006s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0006s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0028s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0011s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0010s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... 
[00:07:14] ok (0.0070s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0032s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0019s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0033s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0001s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0038s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0021s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0020s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbs
[00:07:14] Scaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0021s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0021s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.1029s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0255s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.1046s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0098s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0008s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0703s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0262s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0112s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0038s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0375s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0006s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.1537s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0002s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0298s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0025s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0140s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0025s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... 
[00:07:14] ok (0.0024s)
[00:07:14] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.1313s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0309s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0778s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0301s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0011s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0653s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0562s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0284s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0034s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0347s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0337s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0033s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0061s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0026s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... 
[00:07:15] ok (0.0026s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0042s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0028s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] C:\Python27\lib\site-packages\sklearn\utils\validation.py:428: DataConversionWarning: Data with input dtype object was converted to float64 by MinMaxScaler.
[00:07:15]   warnings.warn(msg, _DataConversionWarning)
[00:07:15] ok (0.0007s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0007s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0007s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0029s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0012s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0013s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0030s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0036s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0020s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0034s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0001s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0044s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0023s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0022s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0024s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... 
[00:07:15] ok (0.0024s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0505s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0239s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0204s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0113s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0022s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0272s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0137s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0103s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0079s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0134s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0255s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0481s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0002s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0108s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0075s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0083s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0068s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... 
[00:07:15] ok (0.0071s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:15] ok (0.0344s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:15] ok (0.0203s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:15] C:\Python27\lib\site-packages\sklearn\utils\validation.py:428: DataConversionWarning: Data with input dtype object was converted to float64.
[00:07:15]   warnings.warn(msg, _DataConversionWarning)
[00:07:15] ok (0.0130s)
[00:07:15] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0077s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok (0.0023s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok (0.0254s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok (0.0153s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok (0.0089s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.1345s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0116s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0202s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0387s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0002s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0245s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0138s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0032s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0099s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0063s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0093s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0097s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... 
[00:07:16] ok (0.0085s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0537s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0176s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0255s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0149s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0023s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0302s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0164s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0104s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0072s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0116s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0256s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0506s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0002s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0119s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0100s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0070s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0120s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... 
[00:07:16] ok (0.0115s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0095s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0040s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0016s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:16]   warnings.warn('Objective did not converge, you might want'
[00:07:16] ok (0.0021s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0017s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0044s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0038s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0033s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0069s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0050s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:16]   warnings.warn('Objective did not converge, you might want'
[00:07:16] ok (0.0040s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0045s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0001s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0047s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0001s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0002s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0040s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0019s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0068s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0036s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0036s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0033s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... 
[00:07:16] ok (0.0038s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0919s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0235s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:16]   warnings.warn('Objective did not converge, you might want'
[00:07:16] ok (0.0569s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0220s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0021s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0484s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0425s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0224s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:16] ok (0.0083s)
[00:07:16] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0275s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.1658s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.2062s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0002s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0323s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0007s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] C:\Python27\lib\site-packages\sklearn\linear_model\base.py:200: RuntimeWarning: invalid value encountered in subtract
[00:07:17]   y = y - y_offset
[00:07:17] ok (0.0015s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:17]   warnings.warn('Objective did not converge, you might want'
[00:07:17] ok (0.0890s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0024s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0321s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0050s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0247s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0048s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... 
[00:07:17] ok (0.0055s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0104s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0044s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0017s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:17]   warnings.warn('Objective did not converge, you might want'
[00:07:17] ok (0.0028s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0017s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0048s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0041s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0032s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0072s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0053s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:17]   warnings.warn('Objective did not converge, you might want'
[00:07:17] ok (0.0042s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0044s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0001s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0051s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0001s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0002s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0038s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0018s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0074s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0034s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0037s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0039s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... 
[00:07:17] ok (0.0038s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0938s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0238s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:17]   warnings.warn('Objective did not converge, you might want'
[00:07:17] ok (0.0570s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0223s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0022s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0486s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0430s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0221s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:17] ok (0.0081s)
[00:07:17] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0275s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.1726s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.1711s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0001s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0231s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0002s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] C:\Python27\lib\site-packages\sklearn\linear_model\base.py:200: RuntimeWarning: invalid value encountered in subtract
[00:07:18]   y = y - y_offset
[00:07:18] ok (0.0016s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] C:\Python27\lib\site-packages\sklearn\linear_model\coordinate_descent.py:1727: UserWarning: Objective did not converge, you might want to increase the number of iterations
[00:07:18]   warnings.warn('Objective did not converge, you might want'
[00:07:18] ok (0.0788s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0024s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0270s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0043s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0211s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0040s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... 
[00:07:18] ok (0.0046s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0065s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0040s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0016s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0022s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0007s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0041s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0024s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0018s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0118s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0050s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0026s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0012s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0032s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0016s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0133s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0225s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0031s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0099s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0035s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0043s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0041s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... 
[00:07:18] ok (0.0037s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0417s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0118s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok (0.0213s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok (0.0110s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok (0.0054s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0308s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0126s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0076s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0908s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0149s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0196s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0409s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0003s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0186s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:18] ok (0.0094s)
[00:07:18] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:19] ok (0.0091s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:19] ok (0.0074s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... 
[00:07:19] ok (0.0082s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0090s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0056s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0018s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0017s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0009s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0051s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0021s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0019s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0268s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0048s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0023s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0007s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0001s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0083s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0075s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0020s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0024s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0050s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0027s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0027s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0030s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... 
[00:07:19] ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0098s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0046s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0019s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0020s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0034s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0045s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0020s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0029s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0070s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0057s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0033s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0030s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0027s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... 
[00:07:19] ok (0.0030s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0047s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0008s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0009s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0007s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0039s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0012s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0014s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0050s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0039s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0049s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0026s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0030s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0025s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... 
[00:07:19] ok (0.0026s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0312s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0065s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0032s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0033s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0072s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0069s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0052s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0234s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0089s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.Nu
[00:07:19] SVC'>) ... ok (0.0065s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0022s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0080s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0001s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0345s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0106s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0082s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0034s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] SKIP
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0144s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0055s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0069s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0086s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... 
[00:07:19] ok (0.0063s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0143s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0069s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0032s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0025s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0080s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0057s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0052s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0239s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0107s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0172s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0124s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0002s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0059s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0038s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0003s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0048s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0026s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0088s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0045s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0040s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0054s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... 
[00:07:19] ok (0.0042s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0102s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0052s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0033s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0021s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0017s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0082s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0036s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0040s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0188s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0079s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0068s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0113s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0002s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0058s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0034s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0037s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0042s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... 
[00:07:19] ok (0.0038s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0058s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0033s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0013s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0012s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0009s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0039s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0021s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0020s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0033s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0044s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0031s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0029s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0029s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0028s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... 
[00:07:19] ok (0.0027s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0129s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0052s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0025s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0022s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0021s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0054s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0050s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0039s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0163s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0076s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0094s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0048s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0039s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0044s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... 
[00:07:19] ok (0.0042s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0073s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0036s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0017s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0015s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0008s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0049s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0029s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0021s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0037s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0045s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0035s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0029s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0001s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0049s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0024s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0003s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0025s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0023s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... 
[00:07:19] ok (0.0069s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok (0.0030s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok (0.0032s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok (0.0036s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok (0.0032s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0175s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0067s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0075s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0045s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0010s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0101s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0072s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0048s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:19] ok (0.0044s)
[00:07:19] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0081s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0110s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0099s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0001s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0098s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0078s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0003s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0086s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0022s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0096s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0047s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0042s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0048s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('OrthogonalMatchingPursuitCV', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... 
[00:07:20] ok (0.0044s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0119s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0067s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0020s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0026s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0018s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0058s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0032s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0026s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0042s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0052s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0033s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0076s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0002s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0059s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0033s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0033s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0039s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... 
[00:07:20] ok (0.0033s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0097s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0055s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0026s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0018s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0013s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0030s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0070s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0068s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0058s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] SKIP
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0001s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0033s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] C:\Python27\lib\site-packages\sklearn\cross_decomposition\pls_.py:293: UserWarning: Y residual constant at iteration 1
[00:07:20]   warnings.warn('Y residual constant at iteration %s' % k)
[00:07:20] ok (0.0032s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0003s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0045s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0022s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0259s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0002s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0076s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0037s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0037s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... 
[00:07:20] ok (0.0035s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0107s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0053s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0030s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0019s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0012s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0027s)
[00:07:20] sk
[00:07:20] learn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0064s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0067s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0054s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... SKIP
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0001s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0035s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0003s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0046s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0023s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0125s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0002s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0081s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0035s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0036s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0032s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... 
[00:07:20] ok (0.0036s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0058s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0037s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0015s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0016s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0008s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0024s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0021s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0035s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0047s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0066s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0002s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0050s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0029s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0028s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0026s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... 
[00:07:20] ok (0.0030s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0145s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0089s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0024s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0029s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0022s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0055s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0047s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0035s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0164s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0060s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0048s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0013s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0061s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0020s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0121s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0122s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0049s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0022s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0067s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0089s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0043s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0042s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0045s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:20] ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0105s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0057s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0017s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0022s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0019s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0051s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0059s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0034s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0024s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0118s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0056s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0040s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0050s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0014s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0053s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0035s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0003s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0043s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0029s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0084s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0044s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0046s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0041s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... 
[00:07:20] ok (0.0042s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0172s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0095s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0041s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0028s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0024s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0056s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0053s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0044s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0037s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0201s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0084s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0051s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0016s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0064s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0024s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0131s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0162s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0076s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0023s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0071s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0114s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:20] ok (0.0047s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok (0.0051s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok (0.0043s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok (0.0048s)
[00:07:20] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:21] ok (0.3165s)
[00:07:21] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:21] ok (0.0800s)
[00:07:21] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:21] ok (0.1936s)
[00:07:21] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:21] ok (0.4814s)
[00:07:21] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:21] ok (0.0042s)
[00:07:21] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:22] ok (0.2995s)
[00:07:22] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:22] ok (0.1109s)
[00:07:22] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:22] ok (0.0202s)
[00:07:22] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:23] ok (0.8821s)
[00:07:23] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:23] ok (0.0836s)
[00:07:23] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:23] ok (0.1020s)
[00:07:23] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:23] ok (0.1132s)
[00:07:23] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:23] ok (0.0002s)
[00:07:23] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:24] ok (0.5710s)
[00:07:24] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:29] ok (4.9064s)
[00:07:29] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:29] ok (0.0048s)
[00:07:29] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:29] ok (0.8828s)
[00:07:29] sklearn.tests.test_common.test_non_meta_estimators('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... 
[00:07:30] ok (0.8994s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0099s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0043s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0020s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0016s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0009s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0051s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0025s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0022s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0038s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0065s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0027s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0008s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0035s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0002s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0116s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0069s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] C:\Python27\lib\site-packages\sklearn\discriminant_analysis.py:690: UserWarning: Variables are collinear
[00:07:30]   warnings.warn("Variables are collinear")
[00:07:30] ok (0.0033s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0026s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0094s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0027s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0032s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0030s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:30] ok (0.0028s)
[00:07:30] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0099s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0041s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0019s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0015s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0010s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0047s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0028s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0026s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0036s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0063s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0026s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0008s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0042s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0002s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0114s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0067s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] C:\Python27\lib\site-packages\sklearn\discriminant_analysis.py:690: UserWarning: Variables are collinear
[00:07:31]   warnings.warn("Variables are collinear")
[00:07:31] ok (0.0032s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0023s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0097s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0028s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0041s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0031s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... 
[00:07:31] ok (0.0028s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0317s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0112s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0153s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0047s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0020s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0106s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok (0.0181s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok (0.0062s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.2570s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0097s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0193s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0202s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0002s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0053s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0168s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0003s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0208s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0025s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0085s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0042s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0054s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0047s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... 
[00:07:31] ok (0.0042s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0069s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0035s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0012s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0011s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0011s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0041s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0023s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0018s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0054s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0061s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0034s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0061s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0002s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0054s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0030s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0029s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0029s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... 
[00:07:31] ok (0.0031s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0560s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0115s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0256s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0016s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0011s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0414s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0030s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.0028s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:31] ok (0.1961s)
[00:07:31] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0428s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0110s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0091s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0453s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0002s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.3360s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0072s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0163s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0026s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0067s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0033s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0038s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0032s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... 
[00:07:32] ok (0.0035s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0092s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0041s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0025s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0013s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0015s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0064s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0026s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0024s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0202s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0074s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0150s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0148s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0002s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0038s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0031s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0003s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0054s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0022s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0061s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0032s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0033s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0035s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... 
[00:07:32] ok (0.0033s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0647s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0173s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0137s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok (0.0133s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok (0.0023s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok (0.0288s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok (0.0268s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok (0.0157s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0999s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0223s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0263s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0130s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0285s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:32] ok (0.0002s)
[00:07:32] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0730s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0058s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0248s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0022s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0563s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0216s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0137s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0138s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0119s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... 
[00:07:33] ok (0.0134s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0518s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0136s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0202s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0110s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0025s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0238s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0217s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0124s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0881s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0209s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0527s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0413s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0003s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0140s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0275s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0003s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0286s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0028s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0206s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0148s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0145s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0144s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... 
[00:07:33] ok (0.0146s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0407s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0177s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0184s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0110s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0049s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0398s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0223s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0133s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0198s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0122s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0221s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0423s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:33] ok (0.0002s)
[00:07:33] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:34] ok (0.0128s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:34] ok (0.0048s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:34] ok (0.0082s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:34] ok (0.0047s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... 
[00:07:34] ok (0.0050s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0272s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0101s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0083s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0048s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0022s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0231s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0119s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0068s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.Rand
[00:07:34] omizedLogisticRegression'>) ... ok (0.0662s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0088s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0156s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0320s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0002s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0135s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0042s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0075s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0039s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... 
[00:07:34] ok (0.0040s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0085s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0046s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0023s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0017s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0015s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0055s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0033s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0025s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0038s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0048s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0043s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0082s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0002s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0055s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0033s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RandomizedPCA', <class 'sklearn.decomposition.pca.RandomizedPCA'>) ... 
[00:07:34] ok (0.0033s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0087s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0041s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0022s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0023s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0013s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0048s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0035s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0029s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0143s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0051s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0037s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0001s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0049s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0037s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0004s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0042s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0019s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0074s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0045s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0075s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0045s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0023s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0018s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0010s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0047s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0036s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0024s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0178s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0052s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0039s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0045s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0001s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0045s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0024s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0002s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0032s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0020s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0064s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0032s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0029s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0029s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... 
[00:07:34] ok (0.0029s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0105s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0043s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0027s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0024s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0018s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0054s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0053s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0205s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0054s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0043s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0013s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0050s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0001s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0122s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0168s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0042s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0021s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0056s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0074s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0038s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0047s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0043s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0090s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0038s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0024s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0023s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0026s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0059s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0043s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0026s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0188s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:34] ok (0.0051s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0032s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0013s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0040s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0001s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0112s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0142s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok
[00:07:34]  (0.0032s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0019s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0042s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0066s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0028s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0032s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0032s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (
[00:07:34] 0.0028s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0044s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0028s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0009s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0008s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0006s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0035s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0016s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScal
[00:07:34] er', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0013s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0031s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0023s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0048s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0001s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0041s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0024s)
[00:07:34] 
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... 
[00:07:34] ok (0.0031s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... 
[00:07:34] ok (0.0025s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... 
[00:07:34] ok (0.0026s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0147s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0059s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0029s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0030s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0024s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0052s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0056s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0048s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0029s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0177s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0063s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0056s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0014s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0090s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0034s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0194s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0179s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0089s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:34] ok (0.0030s)
[00:07:34] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:35] ok (0.0093s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:35] ok (0.0117s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:35] ok (0.0044s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:35] ok (0.0048s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:35] ok (0.0059s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:35] ok (0.0052s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0263s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0057s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0041s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0041s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0087s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0089s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0075s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0038s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0227s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0099s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0076s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0061s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0018s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0056s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0046s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0003s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0054s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0021s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0102s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0046s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0045s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0046s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:35] ok (0.0048s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0155s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0067s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0302s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0078s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0040s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0077s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0069s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0053s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0248s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0081s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0063s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0023s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0070s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0001s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0175s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0059s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0049s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0024s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0054s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0088s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0055s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0049s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0048s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:35] ok (0.0046s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0089s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0044s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0019s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0017s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0016s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0051s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0032s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0032s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0146s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0126s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0128s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0126s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0002s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0051s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0029s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0002s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0040s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0020s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0077s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0033s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:35] ok (0.0035s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok (0.0038s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SVR', <class 'sklearn.svm.classes.SVR'>) ... ok (0.0035s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0064s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0038s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0018s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0013s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0008s)
[00:07:35] sklearn.tests.test_common.test_non_met
[00:07:35] a_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0043s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0023s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0017s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0262s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0041s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0031s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0061s)
[00:07:35] sklearn.test
[00:07:35] s.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0002s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0050s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0030s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... ok (0.0028s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0053s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok (0.0032s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok (0.0015s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok (0.0011s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok (0.0006s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok (0.0066s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... ok (0.0019s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_s
[00:07:35] election.SelectFpr'>) ... ok (0.0017s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0255s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0045s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0028s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0052s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0002s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0043s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0024s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0024s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0025s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:35] ok (0.0024s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0054s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0033s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0015s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0010s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0006s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0038s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0021s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0016s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0237s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0046s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0032s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0060s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0003s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0050s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0025s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0025s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0025s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:35] ok (0.0026s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0066s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0036s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0017s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0014s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0007s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0041s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0022s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0019s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0253s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0038s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0031s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0060s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0002s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0046s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0028s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:35] ok (0.0026s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0058s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0037s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0016s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0022s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0007s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0040s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0019s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0016s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0248s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0048s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0033s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0056s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0002s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0047s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0029s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0025s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:35] ok (0.0026s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0055s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0034s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0013s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0010s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0007s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0035s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0018s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0015s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0040s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0039s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0026s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0025s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0027s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:35] ok (0.0026s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... 
[00:07:35] ok (0.0065s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... 
[00:07:35] ok (0.0033s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... 
[00:07:35] ok (0.0011s)
[00:07:35] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... 
[00:07:36] ok (0.0010s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0010s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0037s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0021s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0019s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0033s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0044s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sam
[00:07:36] pler'>) ... ok (0.0031s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0056s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0001s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0042s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0024s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0025s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... ok (0.0024s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.S
[00:07:36] kewedChi2Sampler'>) ... ok (0.0024s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0885s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0158s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0418s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0148s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0018s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0175s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0137s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0120s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0121s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0150s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0247s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0456s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0002s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0108s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0102s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0054s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0146s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:36] ok (0.0151s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0090s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0041s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0020s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0017s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0018s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0052s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0035s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0026s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0090s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0048s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0041s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0085s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0002s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0054s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0056s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0032s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0033s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:36] ok (0.0033s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0410s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0146s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0179s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0075s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0022s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0184s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0150s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0089s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0699s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0130s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0002s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0129s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0001s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0080s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0045s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0066s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0048s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:36] ok (0.0043s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0234s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0111s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0183s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0063s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0018s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0128s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0080s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0053s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0153s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:36] ok (0.0121s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok (0.0042s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok (0.0088s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok (0.0040s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... ok (0.0040s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0082s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0045s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] C:\Python27\lib\site-packages\sklearn\utils\validation.py:428: DataConversionWarning: Data with input dtype object was converted to float64 by StandardScaler.
[00:07:36]   warnings.warn(msg, _DataConversionWarning)
[00:07:36] ok (0.0012s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0012s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0009s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0047s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0023s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0020s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0077s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0049s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0031s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0059s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0002s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0059s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0033s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0038s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0034s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:36] ok (0.0033s)
[00:07:36] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.1605s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0337s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.1976s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0163s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0019s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.1975s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0353s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0179s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0049s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0522s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0294s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0043s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0176s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0040s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:37] ok (0.0040s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0315s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0087s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0190s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0072s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0017s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0152s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0133s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0052s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0065s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0097s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0297s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0313s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0001s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0102s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0126s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0002s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0250s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0023s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0123s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0038s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0050s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0036s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:37] ok (0.0038s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:37] ok (0.0349s)
[00:07:37] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0155s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0131s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0085s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0020s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0156s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0194s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0108s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0073s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0116s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0127s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0094s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:38] ok (0.0091s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok (0.0093s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... ok (0.0088s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0041s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0025s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0007s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0007s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_thres
[00:07:38] hold.VarianceThreshold'>) ... ok (0.0005s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0032s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0011s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0010s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0047s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0032s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0019
[00:07:38] s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0034s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0001s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0041s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0022s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0021s)
[00:07:38] sklearn.tests.test_common.test_non_meta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0023s)
[00:07:38] sklearn.tests.test_common.test_non_m
[00:07:38] eta_estimators('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... ok (0.0020s)
[00:07:38] sklearn.tests.test_common.test_configure ... ok (0.0002s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok (0.0028s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0028s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... 
[00:07:38] C:\Python27\lib\site-packages\sklearn\model_selection\_split.py:579: Warning: The least populated class in y has only 2 members, which is too few. The minimum number of labels for any class cannot be less than n_folds=3.
[00:07:38]   % (min_labels, self.n_folds)), Warning)
[00:07:38] ok (0.0824s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... 
[00:07:38] ok (0.0041s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... 
[00:07:38] ok (0.0039s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('RidgeClassifier', <class 'sklearn.linear_model.ridge.RidgeClassifier'>) ... 
[00:07:38] ok (0.0048s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... 
[00:07:38] ok (0.0034s)
[00:07:38] sklearn.tests.test_common.test_class_weight_balanced_linear_classifiers('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:38] ok (0.0047s)
[00:07:38] sklearn.tests.test_common.test_root_import_all_completeness ... 
[00:07:38] ok (0.0153s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('ElasticNet', ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5, ... 
[00:07:38] ok (0.0036s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('ElasticNetCV', ElasticNetCV(alphas=None, copy_X=True, cv=None, eps=0.001, fit_intercept=True, ... 
[00:07:38] ok (0.0368s)
[00:07:38] C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:52: DeprecationWarning: Class GaussianProcess is deprecated; GaussianProcess is deprecated and will be removed in 0.20. Use the GaussianProcessRegressor instead.
[00:07:38]   warnings.warn(msg, category=DeprecationWarning)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('HuberRegressor', HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100, ... 
[00:07:38] ok (0.0120s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LarsCV', LarsCV(copy_X=True, cv=None, eps=2.2204460492503131e-16, fit_intercept=True, ... 
[00:07:38] ok (0.0070s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('Lasso', Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, ... 
[00:07:38] ok (0.0035s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoCV', LassoCV(alphas=None, copy_X=True, cv=None, eps=0.001, fit_intercept=True, ... 
[00:07:38] ok (0.0358s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoLars', LassoLars(alpha=0.0, copy_X=True, eps=2.2204460492503131e-16, ... 
[00:07:38] ok (0.0036s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoLarsCV', LassoLarsCV(copy_X=True, cv=None, eps=2.2204460492503131e-16, ... 
[00:07:38] ok (0.0074s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LassoLarsIC', LassoLarsIC(copy_X=True, criterion='aic', eps=2.2204460492503131e-16, ... 
[00:07:38] ok (0.0037s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LinearSVR', LinearSVR(C=1.0, dual=True, epsilon=0.0, fit_intercept=True, ... 
[00:07:38] ok (0.0087s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MLPRegressor', MLPRegressor(activation='relu', algorithm='adam', alpha=0.0001, ... 
[00:07:38] ok (0.1267s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskElasticNet', MultiTaskElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5, ... 
[00:07:38] ok (0.0054s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskElasticNetCV', MultiTaskElasticNetCV(alphas=None, copy_X=True, cv=None, eps=0.001, ... 
[00:07:38] ok (0.0839s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskLasso', MultiTaskLasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, ... 
[00:07:38] ok (0.0034s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MultiTaskLassoCV', MultiTaskLassoCV(alphas=None, copy_X=True, cv=None, eps=0.001, ... 
[00:07:38] ok (0.0550s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('OrthogonalMatchingPursuitCV', OrthogonalMatchingPursuitCV(copy=True, cv=None, fit_intercept=True, ... 
[00:07:38] ok (0.0059s)
[00:07:38] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('TheilSenRegressor', TheilSenRegressor(copy_X=True, fit_intercept=True, max_iter=300, ... 
[00:07:39] ok (0.7712s)
[00:07:39] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LabelPropagation', LabelPropagation(alpha=1, gamma=20, kernel='rbf', max_iter=30, n_jobs=1, ... 
[00:07:39] C:\Python27\lib\site-packages\sklearn\metrics\pairwise.py:818: RuntimeWarning: underflow encountered in exp
[00:07:39]   np.exp(K, K)    # exponentiate K in-place
[00:07:39] C:\Python27\lib\site-packages\sklearn\semi_supervised\label_propagation.py:358: RuntimeWarning: underflow encountered in divide
[00:07:39]   affinity_matrix /= normalizer[:, np.newaxis]
[00:07:39] ok (0.0081s)
[00:07:39] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('LabelSpreading', LabelSpreading(alpha=0.2, gamma=20, kernel='rbf', max_iter=30, n_jobs=1, ... 
[00:07:39] C:\Python27\lib\site-packages\sklearn\utils\graph.py:175: RuntimeWarning: underflow encountered in divide
[00:07:39]   lap /= w
[00:07:39] C:\Python27\lib\site-packages\sklearn\utils\graph.py:176: RuntimeWarning: underflow encountered in divide
[00:07:39]   lap /= w[:, np.newaxis]
[00:07:39] ok (0.0080s)
[00:07:39] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MLPClassifier', MLPClassifier(activation='relu', algorithm='adam', alpha=0.0001, ... 
[00:07:39] C:\Python27\lib\site-packages\sklearn\neural_network\multilayer_perceptron.py:560: ConvergenceWarning: Stochastic Optimizer: Maximum iterations reached and the optimization hasn't converged yet.
[00:07:39]   % (), ConvergenceWarning)
[00:07:39] ok (0.1655s)
[00:07:39] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('AffinityPropagation', AffinityPropagation(affinity='euclidean', convergence_iter=15, copy=True, ... 
[00:07:39] C:\Python27\lib\site-packages\sklearn\cluster\affinity_propagation_.py:104: RuntimeWarning: underflow encountered in multiply
[00:07:39]   random_state.randn(n_samples, n_samples))
[00:07:39] ok (0.0257s)
[00:07:39] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('KMeans', KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300, ... 
[00:07:39] ok (0.0297s)
[00:07:39] sklearn.tests.test_common.test_non_transformer_estimators_n_iter('MiniBatchKMeans', MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++', ... 
[00:07:40] ok (0.0200s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('CCA', CCA(copy=True, max_iter=500, n_components=2, scale=True, tol=1e-06)) ... 
[00:07:40] ok (0.0028s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('DictionaryLearning', DictionaryLearning(alpha=1, code_init=None, dict_init=None, ... 
[00:07:40] ok (0.0234s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('FactorAnalysis', FactorAnalysis(copy=True, iterated_power=3, max_iter=1000, n_components=None, ... 
[00:07:40] ok (0.0031s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('FastICA', FastICA(algorithm='parallel', fun='logcosh', fun_args=None, max_iter=200, ... 
[00:07:40] ok (0.0043s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('KMeans', KMeans(algorithm='auto', copy_x=True, init='k-means++', max_iter=300, ... 
[00:07:40] ok (0.0196s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('LatentDirichletAllocation', LatentDirichletAllocation(batch_size=128, doc_topic_prior=None, ... 
[00:07:40] ok (0.0364s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('LinearSVC', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True, ... 
[00:07:40] ok (0.0027s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('LogisticRegression', LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True, ... 
[00:07:40] ok (0.0028s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('MiniBatchKMeans', MiniBatchKMeans(batch_size=100, compute_labels=True, init='k-means++', ... 
[00:07:40] ok (0.0145s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('NMF', NMF(alpha=0.0, beta=1, eta=0.1, init=None, l1_ratio=0.0, max_iter=200, ... 
[00:07:40] ok (0.0079s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('PLSCanonical', PLSCanonical(algorithm='nipals', copy=True, max_iter=500, n_components=2, ... 
[00:07:40] ok (0.0020s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('PLSRegression', PLSRegression(copy=True, max_iter=500, n_components=2, scale=True, tol=1e-06)) ... 
[00:07:40] ok (0.0022s)
[00:07:40] sklearn.tests.test_common.test_transformer_n_iter('ProjectedGradientNMF', ProjectedGradientNMF(alpha=0.0, beta=1, eta=0.1, init=None, l1_ratio=0.0, ... 
[00:07:41] ok (1.1196s)
[00:07:41] C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:52: DeprecationWarning: Class RandomizedPCA is deprecated; RandomizedPCA will be removed in 0.20. Use PCA(svd_solver='randomized') instead. The new implementation DOES NOT store whiten components_. Apply transform to get them.
[00:07:41]   warnings.warn(msg, category=DeprecationWarning)
[00:07:41] sklearn.tests.test_common.test_transformer_n_iter('SparsePCA', SparsePCA(U_init=None, V_init=None, alpha=1, max_iter=1000, method='lars', ... 
[00:07:41] ok (0.0058s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ARDRegression', <class 'sklearn.linear_model.bayes.ARDRegression'>) ... 
[00:07:41] ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('AdaBoostClassifier', <class 'sklearn.ensemble.weight_boosting.AdaBoostClassifier'>) ... 
[00:07:41] ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('AdaBoostRegressor', <class 'sklearn.ensemble.weight_boosting.AdaBoostRegressor'>) ... 
[00:07:41] ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('AdditiveChi2Sampler', <class 'sklearn.kernel_approximation.AdditiveChi2Sampler'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('AffinityPropagation', <class 'sklearn.cluster.affinity_propagation_.AffinityPropagation'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('AgglomerativeClustering', <class 'sklearn.cluster.hierarchical.AgglomerativeClustering'>) ... 
[00:07:41] ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('BaggingClassifier', <class 'sklearn.ensemble.bagging.BaggingClassifier'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('BaggingRegressor', <class 'sklearn.ensemble.bagging.BaggingRegressor'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('BayesianRidge', <class 'sklearn.linear_model.bayes.BayesianRidge'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('BernoulliNB', <class 'sklearn.naive_bayes.BernoulliNB'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('BernoulliRBM', <class 'sklearn.neural_network.rbm.BernoulliRBM'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Binarizer', <class 'sklearn.preprocessing.data.Binarizer'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Birch', <class 'sklearn.cluster.birch.Birch'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('CCA', <class 'sklearn.cross_decomposition.cca_.CCA'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('CalibratedClassifierCV', <class 'sklearn.calibration.CalibratedClassifierCV'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('DBSCAN', <class 'skle
[00:07:41] arn.cluster.dbscan_.DBSCAN'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('DPGMM', <class 'sklearn.mixture.dpgmm.DPGMM'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('DecisionTreeClassifier', <class 'sklearn.tree.tree.DecisionTreeClassifier'>) ... ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('DecisionTreeRegressor', <class 'sklearn.tree.tree.DecisionTreeRegressor'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('DictionaryLearning', <class 'sklearn.decomposition.dict_learning.DictionaryLearning'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ElasticNet', <class 'sklearn.linear_model.coordinate_descent.ElasticNet'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.ElasticNetCV'>) ... ok (0.0015s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('EmpiricalCovariance', <class 'sklearn.covariance.e
[00:07:41] mpirical_covariance_.EmpiricalCovariance'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ExtraTreeClassifier', <class 'sklearn.tree.tree.ExtraTreeClassifier'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ExtraTreeRegressor', <class 'sklearn.tree.tree.ExtraTreeRegressor'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ExtraTreesClassifier', <class 'sklearn.ensemble.forest.ExtraTreesClassifier'>) ... ok (0.0013s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ExtraTreesRegressor', <class 'sklearn.ensemble.forest.ExtraTreesRegressor'>) ... ok (0.0013s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('FactorAnalysis', <class 'sklearn.decomposition.factor_analysis.FactorAnalysis'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('FastICA', <class 'sklearn.decomposition.fastica_.FastICA'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('FeatureAgglomeration', <class 'sklearn.
[00:07:41] cluster.hierarchical.FeatureAgglomeration'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('FeatureUnion', <class 'sklearn.pipeline.FeatureUnion'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('FunctionTransformer', <class 'sklearn.preprocessing._function_transformer.FunctionTransformer'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GMM', <class 'sklearn.mixture.gmm.GMM'>) ... C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:52: DeprecationWarning: Class GMM is deprecated; The class GMM is deprecated and will be removed in 0.20. Use class GaussianMixture instead.
[00:07:41]   warnings.warn(msg, category=DeprecationWarning)
[00:07:41] ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GaussianMixture', <class 'sklearn.mixture.gaussian_mixture.GaussianMixture'>) ... ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GaussianNB', <class 'sklearn.naive_bayes.GaussianNB'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_com
[00:07:41] mon.test_get_params_invariance('GaussianProcess', <class 'sklearn.gaussian_process.gaussian_process.GaussianProcess'>) ... C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:52: DeprecationWarning: Class GaussianProcess is deprecated; GaussianProcess is deprecated and will be removed in 0.20. Use the GaussianProcessRegressor instead.
[00:07:41]   warnings.warn(msg, category=DeprecationWarning)
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GaussianProcessClassifier', <class 'sklearn.gaussian_process.gpc.GaussianProcessClassifier'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GaussianProcessRegressor', <class 'sklearn.gaussian_process.gpr.GaussianProcessRegressor'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GaussianRandomProjection', <class 'sklearn.random_projection.GaussianRandomProjection'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GenericUnivariateSelect', <class 'sklearn.feature_selection.univariat
[00:07:41] e_selection.GenericUnivariateSelect'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GradientBoostingClassifier', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingClassifier'>) ... ok (0.0017s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GradientBoostingRegressor', <class 'sklearn.ensemble.gradient_boosting.GradientBoostingRegressor'>) ... ok (0.0013s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GraphLasso', <class 'sklearn.covariance.graph_lasso_.GraphLasso'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GraphLassoCV', <class 'sklearn.covariance.graph_lasso_.GraphLassoCV'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GridSearchCV', <class 'sklearn.model_selection._search.GridSearchCV'>) ... ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('GridSearchCV', <class 'sklearn.grid_search.GridSearchCV'>) ... ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('HuberRegres
[00:07:41] sor', <class 'sklearn.linear_model.huber.HuberRegressor'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Imputer', <class 'sklearn.preprocessing.imputation.Imputer'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('IncrementalPCA', <class 'sklearn.decomposition.incremental_pca.IncrementalPCA'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('IsolationForest', <class 'sklearn.ensemble.iforest.IsolationForest'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Isomap', <class 'sklearn.manifold.isomap.Isomap'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KMeans', <class 'sklearn.cluster.k_means_.KMeans'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KNeighborsClassifier', <class 'sklearn.neighbors.classification.KNeighborsClassifier'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KNeighborsRegressor', <class 'sklearn.neighbors.regressio
[00:07:41] n.KNeighborsRegressor'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KernelCenterer', <class 'sklearn.preprocessing.data.KernelCenterer'>) ... ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KernelDensity', <class 'sklearn.neighbors.kde.KernelDensity'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KernelPCA', <class 'sklearn.decomposition.kernel_pca.KernelPCA'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('KernelRidge', <class 'sklearn.kernel_ridge.KernelRidge'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LDA', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LSHForest', <class 'sklearn.neighbors.approximate.LSHForest'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LabelPropagation', <class 'sklearn.semi_supervised.label_propagation.LabelPropagation'>) ... ok (0.00
[00:07:41] 08s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LabelSpreading', <class 'sklearn.semi_supervised.label_propagation.LabelSpreading'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Lars', <class 'sklearn.linear_model.least_angle.Lars'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LarsCV', <class 'sklearn.linear_model.least_angle.LarsCV'>) ... ok (0.0015s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Lasso', <class 'sklearn.linear_model.coordinate_descent.Lasso'>) ... ok (0.0014s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LassoCV', <class 'sklearn.linear_model.coordinate_descent.LassoCV'>) ... ok (0.0018s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LassoLars', <class 'sklearn.linear_model.least_angle.LassoLars'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LassoLarsCV', <class 'sklearn.linear_model.least_angle.LassoLarsCV'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_i
[00:07:41] nvariance('LassoLarsIC', <class 'sklearn.linear_model.least_angle.LassoLarsIC'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LatentDirichletAllocation', <class 'sklearn.decomposition.online_lda.LatentDirichletAllocation'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LedoitWolf', <class 'sklearn.covariance.shrunk_covariance_.LedoitWolf'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LinearDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.LinearDiscriminantAnalysis'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LinearRegression', <class 'sklearn.linear_model.base.LinearRegression'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LinearSVC', <class 'sklearn.svm.classes.LinearSVC'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LinearSVR', <class 'sklearn.svm.classes.LinearSVR'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_inva
[00:07:41] riance('LocallyLinearEmbedding', <class 'sklearn.manifold.locally_linear.LocallyLinearEmbedding'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LogisticRegression', <class 'sklearn.linear_model.logistic.LogisticRegression'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('LogisticRegressionCV', <class 'sklearn.linear_model.logistic.LogisticRegressionCV'>) ... ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MDS', <class 'sklearn.manifold.mds.MDS'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MLPClassifier', <class 'sklearn.neural_network.multilayer_perceptron.MLPClassifier'>) ... ok (0.0014s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MLPRegressor', <class 'sklearn.neural_network.multilayer_perceptron.MLPRegressor'>) ... ok (0.0015s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MaxAbsScaler', <class 'sklearn.preprocessing.data.MaxAbsScaler'>) ... ok (0.0004s)
[00:07:41] sklearn.tests.test_common.test_
[00:07:41] get_params_invariance('MeanShift', <class 'sklearn.cluster.mean_shift_.MeanShift'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MinCovDet', <class 'sklearn.covariance.robust_covariance.MinCovDet'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MinMaxScaler', <class 'sklearn.preprocessing.data.MinMaxScaler'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MiniBatchDictionaryLearning', <class 'sklearn.decomposition.dict_learning.MiniBatchDictionaryLearning'>) ... ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MiniBatchKMeans', <class 'sklearn.cluster.k_means_.MiniBatchKMeans'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MiniBatchSparsePCA', <class 'sklearn.decomposition.sparse_pca.MiniBatchSparsePCA'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MultiTaskElasticNet', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNet'>) ... ok (0.0008s)
[00:07:41] sk
[00:07:41] learn.tests.test_common.test_get_params_invariance('MultiTaskElasticNetCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskElasticNetCV'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MultiTaskLasso', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLasso'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MultiTaskLassoCV', <class 'sklearn.linear_model.coordinate_descent.MultiTaskLassoCV'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('MultinomialNB', <class 'sklearn.naive_bayes.MultinomialNB'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('NMF', <class 'sklearn.decomposition.nmf.NMF'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('NearestCentroid', <class 'sklearn.neighbors.nearest_centroid.NearestCentroid'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('NearestNeighbors', <class 'sklearn.neighbors.unsupervised.NearestNeighbors'>) ... ok 
[00:07:41] (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Normalizer', <class 'sklearn.preprocessing.data.Normalizer'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('NuSVC', <class 'sklearn.svm.classes.NuSVC'>) ... ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('NuSVR', <class 'sklearn.svm.classes.NuSVR'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Nystroem', <class 'sklearn.kernel_approximation.Nystroem'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('OAS', <class 'sklearn.covariance.shrunk_covariance_.OAS'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('OneClassSVM', <class 'sklearn.svm.classes.OneClassSVM'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('OrthogonalMatchingPursuit', <class 'sklearn.linear_model.omp.OrthogonalMatchingPursuit'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('OrthogonalMatchingPursuitCV', <class 
[00:07:41] 'sklearn.linear_model.omp.OrthogonalMatchingPursuitCV'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('PCA', <class 'sklearn.decomposition.pca.PCA'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('PLSCanonical', <class 'sklearn.cross_decomposition.pls_.PLSCanonical'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('PLSRegression', <class 'sklearn.cross_decomposition.pls_.PLSRegression'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('PLSSVD', <class 'sklearn.cross_decomposition.pls_.PLSSVD'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('PassiveAggressiveClassifier', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveClassifier'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('PassiveAggressiveRegressor', <class 'sklearn.linear_model.passive_aggressive.PassiveAggressiveRegressor'>) ... ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invari
[00:07:41] ance('Perceptron', <class 'sklearn.linear_model.perceptron.Perceptron'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Pipeline', <class 'sklearn.pipeline.Pipeline'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ProjectedGradientNMF', <class 'sklearn.decomposition.nmf.ProjectedGradientNMF'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('QDA', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('QuadraticDiscriminantAnalysis', <class 'sklearn.discriminant_analysis.QuadraticDiscriminantAnalysis'>) ... ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RANSACRegressor', <class 'sklearn.linear_model.ransac.RANSACRegressor'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RBFSampler', <class 'sklearn.kernel_approximation.RBFSampler'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('R
[00:07:41] adiusNeighborsClassifier', <class 'sklearn.neighbors.classification.RadiusNeighborsClassifier'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RadiusNeighborsRegressor', <class 'sklearn.neighbors.regression.RadiusNeighborsRegressor'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomForestClassifier', <class 'sklearn.ensemble.forest.RandomForestClassifier'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomForestRegressor', <class 'sklearn.ensemble.forest.RandomForestRegressor'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomizedLasso', <class 'sklearn.linear_model.randomized_l1.RandomizedLasso'>) ... ok (0.0011s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomizedLogisticRegression', <class 'sklearn.linear_model.randomized_l1.RandomizedLogisticRegression'>) ... ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomizedPCA', <class 'sklearn.decomposition.pca.Ran
[00:07:41] domizedPCA'>) ... C:\Python27\lib\site-packages\sklearn\utils\deprecation.py:52: DeprecationWarning: Class RandomizedPCA is deprecated; RandomizedPCA will be removed in 0.20. Use PCA(svd_solver='randomized') instead. The new implementation DOES NOT store whiten components_. Apply transform to get them.
[00:07:41]   warnings.warn(msg, category=DeprecationWarning)
[00:07:41] ok (0.0006s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomizedSearchCV', <class 'sklearn.grid_search.RandomizedSearchCV'>) ... ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RandomizedSearchCV', <class 'sklearn.model_selection._search.RandomizedSearchCV'>) ... ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('Ridge', <class 'sklearn.linear_model.ridge.Ridge'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RidgeCV', <class 'sklearn.linear_model.ridge.RidgeCV'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RidgeClassifier', <class 'sklearn.linear_model.rid
[00:07:41] ge.RidgeClassifier'>) ... ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RidgeClassifierCV', <class 'sklearn.linear_model.ridge.RidgeClassifierCV'>) ... ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('RobustScaler', <class 'sklearn.preprocessing.data.RobustScaler'>) ... ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SGDClassifier', <class 'sklearn.linear_model.stochastic_gradient.SGDClassifier'>) ... 
[00:07:41] ok (0.0020s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SGDRegressor', <class 'sklearn.linear_model.stochastic_gradient.SGDRegressor'>) ... 
[00:07:41] ok (0.0012s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SVC', <class 'sklearn.svm.classes.SVC'>) ... 
[00:07:41] ok (0.0017s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SVR', <class 'sklearn.svm.classes.SVR'>) ... 
[00:07:41] ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SelectFdr', <class 'sklearn.feature_selection.univariate_selection.SelectFdr'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SelectFpr', <class 'sklearn.feature_selection.univariate_selection.SelectFpr'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SelectFromModel', <class 'sklearn.feature_selection.from_model.SelectFromModel'>) ... 
[00:07:41] ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SelectFwe', <class 'sklearn.feature_selection.univariate_selection.SelectFwe'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SelectKBest', <class 'sklearn.feature_selection.univariate_selection.SelectKBest'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SelectPercentile', <class 'sklearn.feature_selection.univariate_selection.SelectPercentile'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('ShrunkCovariance', <class 'sklearn.covariance.shrunk_covariance_.ShrunkCovariance'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SkewedChi2Sampler', <class 'sklearn.kernel_approximation.SkewedChi2Sampler'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SparsePCA', <class 'sklearn.decomposition.sparse_pca.SparsePCA'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SparseRandomProjection', <class 'sklearn.random_projection.SparseRandomProjection'>) ... 
[00:07:41] ok (0.0007s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SpectralBiclustering', <class 'sklearn.cluster.bicluster.SpectralBiclustering'>) ... 
[00:07:41] ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SpectralClustering', <class 'sklearn.cluster.spectral.SpectralClustering'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SpectralCoclustering', <class 'sklearn.cluster.bicluster.SpectralCoclustering'>) ... 
[00:07:41] ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('SpectralEmbedding', <class 'sklearn.manifold.spectral_embedding_.SpectralEmbedding'>) ... 
[00:07:41] ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('StandardScaler', <class 'sklearn.preprocessing.data.StandardScaler'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('TSNE', <class 'sklearn.manifold.t_sne.TSNE'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('TheilSenRegressor', <class 'sklearn.linear_model.theil_sen.TheilSenRegressor'>) ... 
[00:07:41] ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('VBGMM', <class 'sklearn.mixture.dpgmm.VBGMM'>) ... 
[00:07:41] ok (0.0010s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('VarianceThreshold', <class 'sklearn.feature_selection.variance_threshold.VarianceThreshold'>) ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('_BaseRidgeCV', <class 'sklearn.linear_model.ridge._BaseRidgeCV'>) ... 
[00:07:41] ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('_BinaryGaussianProcessClassifierLaplace', <class 'sklearn.gaussian_process.gpc._BinaryGaussianProcessClassifierLaplace'>) ... 
[00:07:41] ok (0.0008s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('_ConstantPredictor', <class 'sklearn.multiclass._ConstantPredictor'>) ... 
[00:07:41] ok (0.0001s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('_GMMBase', <class 'sklearn.mixture.gmm._GMMBase'>) ... 
[00:07:41] ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_get_params_invariance('_RidgeGCV', <class 'sklearn.linear_model.ridge._RidgeGCV'>) ... 
[00:07:41] ok (0.0009s)
[00:07:41] sklearn.tests.test_common.test_import_all_consistency ... 
[00:07:41] ok (0.0425s)
[00:07:41] sklearn.tests.test_cross_validation.test_kfold_valueerrors ... 
[00:07:41] ok (0.0035s)
[00:07:41] sklearn.tests.test_cross_validation.test_kfold_indices ... 
[00:07:41] ok (0.0008s)
[00:07:41] sklearn.tests.test_cross_validation.test_kfold_no_shuffle ... 
[00:07:41] ok (0.0006s)
[00:07:41] sklearn.tests.test_cross_validation.test_stratified_kfold_no_shuffle ... 
[00:07:41] ok (0.0011s)
[00:07:41] sklearn.tests.test_cross_validation.test_stratified_kfold_ratios ... 
[00:07:41] ok (0.0048s)
[00:07:41] sklearn.tests.test_cross_validation.test_kfold_balance ... 
[00:07:41] ok (0.0013s)
[00:07:41] sklearn.tests.test_cross_validation.test_stratifiedkfold_balance ... 
[00:07:41] ok (0.0055s)
[00:07:41] sklearn.tests.test_cross_validation.test_shuffle_kfold ... 
[00:07:41] ok (0.0005s)
[00:07:41] sklearn.tests.test_cross_validation.test_shuffle_stratifiedkfold ... 
[00:07:41] ok (0.0013s)
[00:07:41] sklearn.tests.test_cross_validation.test_kfold_can_detect_dependent_samples_on_digits ... 
[00:07:44] ok (2.4143s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_generator_with_default_indices ... 
[00:07:44] ok (0.0038s)
[00:07:44] sklearn.tests.test_cross_validation.test_label_kfold ... 
[00:07:44] ok (0.0151s)
[00:07:44] sklearn.tests.test_cross_validation.test_shuffle_split ... 
[00:07:44] ok (0.0035s)
[00:07:44] sklearn.tests.test_cross_validation.test_stratified_shuffle_split_init ... 
[00:07:44] ok (0.0005s)
[00:07:44] sklearn.tests.test_cross_validation.test_stratified_shuffle_split_iter ... 
[00:07:44] ok (0.0189s)
[00:07:44] sklearn.tests.test_cross_validation.test_stratified_shuffle_split_even ... 
[00:07:44] ok (0.1345s)
[00:07:44] sklearn.tests.test_cross_validation.test_stratified_shuffle_split_overlap_train_test_bug ... 
[00:07:44] ok (0.0008s)
[00:07:44] sklearn.tests.test_cross_validation.test_predefinedsplit_with_kfold_split ... 
[00:07:44] ok (0.0008s)
[00:07:44] sklearn.tests.test_cross_validation.test_label_shuffle_split ... 
[00:07:44] ok (0.0090s)
[00:07:44] sklearn.tests.test_cross_validation.test_leave_label_out_changing_labels ... 
[00:07:44] ok (0.0010s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score ... 
[00:07:44] ok (0.2165s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_pandas ... 
[00:07:44] ok (0.0034s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_mask ... 
[00:07:44] ok (0.0209s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_precomputed ... 
[00:07:44] ok (0.0191s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_fit_params ... 
[00:07:44] ok (0.0025s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_score_func ... 
[00:07:44] ok (0.0007s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_errors ... 
[00:07:44] ok (0.0002s)
[00:07:44] sklearn.tests.test_cross_validation.test_train_test_split_errors ... 
[00:07:44] ok (0.0007s)
[00:07:44] sklearn.tests.test_cross_validation.test_train_test_split ... 
[00:07:44] ok (0.0034s)
[00:07:44] sklearn.tests.test_cross_validation.train_test_split_pandas ... 
[00:07:44] ok (0.0009s)
[00:07:44] sklearn.tests.test_cross_validation.train_test_split_mock_pandas ... 
[00:07:44] ok (0.0002s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_classification ... 
[00:07:44] ok (0.0411s)
[00:07:44] sklearn.tests.test_cross_validation.test_cross_val_score_with_score_func_regression ... 
[00:07:44] ok (0.0718s)
[00:07:44] sklearn.tests.test_cross_validation.test_permutation_score ... 
[00:07:45] ok (0.8013s)
[00:07:45] sklearn.tests.test_cross_validation.test_cross_val_generator_with_indices ... 
[00:07:45] ok (0.0019s)
[00:07:45] sklearn.tests.test_cross_validation.test_shufflesplit_errors ... 
[00:07:45] ok (0.0003s)
[00:07:45] sklearn.tests.test_cross_validation.test_shufflesplit_reproducible ... 
[00:07:45] ok (0.0005s)
[00:07:45] sklearn.tests.test_cross_validation.test_safe_split_with_precomputed_kernel ... 
[00:07:45] ok (0.0047s)
[00:07:45] sklearn.tests.test_cross_validation.test_cross_val_score_allow_nans ... 
[00:07:45] ok (0.0111s)
[00:07:45] sklearn.tests.test_cross_validation.test_train_test_split_allow_nans ... 
[00:07:45] ok (0.0003s)
[00:07:45] sklearn.tests.test_cross_validation.test_permutation_test_score_allow_nans ... 
[00:07:45] ok (0.4903s)
[00:07:45] sklearn.tests.test_cross_validation.test_check_cv_return_types ... 
[00:07:45] ok (0.0013s)
[00:07:45] sklearn.tests.test_cross_validation.test_cross_val_score_multilabel ... 
[00:07:45] ok (0.0607s)
[00:07:45] sklearn.tests.test_cross_validation.test_cross_val_predict ... 
[00:07:47] ok (1.0663s)
[00:07:47] sklearn.tests.test_cross_validation.test_cross_val_predict_input_types ... 
[00:07:47] C:\Python27\lib\site-packages\sklearn\linear_model\sag.py:286: ConvergenceWarning: The max_iter was reached which means the coef_ did not converge
[00:07:47]   "the coef_ did not converge", ConvergenceWarning)
[00:07:47] ok (0.0421s)
[00:07:47] sklearn.tests.test_cross_validation.test_cross_val_predict_pandas ... 
[00:07:47] ok (0.0029s)
[00:07:47] sklearn.tests.test_cross_validation.test_sparse_fit_params ... 
[00:07:47] ok (0.0039s)
[00:07:47] sklearn.tests.test_cross_validation.test_check_is_partition ... 
[00:07:47] ok (0.0002s)
[00:07:47] sklearn.tests.test_cross_validation.test_cross_val_predict_sparse_prediction ... 
[00:07:47] ok (0.1589s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_predict ... 
[00:07:47] ok (0.0382s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_priors ... 
[00:07:47] ok (0.0039s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_coefs ... 
[00:07:47] ok (0.0041s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_transform ... 
[00:07:47] ok (0.0023s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_explained_variance_ratio ... 
[00:07:47] ok (0.0027s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_orthogonality ... 
[00:07:47] ok (0.0014s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_lda_scaling ... 
[00:07:47] ok (0.0031s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_qda ... 
[00:07:47] ok (0.0027s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_qda_priors ... 
[00:07:47] ok (0.0011s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_qda_store_covariances ... 
[00:07:47] ok (0.0012s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_qda_regularization ... 
[00:07:47] ok (0.0117s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_deprecated_lda_qda_deprecation ... 
[00:07:47] ok (0.0040s)
[00:07:47] sklearn.tests.test_discriminant_analysis.test_covariance ... 
[00:07:47] ok (0.0013s)
[00:07:47] sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy ... 
[00:07:47] ok (0.0057s)
[00:07:47] sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_multioutput ... 
[00:07:47] ok (0.0106s)
[00:07:47] sklearn.tests.test_dummy.test_stratified_strategy ... 
[00:07:47] ok (0.0045s)
[00:07:47] sklearn.tests.test_dummy.test_stratified_strategy_multioutput ... 
[00:07:47] ok (0.0122s)
[00:07:47] sklearn.tests.test_dummy.test_uniform_strategy ... 
[00:07:47] ok (0.0045s)
[00:07:47] sklearn.tests.test_dummy.test_uniform_strategy_multioutput ... 
[00:07:47] ok (0.0124s)
[00:07:47] sklearn.tests.test_dummy.test_string_labels ... 
[00:07:47] ok (0.0007s)
[00:07:47] sklearn.tests.test_dummy.test_classifier_exceptions ... 
[00:07:47] ok (0.0002s)
[00:07:47] sklearn.tests.test_dummy.test_mean_strategy_regressor ... 
[00:07:47] ok (0.0005s)
[00:07:47] sklearn.tests.test_dummy.test_mean_strategy_multioutput_regressor ... 
[00:07:47] ok (0.0023s)
[00:07:47] sklearn.tests.test_dummy.test_regressor_exceptions ... 
[00:07:47] ok (0.0002s)
[00:07:47] sklearn.tests.test_dummy.test_median_strategy_regressor ... 
[00:07:47] ok (0.0005s)
[00:07:47] sklearn.tests.test_dummy.test_median_strategy_multioutput_regressor ... 
[00:07:47] ok (0.0020s)
[00:07:47] sklearn.tests.test_dummy.test_quantile_strategy_regressor ... 
[00:07:47] ok (0.0014s)
[00:07:47] sklearn.tests.test_dummy.test_quantile_strategy_multioutput_regressor ... 
[00:07:47] ok (0.0060s)
[00:07:47] sklearn.tests.test_dummy.test_quantile_invalid ... 
[00:07:47] ok (0.0008s)
[00:07:47] sklearn.tests.test_dummy.test_quantile_strategy_empty_train ... 
[00:07:47] ok (0.0002s)
[00:07:47] sklearn.tests.test_dummy.test_constant_strategy_regressor ... 
[00:07:47] ok (0.0008s)
[00:07:47] sklearn.tests.test_dummy.test_constant_strategy_multioutput_regressor ... 
[00:07:47] ok (0.0019s)
[00:07:47] sklearn.tests.test_dummy.test_y_mean_attribute_regressor ... 
[00:07:47] ok (0.0004s)
[00:07:47] sklearn.tests.test_dummy.test_unknown_strategey_regressor ... 
[00:07:47] ok (0.0002s)
[00:07:47] sklearn.tests.test_dummy.test_constants_not_specified_regressor ... 
[00:07:47] ok (0.0003s)
[00:07:47] sklearn.tests.test_dummy.test_constant_size_multioutput_regressor ... 
[00:07:47] ok (0.0003s)
[00:07:47] sklearn.tests.test_dummy.test_constant_strategy ... 
[00:07:47] ok (0.0072s)
[00:07:47] sklearn.tests.test_dummy.test_constant_strategy_multioutput ... 
[00:07:47] ok (0.0031s)
[00:07:47] sklearn.tests.test_dummy.test_constant_strategy_exceptions ... 
[00:07:47] ok (0.0002s)
[00:07:47] sklearn.tests.test_dummy.test_classification_sample_weight ... 
[00:07:47] ok (0.0004s)
[00:07:47] sklearn.tests.test_dummy.test_constant_strategy_sparse_target ... 
[00:07:47] ok (0.0014s)
[00:07:47] sklearn.tests.test_dummy.test_uniform_strategy_sparse_target_warning ... 
[00:07:47] ok (0.0030s)
[00:07:47] sklearn.tests.test_dummy.test_stratified_strategy_sparse_target ... 
[00:07:47] ok (0.0033s)
[00:07:47] sklearn.tests.test_dummy.test_most_frequent_and_prior_strategy_sparse_target ... 
[00:07:47] ok (0.0019s)
[00:07:47] sklearn.tests.test_dummy.test_dummy_regressor_sample_weight ... 
[00:07:47] ok (0.0005s)
[00:07:47] sklearn.tests.test_grid_search.test_parameter_grid ... 
[00:07:47] ok (0.0006s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search ... 
[00:07:47] [Parallel(n_jobs=1)]: Done   9 out of   9 | elapsed:    0.0s finished
[00:07:47] ok (0.0017s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_score_method ... 
[00:07:47] ok (0.0610s)
[00:07:47] sklearn.tests.test_grid_search.test_trivial_grid_scores ... 
[00:07:47] ok (0.0014s)
[00:07:47] sklearn.tests.test_grid_search.test_no_refit ... ok (0.0013s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_error ... ok (0.0023s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_iid ... ok (0.0263s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_one_grid_point ... ok (0.0407s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_bad_param_grid ... ok (0.0002s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_sparse ... 
[00:07:47] ok (0.0708s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_no_score ... 
[00:07:47] ok (0.0605s)
[00:07:47] sklearn.tests.test_grid_search.test_refit ... 
[00:07:47] ok (0.0111s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_sparse_scoring ... 
[00:07:47] ok (0.1118s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel ... 
[00:07:47] ok (0.0404s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel_error_nonsquare ... 
[00:07:47] ok (0.0041s)
[00:07:47] sklearn.tests.test_grid_search.test_grid_search_precomputed_kernel_error_kernel_function ... 
[00:07:47] ok (0.0050s)
[00:07:47] sklearn.tests.test_grid_search.test_gridsearch_nd ... 
[00:07:47] ok (0.0109s)
[00:07:47] sklearn.tests.test_grid_search.test_X_as_list ... 
[00:07:47] ok (0.0091s)
[00:07:47] sklearn.tests.test_grid_search.test_y_as_list ... 
[00:07:47] ok (0.0091s)
[00:07:47] sklearn.tests.test_grid_search.test_pandas_input ... 
[00:07:47] ok (0.0096s)
[00:07:47] sklearn.tests.test_grid_search.test_unsupervised_grid_search ... 
[00:07:48] ok (0.3486s)
[00:07:48] sklearn.tests.test_grid_search.test_gridsearch_no_predict ... 
[00:07:48] ok (0.0170s)
[00:07:48] sklearn.tests.test_grid_search.test_param_sampler ... 
[00:07:48] ok (0.0015s)
[00:07:48] sklearn.tests.test_grid_search.test_randomized_search_grid_scores ... 
[00:07:48] ok (0.6430s)
[00:07:48] sklearn.tests.test_grid_search.test_grid_search_score_consistency ... 
[00:07:48] ok (0.0937s)
[00:07:48] sklearn.tests.test_grid_search.test_pickle ... 
[00:07:48] ok (0.0038s)
[00:07:48] sklearn.tests.test_grid_search.test_grid_search_with_multioutput_data ... 
[00:07:49] ok (0.1755s)
[00:07:49] sklearn.tests.test_grid_search.test_predict_proba_disabled ... 
[00:07:49] ok (0.0063s)
[00:07:49] sklearn.tests.test_grid_search.test_grid_search_allows_nans ... 
[00:07:49] ok (0.0154s)
[00:07:49] sklearn.tests.test_grid_search.test_grid_search_failing_classifier ... 
[00:07:49] ok (0.0174s)
[00:07:49] sklearn.tests.test_grid_search.test_grid_search_failing_classifier_raise ... 
[00:07:49] ok (0.0059s)
[00:07:49] sklearn.tests.test_grid_search.test_parameters_sampler_replacement ... 
[00:07:49] ok (0.0028s)
[00:07:49] sklearn.tests.test_init.test_import_skl ... 
[00:07:49] ok (0.0001s)
[00:07:49] sklearn.tests.test_isotonic.test_permutation_invariance ... 
[00:07:49] ok (0.0009s)
[00:07:49] sklearn.tests.test_isotonic.test_check_increasing_up ... 
[00:07:49] ok (0.0027s)
[00:07:49] sklearn.tests.test_isotonic.test_check_increasing_up_extreme ... 
[00:07:49] ok (0.0026s)
[00:07:49] sklearn.tests.test_isotonic.test_check_increasing_down ... 
[00:07:49] ok (0.0026s)
[00:07:49] sklearn.tests.test_isotonic.test_check_increasing_down_extreme ... 
[00:07:49] ok (0.0027s)
[00:07:49] sklearn.tests.test_isotonic.test_check_ci_warn ... 
[00:07:49] ok (0.0029s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression ... 
[00:07:49] ok (0.0022s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_ties_min ... 
[00:07:49] ok (0.0013s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_ties_max ... 
[00:07:49] ok (0.0013s)
[00:07:49] Test isotonic regression fit, transform  and fit_transform ... 
[00:07:49] ok (0.0011s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_reversed ... 
[00:07:49] ok (0.0005s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_auto_decreasing ... 
[00:07:49] ok (0.0013s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_auto_increasing ... 
[00:07:49] ok (0.0015s)
[00:07:49] sklearn.tests.test_isotonic.test_assert_raises_exceptions ... 
[00:07:49] ok (0.0009s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_sample_weight_parameter_default_value ... 
[00:07:49] ok (0.0009s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_min_max_boundaries ... 
[00:07:49] ok (0.0005s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_sample_weight ... 
[00:07:49] ok (0.0005s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_oob_raise ... 
[00:07:49] ok (0.0013s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_oob_clip ... 
[00:07:49] ok (0.0014s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_oob_nan ... 
[00:07:49] ok (0.0014s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad ... 
[00:07:49] ok (0.0019s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_oob_bad_after ... 
[00:07:49] ok (0.0017s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_regression_pickle ... 
[00:07:49] ok (0.0035s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_duplicate_min_entry ... 
[00:07:49] ok (0.0006s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_zero_weight_loop ... 
[00:07:49] ok (0.0009s)
[00:07:49] sklearn.tests.test_isotonic.test_fast_predict ... 
[00:07:49] ok (0.0024s)
[00:07:49] sklearn.tests.test_isotonic.test_isotonic_copy_before_fit ... 
[00:07:49] ok (0.0002s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_additive_chi2_sampler ... 
[00:07:49] ok (0.1116s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_skewed_chi2_sampler ... 
[00:07:49] ok (0.2363s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_rbf_sampler ... 
[00:07:49] ok (0.0389s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_input_validation ... ok (0.0010s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_nystroem_approximation ... ok (0.0059s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_nystroem_singular_kernel ... ok (0.0012s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_nystroem_poly_kernel_params ... ok (0.0008s)
[00:07:49] sklearn.tests.test_kernel_approximation.test_nystroem_callable ... ok (0.0006s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge ... ok (0.0014s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge_csr ... ok (0.0043s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge_csc ... ok (0.0042s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge_singular_kernel ... ok (0.0072s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed ... ok (0.0089s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge_precomputed_kernel_unchanged ... ok (0.0013s)
[00:07:49] sklearn.tests.test_kernel_ridge.test_kernel_ridge_sample_weights ... ok (0.0025s)
[00:07:49] sklearn.tests.test_kernel_ri
[00:07:49] dge.test_kernel_ridge_multi_output ... ok (0.0020s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve ... ok (0.0137s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_unsupervised ... ok (0.0120s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_verbose ... [Parallel(n_jobs=1)]: Done  15 out of  15 | elapsed:    0.0s finished
[00:07:49] ok (0.0065s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning_not_possible ... ok (0.0003s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning ... ok (0.0034s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_incremental_learning_unsupervised ... ok (0.0031s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_batch_and_incremental_learning_are_equal ... ok (0.0381s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_n_sample_range_out_of_bounds ... ok (0.0011s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_remove_duplicate_sample_sizes ... 
[00:07:49] ok (0.0057s)
[00:07:49] sklearn.tests.test_learning_curve.test_learning_curve_with_boolean_indices ... 
[00:07:49] ok (0.0121s)
[00:07:49] sklearn.tests.test_learning_curve.test_validation_curve ... 
[00:07:49] ok (0.0055s)
[00:07:49] sklearn.tests.test_metaestimators.test_metaestimator_delegation ... 
[00:07:49] ok (0.0493s)
[00:07:49] sklearn.tests.test_multiclass.test_ovr_exceptions ... 
[00:07:49] ok (0.0004s)
[00:07:49] sklearn.tests.test_multiclass.test_check_classification_targets ... 
[00:07:49] ok (0.0002s)
[00:07:49] sklearn.tests.test_multiclass.test_ovr_fit_predict ... 
[00:07:49] ok (0.0313s)
[00:07:49] sklearn.tests.test_multiclass.test_ovr_partial_fit ... 
[00:07:49] ok (0.0256s)
[00:07:49] sklearn.tests.test_multiclass.test_ovr_ovo_regressor ... 
[00:07:49] ok (0.0095s)
[00:07:49] sklearn.tests.test_multiclass.test_ovr_fit_predict_sparse ... 
[00:07:50] ok (0.1992s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_always_present ... 
[00:07:50] ok (0.0104s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_multiclass ... 
[00:07:50] ok (0.0503s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_binary ... 
[00:07:50] ok (0.0341s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_multilabel ... 
[00:07:50] ok (0.0322s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_fit_predict_svc ... 
[00:07:50] ok (0.0074s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_multilabel_dataset ... 
[00:07:50] ok (0.0394s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_multilabel_predict_proba ... 
[00:07:50] ok (0.0779s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_single_label_predict_proba ... 
[00:07:50] ok (0.0115s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_multilabel_decision_function ... 
[00:07:50] ok (0.0205s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_single_label_decision_function ... 
[00:07:50] ok (0.0038s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_gridsearch ... 
[00:07:50] ok (0.1436s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_pipeline ... 
[00:07:50] ok (0.0131s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_coef_ ... 
[00:07:50] ok (0.0553s)
[00:07:50] sklearn.tests.test_multiclass.test_ovr_coef_exceptions ... 
[00:07:50] ok (0.0052s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_exceptions ... 
[00:07:50] ok (0.0001s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_fit_on_list ... 
[00:07:50] ok (0.0170s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_fit_predict ... 
[00:07:50] ok (0.0125s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_partial_fit_predict ... 
[00:07:50] ok (0.0215s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_decision_function ... 
[00:07:50] ok (0.0092s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_gridsearch ... 
[00:07:50] ok (0.0977s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_ties ... 
[00:07:50] ok (0.0052s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_ties2 ... 
[00:07:50] ok (0.0138s)
[00:07:50] sklearn.tests.test_multiclass.test_ovo_string_y ... 
[00:07:50] ok (0.0087s)
[00:07:50] sklearn.tests.test_multiclass.test_ecoc_exceptions ... 
[00:07:50] ok (0.0001s)
[00:07:50] sklearn.tests.test_multiclass.test_ecoc_fit_predict ... 
[00:07:50] ok (0.0287s)
[00:07:50] sklearn.tests.test_multiclass.test_ecoc_gridsearch ... 
[00:07:51] ok (0.1774s)
[00:07:51] sklearn.tests.test_multioutput.test_multi_target_regression ... 
[00:07:51] ok (0.4967s)
[00:07:51] sklearn.tests.test_multioutput.test_multi_target_regression_one_target ... 
[00:07:51] ok (0.0010s)
[00:07:51] sklearn.tests.test_multioutput.test_multi_target_sparse_regression ... 
[00:07:51] C:\Python27\lib\site-packages\sklearn\utils\validation.py:265: UserWarning: Can't check dok sparse matrix for nan or inf.
[00:07:51]   % spmatrix.format)
[00:07:51] ok (0.4583s)
[00:07:51] sklearn.tests.test_multioutput.test_multi_target_sample_weights_api ... 
[00:07:51] ok (0.0247s)
[00:07:51] sklearn.tests.test_multioutput.test_multi_target_sample_weights ... 
[00:07:52] ok (0.0513s)
[00:07:52] sklearn.tests.test_multioutput.test_multi_output_classification ... 
[00:07:52] ok (0.1443s)
[00:07:52] sklearn.tests.test_multioutput.test_multiclass_multioutput_estimator ... 
[00:07:52] ok (0.1618s)
[00:07:52] sklearn.tests.test_multioutput.test_multi_output_classification_sample_weights ... 
[00:07:52] ok (0.0845s)
[00:07:52] sklearn.tests.test_multioutput.test_multi_output_exceptions ... 
[00:07:52] ok (0.0628s)
[00:07:52] sklearn.tests.test_naive_bayes.test_gnb ... 
[00:07:52] ok (0.0020s)
[00:07:52] sklearn.tests.test_naive_bayes.test_gnb_prior ... 
[00:07:52] ok (0.0014s)
[00:07:52] Test whether sample weights are properly used in GNB. ... 
[00:07:52] ok (0.0040s)
[00:07:52] Test whether an error is raised in case of negative priors ... 
[00:07:52] ok (0.0004s)
[00:07:52] Test whether the class prior override is properly used ... 
[00:07:52] ok (0.0010s)
[00:07:52] Test whether an error is raised if the number of prior is different ... 
[00:07:52] ok (0.0004s)
[00:07:52] Test if an error is raised if the sum of prior greater than one ... 
[00:07:52] ok (0.0004s)
[00:07:52] Test if good prediction when class prior favor largely one class ... 
[00:07:52] ok (0.0008s)
[00:07:52] Test when the partial fit is called without any data ... 
[00:07:52] ok (0.0001s)
[00:07:52] Test whether an error is raised when the number of feature changes ... 
[00:07:52] ok (0.0007s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discrete_prior ... 
[00:07:52] ok (0.0016s)
[00:07:52] sklearn.tests.test_naive_bayes.test_mnnb ... C:\Python27\lib\site-packages\sklearn\naive_bayes.py:455: RuntimeWarning: divide by zero encountered in log
[00:07:52]   self.class_log_prior_ = (np.log(self.class_count_) -
[00:07:52] ok (0.0103s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discretenb_partial_fit(<class 'sklearn.naive_bayes.MultinomialNB'>,) ... ok (0.0020s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discretenb_partial_fit(<class 'sklearn.naive_bayes.BernoulliNB'>,) ... ok (0.0022s)
[00:07:52] sklearn.tests.test_naive_bayes.test_gnb_partial_fit ... ok (0.0024s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discretenb_pickle ... ok (0.0117s)
[00:07:52] sklearn.tests.test_naive_bayes.test_input_check_fit ... ok (0.0030s)
[00:07:52] sklearn.tests.test_naive_bayes.test_input_check_partial_fit ... ok (0.0041s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discretenb_predict_proba ... ok (0.0044s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discretenb_uniform_prior ... ok (0.0018s)
[00:07:52] sklearn.tests.test_naive_bayes.test_discretenb_provide_prior ... ok (0.0030s)
[00:07:52] sklearn.tests.t
[00:07:52] est_naive_bayes.test_discretenb_provide_prior_with_partial_fit ... ok (0.0078s)
[00:07:52] sklearn.tests.test_naive_bayes.test_sample_weight_multiclass(<class 'sklearn.naive_bayes.BernoulliNB'>,) ... ok (0.0025s)
[00:07:52] sklearn.tests.test_naive_bayes.test_sample_weight_multiclass(<class 'sklearn.naive_bayes.MultinomialNB'>,) ... ok (0.0022s)
[00:07:52] sklearn.tests.test_naive_bayes.test_sample_weight_mnb ... ok (0.0009s)
[00:07:52] sklearn.tests.test_naive_bayes.test_coef_intercept_shape ... 
[00:07:52] ok (0.0014s)
[00:07:52] sklearn.tests.test_naive_bayes.test_check_accuracy_on_digits ... 
[00:07:52] ok (0.2965s)
[00:07:52] sklearn.tests.test_naive_bayes.test_feature_log_prob_bnb ... 
[00:07:52] ok (0.0011s)
[00:07:52] sklearn.tests.test_naive_bayes.test_bnb ... 
[00:07:52] ok (0.0013s)
[00:07:52] sklearn.tests.test_naive_bayes.test_naive_bayes_scale_invariance ... 
[00:07:52] ok (0.0038s)
[00:07:52] sklearn.tests.test_pipeline.test_pipeline_init ... 
[00:07:52] ok (0.0086s)
[00:07:52] sklearn.tests.test_pipeline.test_pipeline_methods_anova ... 
[00:07:52] ok (0.0038s)
[00:07:52] sklearn.tests.test_pipeline.test_pipeline_fit_params ... 
[00:07:52] ok (0.0001s)
[00:07:52] sklearn.tests.test_pipeline.test_pipeline_raise_set_params_error ... 
[00:07:52] ok (0.0019s)
[00:07:52] sklearn.tests.test_pipeline.test_pipeline_methods_pca_svm ... 
[00:07:52] ok (0.0089s)
[00:07:52] sklearn.tests.test_pipeline.test_pipeline_methods_preprocessing_svm ... 
[00:07:52] ok (0.0180s)
[00:07:52] sklearn.tests.test_pipeline.test_fit_predict_on_pipeline ... 
[00:07:52] ok (0.0829s)
[00:07:52] sklearn.tests.test_pipeline.test_fit_predict_on_pipeline_without_fit_predict ... 
[00:07:52] ok (0.0005s)
[00:07:52] sklearn.tests.test_pipeline.test_feature_union ... 
[00:07:53] ok (0.0197s)
[00:07:53] sklearn.tests.test_pipeline.test_make_union ... 
[00:07:53] ok (0.0002s)
[00:07:53] sklearn.tests.test_pipeline.test_pipeline_transform ... 
[00:07:53] ok (0.0031s)
[00:07:53] sklearn.tests.test_pipeline.test_pipeline_fit_transform ... 
[00:07:53] ok (0.0026s)
[00:07:53] sklearn.tests.test_pipeline.test_make_pipeline ... 
[00:07:53] ok (0.0002s)
[00:07:53] sklearn.tests.test_pipeline.test_feature_union_weights ... 
[00:07:53] ok (0.0137s)
[00:07:53] sklearn.tests.test_pipeline.test_feature_union_parallel ... 
[00:07:58] ok (5.0574s)
[00:07:58] sklearn.tests.test_pipeline.test_feature_union_feature_names ... 
[00:07:58] ok (0.0049s)
[00:07:58] sklearn.tests.test_pipeline.test_classes_property ... ok (0.0069s)
[00:07:58] sklearn.tests.test_pipeline.test_X1d_inverse_transform ... ok (0.0033s)
[00:07:58] sklearn.tests.test_random_projection.test_invalid_jl_domain ... ok (0.0004s)
[00:07:58] sklearn.tests.test_random_projection.test_input_size_jl_min_dim ... ok (0.0005s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function sparse_random_matrix at 0x0D99A7B0>,) ... ok (0.0002s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function sparse_random_matrix at 0x0D99A7B0>,) ... ok (0.0008s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function sparse_random_matrix at 0x0D99A7B0>,) ... ok (0.0014s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function gaussian_random_matrix at 0x0D99A770>,) ... ok (0.0001s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function gaussian_random_matrix at 0x0D99A770>,) ... ok (0.0002s)
[00:07:58] sklea
[00:07:58] rn.tests.test_random_projection.test_basic_property_of_random_matrix(<function gaussian_random_matrix at 0x0D99A770>,) ... ok (0.0012s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function sparse_random_matrix at 0x0D99A7B0>,) ... ok (0.0001s)
[00:07:58] sklearn.tests.test_random_projection.test_basic_property_of_random_matrix(<function <lambda> at 0x11FA9DB0>,) ... ok (0.0012s)
[00:07:58] sklearn.tests.test_random_projection.test_gaussian_random_matrix ... ok (0.0087s)
[00:07:58] sklearn.tests.test_random_projection.test_sparse_random_matrix ... 
[00:07:58] ok (0.0303s)
[00:07:58] sklearn.tests.test_random_projection.test_sparse_random_projection_transformer_invalid_density ... 
[00:07:58] ok (0.0008s)
[00:07:58] sklearn.tests.test_random_projection.test_random_projection_transformer_invalid_input ... 
[00:07:58] ok (0.0009s)
[00:07:58] sklearn.tests.test_random_projection.test_try_to_transform_before_fit ... 
[00:07:58] ok (0.0003s)
[00:07:58] sklearn.tests.test_random_projection.test_too_many_samples_to_find_a_safe_embedding ... 
[00:07:58] ok (0.0021s)
[00:07:58] sklearn.tests.test_random_projection.test_random_projection_embedding_quality ... 
[00:07:58] ok (0.2344s)
[00:07:58] sklearn.tests.test_random_projection.test_SparseRandomProjection_output_representation ... 
[00:07:58] ok (0.0039s)
[00:07:58] sklearn.tests.test_random_projection.test_correct_RandomProjection_dimensions_embedding ... 
[00:07:58] ok (0.0256s)
[00:07:58] sklearn.tests.test_random_projection.test_warning_n_components_greater_than_n_features ... 
[00:07:58] ok (0.0060s)
[00:07:58] sklearn.tests.test_random_projection.test_works_with_sparse_data ... 
[00:07:58] Optimization terminated successfully.
[00:07:58]          Current function value: 0.000000
[00:07:58]          Iterations: 10
[00:07:58]          Function evaluations: 11
[00:07:58]          Gradient evaluations: 20
[00:07:58]          Hessian evaluations: 40
[00:07:58] ok (0.0037s)
[00:07:58] 
[00:07:58] ======================================================================
[00:07:58] ERROR: sklearn.model_selection.tests.test_validation.test_score_memmap
[00:07:58] ----------------------------------------------------------------------
[00:07:58] Traceback (most recent call last):
[00:07:58]   File "C:\Python27\lib\site-packages\nose\case.py", line 197, in runTest
[00:07:58]     self.test(*self.arg)
[00:07:58]   File "C:\Python27\lib\site-packages\sklearn\model_selection\tests\test_validation.py", line 785, in test_score_memmap
[00:07:58]     score = np.memmap(tf.name, shape=(), mode='w+', dtype=float)
[00:07:58]   File "C:\Python27\lib\site-packages\numpy\core\memmap.py", line 214, in __new__
[00:07:58]     fid = open(filename, (mode == 'c' and 'r' or mode)+'b')
[00:07:58] IOError: [Errno 22] invalid mode ('w+b') or filename: 'c:\\users\\appveyor\\appdata\\local\\temp\\1\\tmpf9if_6'
[00:07:58] 
[00:07:58] sklearn.ensemble.tests.test_bagging.test_base_estimator: 9.5557s
[00:07:58] sklearn.ensemble.tests.test_bagging.test_parallel_classification: 5.4215s
[00:07:58] sklearn.tests.test_pipeline.test_feature_union_parallel: 5.0574s
[00:07:58] sk
[00:07:58] learn.gaussian_process.tests.test_gpc.test_multi_class_n_jobs: 4.9494s
[00:07:58] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_kernels at 0x0D9346F0>, <function callable_rbf_kernel at 0x0E3EA4F0>, {'gamma': 0.1}): 4.9261s
[00:07:58] sklearn.decomposition.tests.test_sparse_pca.test_fit_transform_parallel: 4.4477s
[00:07:58] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_distances at 0x0D934670>, 'euclidean', {}): 4.2220s
[00:07:58] sklearn.neighbors.tests.test_neighbors.test_same_knn_parallel('brute',): 3.9844s
[00:07:58] sklearn.metrics.tests.test_pairwise.test_pairwise_parallel(<function pairwise_kernels at 0x0D9346F0>, 'polynomial', {'degree': 1}): 3.7332s
[00:07:58] sklearn.ensemble.tests.test_bagging.test_classification: 3.5789s
[00:07:58] sklearn.cluster.tests.test_mean_shift.test_parallel: 3.4907s
[00:07:58] sklearn.ensemble.tests.test_bagging.test_oob_score_removed_on_warm_start: 3.2250s
[00:07:58] sklearn.feature_extraction.tests.test_image.test_connect_regions: 3.0712s
[00:07:58] sklearn.metrics.tests.test_pairwise.test_pairwise_parall
[00:07:58] el(<function pairwise_distances at 0x0D934670>, <function wminkowski at 0x0D92C730>, {'p': 1, 'w': array([ 1.,  2.,  3.,  4.])}): 3.0307s
[00:07:58] sklearn.ensemble.tests.test_bagging.test_parallel_regression: 2.9843s
[00:07:58] sklearn.model_selection.tests.test_split.test_nested_cv: 2.5755s
[00:07:58] sklearn.manifold.tests.test_t_sne.test_preserve_trustworthiness_approximately: 2.5363s
[00:07:58] sklearn.tests.test_cross_validation.test_kfold_can_detect_dependent_samples_on_digits: 2.4143s
[00:07:58] sklearn.decomposition.tests.test_online_lda.test_lda_multi_jobs: 2.4008s
[00:07:58] sklearn.feature_extraction.tests.test_image.test_connect_regions_with_grid: 2.3048s
[00:07:58] ----------------------------------------------------------------------
[00:07:58] Ran 6770 tests in 295.135s
[00:07:58] 
[00:07:58] FAILED (SKIP=32, errors=1)
[00:07:58] Command exited with code 1
